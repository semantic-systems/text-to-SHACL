@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix ff: <https://foerderfunke.org/default#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

# METADATA
ff:B100019_LB_582441 a ff:SocialBenefit ;
    rdfs:label "Gesetzliche Unfallversicherung Witwen- und Witwerrente"@de, "Statutory accident insurance widow's pension"@en .

# CONSTRAINTS
ff:GUVWitwenrenteShape a sh:NodeShape ;
    sh:targetNode ff:User ;
    sh:or (
        [
            # Check deceased spouse or civil partner
            sh:and (
                [
                    sh:path ff:deceasedSpouse, ff:deceasedCivilPartner ;
                    sh:minCount 1 ;
                    sh:qualifiedMinCount 1 ;
                    sh:qualifiedValueShape ff:DeceasedPartnerShape
                ]
            )
        ]
    ) .

ff:DeceasedPartnerShape a sh:NodeShape ;
    # Requirement: Deceased had statutory accident insurance
    sh:property [
        sh:path ff:hasInsurance ;
        sh:minCount 1 ;
        sh:hasValue ff:StatutoryAccidentInsurance ;
        sh:message "Partner does not have statutory accident insurance"@en
    ] ;
    # Requirement: Death caused by allowed insurance event with prior union
    sh:property [
        sh:path ff:causeOfDeath ;
        sh:minCount 1 ;
        sh:node ff:EventCheckShape
    ] .

ff:EventCheckShape a sh:NodeShape ;
    # Event must be allowed type (Work/Commuting Accident/Occupational Disease)
    sh:or (
        [sh:class ff:WorkAccident]
        [sh:class ff:CommutingAccident]
        [sh:class ff:OccupationalDisease]
    ) ;
    # User must be in legal union before event
    sh:property [
        sh:path ff:legalUnionBeforeEvent ;
        sh:minCount 1 ;
        sh:hasValue ff:User ;
        sh:message "No prior union at time of event"@en
    ] .