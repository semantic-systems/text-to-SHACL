@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix ff: <https://foerderfunke.org/default#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

# METADATA

ff:B100019_LB_102716305 a ff:SocialBenefit ;
    rdfs:label "Übergangsgeld für Menschen mit Behinderung"@de, "Transitional allowance for people with disabilities"@en .

# CONSTRAINTS

ff:ÜbergangsgeldShape a sh:NodeShape ;
    ff:checksFundingRequirement ff:B100019_LB_102716305 ;
    sh:targetNode ff:User ;
    # User has a disability
    sh:property [
        sh:path ff:hasDisability ;
        sh:minCount 1 ;
        sh:in (true) ;
        sh:message "Does not meet requirement 'User has a disability'"@en
    ] ;
    # User's rehabilitation provider is the Federal Employment Agency
    sh:property [
        sh:path ff:hasRehabilitationProvider ;
        sh:minCount 1 ;
        sh:in (ff:FederalEmploymentAgency) ;
        sh:message "Does not meet requirement 'User's rehabilitation provider is the Federal Employment Agency'"@en
    ] ;
    # User will participate in one of the allowed measures
    sh:property [
        sh:path ff:participates ;
        sh:minCount 1 ;
        sh:qualifiedValueShape ff:MeasuresShape ;
    ] ;
    # One of the three requirements for the 3-year period before the measure applies
    sh:or (
        [
            sh:property [
                sh:path ff:compulsoryInsuranceFor12In30 ;
                sh:minCount 1 ;
                sh:in (true) ;
            ]
        ]
        [
            sh:property [
                sh:path ff:hasEmploymentStatus ;
                sh:minCount 1 ;
                sh:qualifiedValueShape ff:RegisteredUnemployedShape ;
            ]
        ]
        [
            sh:property [
                sh:path ff:receivesBenefit ;
                sh:minCount 1 ;
                sh:qualifiedValueShape ff:UnemploymentBenefitsSVGShape ;
            ]
        ]
    ) ;
    # Optional exception: User is a vocational returnee with disabilities
    sh:property [
        sh:path ff:isVocationalReturnee ;
        sh:in (true) ;
    ] ;
    # Optional exception: User completed vocational training or obtained equivalent certification within the last year
    sh:property [
        sh:or (
            [
                sh:property [
                    sh:path ff:participates ;
                    sh:qualifiedMinCount 1 ;
                    sh:qualifiedValueShape ff:TrainingWithEquivalentCertificationShape ;
                ]
            ]
            [
                sh:property [
                    sh:path ff:participates ;
                    sh:qualifiedMinCount 1 ;
                    sh:qualifiedValueShape ff:TrainingWithEquivalentAbschlussShape ;
                ]
            ]
        )
    ] .

ff:MeasuresShape a sh:NodeShape ;
    sh:or (
        [
            sh:property [
                sh:path rdf:type ;
                sh:minCount 1 ;
                sh:in (ff:Berufsausbildung) ;
            ]
        ]
        [
            sh:property [
                sh:path rdf:type ;
                sh:minCount 1 ;
                sh:in (ff:Berufsvorbereitung) ;
            ]
        ]
        [
            sh:property [
                sh:path rdf:type ;
                sh:minCount 1 ;
                sh:in (ff:IndividuelleBetrieblicheQualifizierung) ;
            ]
        ]
        [
            sh:property [
                sh:path rdf:type ;
                sh:minCount 1 ;
                sh:in (ff:EingangsverfahrenUndBerufsbildungsbereich) ;
            ]
        ]
        [
            sh:property [
                sh:path rdf:type ;
                sh:minCount 1 ;
                sh:in (ff:BeruflicheWeiterbildung) ;
            ]
        ]
    ) .

ff:RegisteredUnemployedShape a sh:NodeShape ;
    sh:property [
        sh:path rdf:type ;
        sh:minCount 1 ;
        sh:in (ff:RegisteredUnemployed) ;
    ] .

ff:UnemploymentBenefitsSVGShape a sh:NodeShape ;
    sh:property [
        sh:path rdf:type ;
        sh:minCount 1 ;
        sh:in (ff:UnemploymentBenefitsSVG) ;
    ] .

ff:TrainingWithEquivalentCertificationShape a sh:NodeShape ;
    sh:property [
        sh:path ff:isEquivalentTo ;
        sh:minCount 1 ;
        sh:qualifiedValueShape ff:EquivalentCertificationShape ;
    ] ;
    sh:property [
        sh:path ff:lessThanFourMonthsAgo ;
        sh:minCount 1 ;
        sh:in (true) ;
    ] .

ff:EquivalentCertificationShape a sh:NodeShape ;
    sh:property [
        sh:path rdf:type ;
        sh:minCount 1 ;
        sh:in (ff:Berufsausbildung) ;
    ] ;
    sh:property [
        sh:path ff:recognizedByLaw ;
        sh:minCount 1 ;
        sh:qualifiedValueShape ff:EquivalentCertificationLawShape ;
    ] .

ff:EquivalentCertificationLawShape a sh:NodeShape ;
    sh:property [
        sh:path rdf:type ;
        sh:minCount 1 ;
        sh:in (ff:VocationalTrainingAct) ;
    ] .

ff:TrainingWithEquivalentAbschlussShape a sh:NodeShape ;
    sh:property [
        sh:path rdf:type ;
        sh:minCount 1 ;
        sh:in (ff:Berufsausbildung) ;
    ] ;
    sh:property [
        sh:path ff:recognizedByLaw ;
        sh:minCount 1 ;
        sh:qualifiedValueShape ff:EquivalentAbschlussLawShape ;
    ] ;
    sh:property [
        sh:path ff:lessThanFourMonthsAgo ;
        sh:minCount 1 ;
        sh:in (true) ;
    ] .

ff:EquivalentAbschlussLawShape a sh:NodeShape ;
    sh:property [
        sh:path rdf:type ;
        sh:minCount 1 ;
        sh:in (ff:VocationalTrainingAct) ;
    ] .