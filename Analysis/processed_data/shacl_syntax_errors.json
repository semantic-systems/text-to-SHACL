[
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "qwen2.5-72b-instruct",
        "file": "baseline_qwen2.5-72b-instruct_kinderzuschlag.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/qwen2.5-72b-instruct/output/parsed_output/baseline_qwen2.5-72b-instruct_kinderzuschlag.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (4):\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ShapeShape ; sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ]\n\tFocus Node: ( [ sh:and [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isSingleParent ] ; sh:minInclusive Literal(\"600\", datatype=xsd:integer) ] [ sh:and [ sh:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:isSingleParent ] ; sh:minInclusive Literal(\"900\", datatype=xsd:integer) ] )\n\tValue Node: [ sh:and [ sh:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:isSingleParent ] ; sh:minInclusive Literal(\"900\", datatype=xsd:integer) ]\n\tResult Path: ( [ sh:zeroOrMorePath rdf:rest ] rdf:first )\n\tMessage: Value does not conform to Shape shsh:ShapeShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ sh:node shsh:ListShape ; sh:path sh:and ]\n\t\t\tFocus Node: [ sh:and [ sh:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:isSingleParent ] ; sh:minInclusive Literal(\"900\", datatype=xsd:integer) ]\n\t\t\tValue Node: [ sh:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:isSingleParent ]\n\t\t\tResult Path: sh:and\n\t\t\tMessage: Value does not conform to Shape shsh:ListShape. See details for more information.\n\t\t\tDetails:\n\t\t\t\tConstraint Violation in HasValueConstraintComponent (http://www.w3.org/ns/shacl#HasValueConstraintComponent):\n\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\t\t\tFocus Node: [ sh:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:isSingleParent ]\n\t\t\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\t\t\tMessage: Node [ sh:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:isSingleParent ]->[ sh:zeroOrMorePath rdf:rest ] does not contain a value in the set: ['rdf:nil']\n\t\t\t\tConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\t\t\tFocus Node: [ sh:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:isSingleParent ]\n\t\t\t\t\tValue Node: [ sh:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:isSingleParent ]\n\t\t\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\t\t\tMessage: Value does not conform to Shape shsh:ListNodeShape. See details for more information.\n\t\t\t\t\tDetails:\n\t\t\t\t\t\tConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\t\t\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\t\t\tSource Shape: shsh:ListNodeShape\n\t\t\t\t\t\t\tFocus Node: [ sh:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:isSingleParent ]\n\t\t\t\t\t\t\tValue Node: [ sh:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:isSingleParent ]\n\t\t\t\t\t\t\tMessage: Node [ sh:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:isSingleParent ] must conform to one or more shapes in [ sh:hasValue rdf:nil ; sh:property [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:rest ] ] , [ sh:not [ sh:hasValue rdf:nil ] ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:rest ] ]\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ShapeShape ; sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ]\n\tFocus Node: ( [ sh:and [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isSingleParent ] ; sh:minInclusive Literal(\"600\", datatype=xsd:integer) ] [ sh:and [ sh:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:isSingleParent ] ; sh:minInclusive Literal(\"900\", datatype=xsd:integer) ] )\n\tValue Node: [ sh:and [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isSingleParent ] ; sh:minInclusive Literal(\"600\", datatype=xsd:integer) ]\n\tResult Path: ( [ sh:zeroOrMorePath rdf:rest ] rdf:first )\n\tMessage: Value does not conform to Shape shsh:ShapeShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ sh:node shsh:ListShape ; sh:path sh:and ]\n\t\t\tFocus Node: [ sh:and [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isSingleParent ] ; sh:minInclusive Literal(\"600\", datatype=xsd:integer) ]\n\t\t\tValue Node: [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isSingleParent ]\n\t\t\tResult Path: sh:and\n\t\t\tMessage: Value does not conform to Shape shsh:ListShape. See details for more information.\n\t\t\tDetails:\n\t\t\t\tConstraint Violation in HasValueConstraintComponent (http://www.w3.org/ns/shacl#HasValueConstraintComponent):\n\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\t\t\tFocus Node: [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isSingleParent ]\n\t\t\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\t\t\tMessage: Node [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isSingleParent ]->[ sh:zeroOrMorePath rdf:rest ] does not contain a value in the set: ['rdf:nil']\n\t\t\t\tConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\t\t\tFocus Node: [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isSingleParent ]\n\t\t\t\t\tValue Node: [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isSingleParent ]\n\t\t\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\t\t\tMessage: Value does not conform to Shape shsh:ListNodeShape. See details for more information.\n\t\t\t\t\tDetails:\n\t\t\t\t\t\tConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\t\t\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\t\t\tSource Shape: shsh:ListNodeShape\n\t\t\t\t\t\t\tFocus Node: [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isSingleParent ]\n\t\t\t\t\t\t\tValue Node: [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isSingleParent ]\n\t\t\t\t\t\t\tMessage: Node [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isSingleParent ] must conform to one or more shapes in [ sh:hasValue rdf:nil ; sh:property [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:rest ] ] , [ sh:not [ sh:hasValue rdf:nil ] ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:rest ] ]\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ListShape ; sh:path sh:and ]\n\tFocus Node: [ sh:and [ sh:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:isSingleParent ] ; sh:minInclusive Literal(\"900\", datatype=xsd:integer) ]\n\tValue Node: [ sh:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:isSingleParent ]\n\tResult Path: sh:and\n\tMessage: Value does not conform to Shape shsh:ListShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in HasValueConstraintComponent (http://www.w3.org/ns/shacl#HasValueConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:isSingleParent ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Node [ sh:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:isSingleParent ]->[ sh:zeroOrMorePath rdf:rest ] does not contain a value in the set: ['rdf:nil']\n\t\tConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:isSingleParent ]\n\t\t\tValue Node: [ sh:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:isSingleParent ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Value does not conform to Shape shsh:ListNodeShape. See details for more information.\n\t\t\tDetails:\n\t\t\t\tConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\tSource Shape: shsh:ListNodeShape\n\t\t\t\t\tFocus Node: [ sh:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:isSingleParent ]\n\t\t\t\t\tValue Node: [ sh:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:isSingleParent ]\n\t\t\t\t\tMessage: Node [ sh:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:isSingleParent ] must conform to one or more shapes in [ sh:hasValue rdf:nil ; sh:property [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:rest ] ] , [ sh:not [ sh:hasValue rdf:nil ] ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:rest ] ]\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ListShape ; sh:path sh:and ]\n\tFocus Node: [ sh:and [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isSingleParent ] ; sh:minInclusive Literal(\"600\", datatype=xsd:integer) ]\n\tValue Node: [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isSingleParent ]\n\tResult Path: sh:and\n\tMessage: Value does not conform to Shape shsh:ListShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in HasValueConstraintComponent (http://www.w3.org/ns/shacl#HasValueConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isSingleParent ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Node [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isSingleParent ]->[ sh:zeroOrMorePath rdf:rest ] does not contain a value in the set: ['rdf:nil']\n\t\tConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isSingleParent ]\n\t\t\tValue Node: [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isSingleParent ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Value does not conform to Shape shsh:ListNodeShape. See details for more information.\n\t\t\tDetails:\n\t\t\t\tConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\tSource Shape: shsh:ListNodeShape\n\t\t\t\t\tFocus Node: [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isSingleParent ]\n\t\t\t\t\tValue Node: [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isSingleParent ]\n\t\t\t\t\tMessage: Node [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isSingleParent ] must conform to one or more shapes in [ sh:hasValue rdf:nil ; sh:property [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:rest ] ] , [ sh:not [ sh:hasValue rdf:nil ] ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:rest ] ]\n",
        "nof_validation_results": 4,
        "validation_results": [
            {
                "source_shape": "[ sh:node shsh:ShapeShape ; sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ]",
                "message": "Value does not conform to Shape shsh:ShapeShape. See details for more information."
            },
            {
                "source_shape": "[ sh:node shsh:ShapeShape ; sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ]",
                "message": "Value does not conform to Shape shsh:ShapeShape. See details for more information."
            },
            {
                "source_shape": "[ sh:node shsh:ListShape ; sh:path sh:and ]",
                "message": "Value does not conform to Shape shsh:ListShape. See details for more information."
            },
            {
                "source_shape": "[ sh:node shsh:ListShape ; sh:path sh:and ]",
                "message": "Value does not conform to Shape shsh:ListShape. See details for more information."
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "qwen2.5-72b-instruct",
        "file": "baseline_qwen2.5-72b-instruct_grundausbildung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/qwen2.5-72b-instruct/output/parsed_output/baseline_qwen2.5-72b-instruct_grundausbildung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "qwen2.5-72b-instruct",
        "file": "baseline_qwen2.5-72b-instruct_buergergeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/qwen2.5-72b-instruct/output/parsed_output/baseline_qwen2.5-72b-instruct_buergergeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "qwen2.5-72b-instruct",
        "file": "baseline_qwen2.5-72b-instruct_guv-waisenrente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/qwen2.5-72b-instruct/output/parsed_output/baseline_qwen2.5-72b-instruct_guv-waisenrente.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "deepseek-r1-distill-llama-70b",
        "file": "baseline_deepseek-r1-distill-llama-70b_guv-uebergangsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/deepseek-r1-distill-llama-70b/output/parsed_output/baseline_deepseek-r1-distill-llama-70b_guv-uebergangsgeld.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (1):\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:class ]\n\tFocus Node: [ sh:class [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ] ; sh:path ff:hasEvent ]\n\tValue Node: [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ]\n\tResult Path: sh:class\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 1,
        "validation_results": [
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:class ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "deepseek-r1-distill-llama-70b",
        "file": "baseline_deepseek-r1-distill-llama-70b_aktivierung-und-eingliederung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/deepseek-r1-distill-llama-70b/output/parsed_output/baseline_deepseek-r1-distill-llama-70b_aktivierung-und-eingliederung.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (2):\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:class ff:CareNeed ; sh:predicate ff:needsCare ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:class ff:CareNeed ; sh:predicate ff:needsCare ]->sh:path\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:hasValue ff:B100019_LB_102716305 ; sh:predicate ff:receivesBenefit ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:hasValue ff:B100019_LB_102716305 ; sh:predicate ff:receivesBenefit ]->sh:path\n",
        "nof_validation_results": 2,
        "validation_results": [
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:class ff:CareNeed ; sh:predicate ff:needsCare ]->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:hasValue ff:B100019_LB_102716305 ; sh:predicate ff:receivesBenefit ]->sh:path"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "deepseek-r1-distill-llama-70b",
        "file": "baseline_deepseek-r1-distill-llama-70b_guv-rentenabfindung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/deepseek-r1-distill-llama-70b/output/parsed_output/baseline_deepseek-r1-distill-llama-70b_guv-rentenabfindung.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (2):\nConstraint Violation in MaxCountConstraintComponent (http://www.w3.org/ns/shacl#MaxCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:hasValue [ ] ; sh:path ff:deceasedCivilPartner, ff:deceasedSpouse ]\n\tResult Path: sh:path\n\tMessage: More than 1 values on [ sh:hasValue [ ] ; sh:path ff:deceasedCivilPartner, ff:deceasedSpouse ]->sh:path\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:hasValue [ ] ; sh:path ff:deceasedCivilPartner, ff:deceasedSpouse ]\n\tValue Node: [ sh:hasValue [ ] ; sh:path ff:deceasedCivilPartner, ff:deceasedSpouse ]\n\tMessage: Node [ sh:hasValue [ ] ; sh:path ff:deceasedCivilPartner, ff:deceasedSpouse ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\n",
        "nof_validation_results": 2,
        "validation_results": [
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "More than 1 values on [ sh:hasValue [ ] ; sh:path ff:deceasedCivilPartner, ff:deceasedSpouse ]->sh:path"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:hasValue [ ] ; sh:path ff:deceasedCivilPartner, ff:deceasedSpouse ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "deepseek-r1-distill-llama-70b",
        "file": "baseline_deepseek-r1-distill-llama-70b_kindergeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/deepseek-r1-distill-llama-70b/output/parsed_output/baseline_deepseek-r1-distill-llama-70b_kindergeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "deepseek-r1-distill-llama-70b",
        "file": "baseline_deepseek-r1-distill-llama-70b_guv-waisenrente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/deepseek-r1-distill-llama-70b/output/parsed_output/baseline_deepseek-r1-distill-llama-70b_guv-waisenrente.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (8):\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ShapeShape ; sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ]\n\tFocus Node: ( [ sh:path ff:hasChild ] [ sh:path ff:stepChildTo ] [ sh:path ff:fosterChildTo ] [ sh:path ff:naturalChildTo ] [ sh:path [ sh:inverse ff:immediateCircleMember ] ] )\n\tValue Node: [ sh:path [ sh:inverse ff:immediateCircleMember ] ]\n\tResult Path: ( [ sh:zeroOrMorePath rdf:rest ] rdf:first )\n\tMessage: Value does not conform to Shape shsh:ShapeShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: shsh:ShapeShape\n\t\t\tFocus Node: [ sh:path [ sh:inverse ff:immediateCircleMember ] ]\n\t\t\tValue Node: [ sh:path [ sh:inverse ff:immediateCircleMember ] ]\n\t\t\tMessage: Node [ sh:path [ sh:inverse ff:immediateCircleMember ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:or ( [ sh:path ff:hasChild ] [ sh:path ff:stepChildTo ] [ sh:path ff:fosterChildTo ] [ sh:path ff:naturalChildTo ] [ sh:path [ sh:inverse ff:immediateCircleMember ] ] ) ; sh:path [ sh:inverse ff:closeRelative ] ]\n\tValue Node: [ sh:inverse ff:closeRelative ]\n\tResult Path: sh:path\n\tMessage: Node [ sh:inverse ff:closeRelative ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]\nConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:or ( [ sh:path ff:WorkAccident ] [ sh:path ff:CommutingAccident ] [ sh:path ff:OccupationalDisease ] ) ; sh:path [ sh:inverse ff:resultsInTreatment ] ]\n\tValue Node: [ sh:inverse ff:resultsInTreatment ]\n\tResult Path: sh:path\n\tMessage: Node [ sh:inverse ff:resultsInTreatment ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:or ( [ sh:path ff:hasChild ] [ sh:path ff:stepChildTo ] [ sh:path ff:fosterChildTo ] [ sh:path ff:naturalChildTo ] [ sh:path [ sh:inverse ff:immediateCircleMember ] ] ) ; sh:path [ sh:inverse ff:closeRelative ] ]\n\tValue Node: [ sh:or ( [ sh:path ff:hasChild ] [ sh:path ff:stepChildTo ] [ sh:path ff:fosterChildTo ] [ sh:path ff:naturalChildTo ] [ sh:path [ sh:inverse ff:immediateCircleMember ] ] ) ; sh:path [ sh:inverse ff:closeRelative ] ]\n\tMessage: Node [ sh:or ( [ sh:path ff:hasChild ] [ sh:path ff:stepChildTo ] [ sh:path ff:fosterChildTo ] [ sh:path ff:naturalChildTo ] [ sh:path [ sh:inverse ff:immediateCircleMember ] ] ) ; sh:path [ sh:inverse ff:closeRelative ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:or ( [ sh:path ff:WorkAccident ] [ sh:path ff:CommutingAccident ] [ sh:path ff:OccupationalDisease ] ) ; sh:path [ sh:inverse ff:resultsInTreatment ] ]\n\tValue Node: [ sh:or ( [ sh:path ff:WorkAccident ] [ sh:path ff:CommutingAccident ] [ sh:path ff:OccupationalDisease ] ) ; sh:path [ sh:inverse ff:resultsInTreatment ] ]\n\tMessage: Node [ sh:or ( [ sh:path ff:WorkAccident ] [ sh:path ff:CommutingAccident ] [ sh:path ff:OccupationalDisease ] ) ; sh:path [ sh:inverse ff:resultsInTreatment ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:equals [ sh:inverse ff:deceasedSpouse ] ; sh:path ff:hasPrimaryCareTaker ]\n\tValue Node: [ sh:inverse ff:deceasedSpouse ]\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:severeDisability ]\n\tValue Node: Literal(\"true\" = True, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:hasDisability ]\n\tValue Node: Literal(\"true\" = True, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 8,
        "validation_results": [
            {
                "source_shape": "[ sh:node shsh:ShapeShape ; sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ]",
                "message": "Value does not conform to Shape shsh:ShapeShape. See details for more information."
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Node [ sh:inverse ff:closeRelative ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Node [ sh:inverse ff:resultsInTreatment ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:or ( [ sh:path ff:hasChild ] [ sh:path ff:stepChildTo ] [ sh:path ff:fosterChildTo ] [ sh:path ff:naturalChildTo ] [ sh:path [ sh:inverse ff:immediateCircleMember ] ] ) ; sh:path [ sh:inverse ff:closeRelative ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:or ( [ sh:path ff:WorkAccident ] [ sh:path ff:CommutingAccident ] [ sh:path ff:OccupationalDisease ] ) ; sh:path [ sh:inverse ff:resultsInTreatment ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "deepseek-r1-distill-llama-70b",
        "file": "baseline_deepseek-r1-distill-llama-70b_arbeitslosengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/deepseek-r1-distill-llama-70b/output/parsed_output/baseline_deepseek-r1-distill-llama-70b_arbeitslosengeld.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (4):\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:inEmployment ]\n\tValue Node: Literal(\"false\" = False, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:compulsoryInsuranceFor12In30 ]\n\tValue Node: Literal(\"true\" = True, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:availableForPlacement ]\n\tValue Node: Literal(\"true\" = True, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:lessThan ]\n\tFocus Node: [ sh:lessThan Literal(\"15\", datatype=xsd:integer) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:workHoursPerWeek ]\n\tValue Node: Literal(\"15\", datatype=xsd:integer)\n\tResult Path: sh:lessThan\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 4,
        "validation_results": [
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:lessThan ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "deepseek-r1-distill-llama-70b",
        "file": "baseline_deepseek-r1-distill-llama-70b_guv-verletztengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/deepseek-r1-distill-llama-70b/output/parsed_output/baseline_deepseek-r1-distill-llama-70b_guv-verletztengeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "deepseek-r1-distill-llama-70b",
        "file": "baseline_deepseek-r1-distill-llama-70b_guv-witwenrente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/deepseek-r1-distill-llama-70b/output/parsed_output/baseline_deepseek-r1-distill-llama-70b_guv-witwenrente.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (1):\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:class ]\n\tFocus Node: [ sh:class [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ] ; sh:path ff:causeOfDeath ]\n\tValue Node: [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ]\n\tResult Path: sh:class\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 1,
        "validation_results": [
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:class ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "deepseek-r1-distill-llama-70b",
        "file": "baseline_deepseek-r1-distill-llama-70b_buergergeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/deepseek-r1-distill-llama-70b/output/parsed_output/baseline_deepseek-r1-distill-llama-70b_buergergeld.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (1):\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:canCoverPersonalBasicNeeds ]\n\tValue Node: Literal(\"false\" = False, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 1,
        "validation_results": [
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "deepseek-r1-distill-llama-70b",
        "file": "baseline_deepseek-r1-distill-llama-70b_krankengeld-begleitperson.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/deepseek-r1-distill-llama-70b/output/parsed_output/baseline_deepseek-r1-distill-llama-70b_krankengeld-begleitperson.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "deepseek-r1-distill-llama-70b",
        "file": "baseline_deepseek-r1-distill-llama-70b_berufsausbildungsbeihilfe.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/deepseek-r1-distill-llama-70b/output/parsed_output/baseline_deepseek-r1-distill-llama-70b_berufsausbildungsbeihilfe.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (2):\nConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:hasValue ff:B100019_LB_574724 ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:isEligibleFor ] ]\n\tValue Node: [ sh:inverse ff:isEligibleFor ]\n\tResult Path: sh:path\n\tMessage: Node [ sh:inverse ff:isEligibleFor ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:hasValue ff:B100019_LB_574724 ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:isEligibleFor ] ]\n\tValue Node: [ sh:hasValue ff:B100019_LB_574724 ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:isEligibleFor ] ]\n\tMessage: Node [ sh:hasValue ff:B100019_LB_574724 ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:isEligibleFor ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\n",
        "nof_validation_results": 2,
        "validation_results": [
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Node [ sh:inverse ff:isEligibleFor ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:hasValue ff:B100019_LB_574724 ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:isEligibleFor ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "deepseek-r1-distill-llama-70b",
        "file": "baseline_deepseek-r1-distill-llama-70b_bildung-und-teilhabe.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/deepseek-r1-distill-llama-70b/output/parsed_output/baseline_deepseek-r1-distill-llama-70b_bildung-und-teilhabe.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (7):\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:canCoverPersonalBasicNeeds ]\n\tValue Node: Literal(\"false\" = False, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:canCoverPersonalBasicNeeds ]\n\tValue Node: Literal(\"false\" = False, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ListShape ; sh:path sh:or ]\n\tFocus Node: [ sh:hasValue ff:B100019_LB_102716305 ; sh:or [ sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:canCoverPersonalBasicNeeds ], [ sh:hasValue ff:AsylumSeekerBenefits ; sh:path [ sh:zeroOrMorePath ff:receivesBenefit ] ], [ sh:hasValue ff:L100040_LB_8665924 ; sh:path [ sh:zeroOrMorePath ff:receivesBenefit ] ], [ sh:hasValue ff:SocialAssistance ; sh:path [ sh:zeroOrMorePath ff:receivesBenefit ] ] ; sh:path [ sh:zeroOrMorePath ff:receivesBenefit ] ]\n\tValue Node: [ sh:hasValue ff:AsylumSeekerBenefits ; sh:path [ sh:zeroOrMorePath ff:receivesBenefit ] ]\n\tResult Path: sh:or\n\tMessage: Value does not conform to Shape shsh:ListShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in HasValueConstraintComponent (http://www.w3.org/ns/shacl#HasValueConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:hasValue ff:AsylumSeekerBenefits ; sh:path [ sh:zeroOrMorePath ff:receivesBenefit ] ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Node [ sh:hasValue ff:AsylumSeekerBenefits ; sh:path [ sh:zeroOrMorePath ff:receivesBenefit ] ]->[ sh:zeroOrMorePath rdf:rest ] does not contain a value in the set: ['rdf:nil']\n\t\tConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:hasValue ff:AsylumSeekerBenefits ; sh:path [ sh:zeroOrMorePath ff:receivesBenefit ] ]\n\t\t\tValue Node: [ sh:hasValue ff:AsylumSeekerBenefits ; sh:path [ sh:zeroOrMorePath ff:receivesBenefit ] ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Value does not conform to Shape shsh:ListNodeShape. See details for more information.\n\t\t\tDetails:\n\t\t\t\tConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\tSource Shape: shsh:ListNodeShape\n\t\t\t\t\tFocus Node: [ sh:hasValue ff:AsylumSeekerBenefits ; sh:path [ sh:zeroOrMorePath ff:receivesBenefit ] ]\n\t\t\t\t\tValue Node: [ sh:hasValue ff:AsylumSeekerBenefits ; sh:path [ sh:zeroOrMorePath ff:receivesBenefit ] ]\n\t\t\t\t\tMessage: Node [ sh:hasValue ff:AsylumSeekerBenefits ; sh:path [ sh:zeroOrMorePath ff:receivesBenefit ] ] must conform to one or more shapes in [ sh:hasValue rdf:nil ; sh:property [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:rest ] ] , [ sh:not [ sh:hasValue rdf:nil ] ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:rest ] ]\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ListShape ; sh:path sh:or ]\n\tFocus Node: [ sh:hasValue ff:B100019_LB_102716305 ; sh:or [ sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:canCoverPersonalBasicNeeds ], [ sh:hasValue ff:AsylumSeekerBenefits ; sh:path [ sh:zeroOrMorePath ff:receivesBenefit ] ], [ sh:hasValue ff:L100040_LB_8665924 ; sh:path [ sh:zeroOrMorePath ff:receivesBenefit ] ], [ sh:hasValue ff:SocialAssistance ; sh:path [ sh:zeroOrMorePath ff:receivesBenefit ] ] ; sh:path [ sh:zeroOrMorePath ff:receivesBenefit ] ]\n\tValue Node: [ sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:canCoverPersonalBasicNeeds ]\n\tResult Path: sh:or\n\tMessage: Value does not conform to Shape shsh:ListShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in HasValueConstraintComponent (http://www.w3.org/ns/shacl#HasValueConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:canCoverPersonalBasicNeeds ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Node [ sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:canCoverPersonalBasicNeeds ]->[ sh:zeroOrMorePath rdf:rest ] does not contain a value in the set: ['rdf:nil']\n\t\tConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:canCoverPersonalBasicNeeds ]\n\t\t\tValue Node: [ sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:canCoverPersonalBasicNeeds ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Value does not conform to Shape shsh:ListNodeShape. See details for more information.\n\t\t\tDetails:\n\t\t\t\tConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\tSource Shape: shsh:ListNodeShape\n\t\t\t\t\tFocus Node: [ sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:canCoverPersonalBasicNeeds ]\n\t\t\t\t\tValue Node: [ sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:canCoverPersonalBasicNeeds ]\n\t\t\t\t\tMessage: Node [ sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:canCoverPersonalBasicNeeds ] must conform to one or more shapes in [ sh:hasValue rdf:nil ; sh:property [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:rest ] ] , [ sh:not [ sh:hasValue rdf:nil ] ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:rest ] ]\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ListShape ; sh:path sh:or ]\n\tFocus Node: [ sh:hasValue ff:B100019_LB_102716305 ; sh:or [ sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:canCoverPersonalBasicNeeds ], [ sh:hasValue ff:AsylumSeekerBenefits ; sh:path [ sh:zeroOrMorePath ff:receivesBenefit ] ], [ sh:hasValue ff:L100040_LB_8665924 ; sh:path [ sh:zeroOrMorePath ff:receivesBenefit ] ], [ sh:hasValue ff:SocialAssistance ; sh:path [ sh:zeroOrMorePath ff:receivesBenefit ] ] ; sh:path [ sh:zeroOrMorePath ff:receivesBenefit ] ]\n\tValue Node: [ sh:hasValue ff:L100040_LB_8665924 ; sh:path [ sh:zeroOrMorePath ff:receivesBenefit ] ]\n\tResult Path: sh:or\n\tMessage: Value does not conform to Shape shsh:ListShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in HasValueConstraintComponent (http://www.w3.org/ns/shacl#HasValueConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:hasValue ff:L100040_LB_8665924 ; sh:path [ sh:zeroOrMorePath ff:receivesBenefit ] ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Node [ sh:hasValue ff:L100040_LB_8665924 ; sh:path [ sh:zeroOrMorePath ff:receivesBenefit ] ]->[ sh:zeroOrMorePath rdf:rest ] does not contain a value in the set: ['rdf:nil']\n\t\tConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:hasValue ff:L100040_LB_8665924 ; sh:path [ sh:zeroOrMorePath ff:receivesBenefit ] ]\n\t\t\tValue Node: [ sh:hasValue ff:L100040_LB_8665924 ; sh:path [ sh:zeroOrMorePath ff:receivesBenefit ] ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Value does not conform to Shape shsh:ListNodeShape. See details for more information.\n\t\t\tDetails:\n\t\t\t\tConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\tSource Shape: shsh:ListNodeShape\n\t\t\t\t\tFocus Node: [ sh:hasValue ff:L100040_LB_8665924 ; sh:path [ sh:zeroOrMorePath ff:receivesBenefit ] ]\n\t\t\t\t\tValue Node: [ sh:hasValue ff:L100040_LB_8665924 ; sh:path [ sh:zeroOrMorePath ff:receivesBenefit ] ]\n\t\t\t\t\tMessage: Node [ sh:hasValue ff:L100040_LB_8665924 ; sh:path [ sh:zeroOrMorePath ff:receivesBenefit ] ] must conform to one or more shapes in [ sh:hasValue rdf:nil ; sh:property [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:rest ] ] , [ sh:not [ sh:hasValue rdf:nil ] ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:rest ] ]\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ListShape ; sh:path sh:or ]\n\tFocus Node: [ sh:hasValue ff:B100019_LB_102716305 ; sh:or [ sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:canCoverPersonalBasicNeeds ], [ sh:hasValue ff:AsylumSeekerBenefits ; sh:path [ sh:zeroOrMorePath ff:receivesBenefit ] ], [ sh:hasValue ff:L100040_LB_8665924 ; sh:path [ sh:zeroOrMorePath ff:receivesBenefit ] ], [ sh:hasValue ff:SocialAssistance ; sh:path [ sh:zeroOrMorePath ff:receivesBenefit ] ] ; sh:path [ sh:zeroOrMorePath ff:receivesBenefit ] ]\n\tValue Node: [ sh:hasValue ff:SocialAssistance ; sh:path [ sh:zeroOrMorePath ff:receivesBenefit ] ]\n\tResult Path: sh:or\n\tMessage: Value does not conform to Shape shsh:ListShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in HasValueConstraintComponent (http://www.w3.org/ns/shacl#HasValueConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:hasValue ff:SocialAssistance ; sh:path [ sh:zeroOrMorePath ff:receivesBenefit ] ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Node [ sh:hasValue ff:SocialAssistance ; sh:path [ sh:zeroOrMorePath ff:receivesBenefit ] ]->[ sh:zeroOrMorePath rdf:rest ] does not contain a value in the set: ['rdf:nil']\n\t\tConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:hasValue ff:SocialAssistance ; sh:path [ sh:zeroOrMorePath ff:receivesBenefit ] ]\n\t\t\tValue Node: [ sh:hasValue ff:SocialAssistance ; sh:path [ sh:zeroOrMorePath ff:receivesBenefit ] ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Value does not conform to Shape shsh:ListNodeShape. See details for more information.\n\t\t\tDetails:\n\t\t\t\tConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\tSource Shape: shsh:ListNodeShape\n\t\t\t\t\tFocus Node: [ sh:hasValue ff:SocialAssistance ; sh:path [ sh:zeroOrMorePath ff:receivesBenefit ] ]\n\t\t\t\t\tValue Node: [ sh:hasValue ff:SocialAssistance ; sh:path [ sh:zeroOrMorePath ff:receivesBenefit ] ]\n\t\t\t\t\tMessage: Node [ sh:hasValue ff:SocialAssistance ; sh:path [ sh:zeroOrMorePath ff:receivesBenefit ] ] must conform to one or more shapes in [ sh:hasValue rdf:nil ; sh:property [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:rest ] ] , [ sh:not [ sh:hasValue rdf:nil ] ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:rest ] ]\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ListShape ; sh:path sh:or ]\n\tFocus Node: [ sh:max Literal(\"18\", datatype=xsd:integer) ; sh:or [ sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:canCoverPersonalBasicNeeds ] ; sh:path ff:hasAge ]\n\tValue Node: [ sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:canCoverPersonalBasicNeeds ]\n\tResult Path: sh:or\n\tMessage: Value does not conform to Shape shsh:ListShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in HasValueConstraintComponent (http://www.w3.org/ns/shacl#HasValueConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:canCoverPersonalBasicNeeds ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Node [ sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:canCoverPersonalBasicNeeds ]->[ sh:zeroOrMorePath rdf:rest ] does not contain a value in the set: ['rdf:nil']\n\t\tConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:canCoverPersonalBasicNeeds ]\n\t\t\tValue Node: [ sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:canCoverPersonalBasicNeeds ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Value does not conform to Shape shsh:ListNodeShape. See details for more information.\n\t\t\tDetails:\n\t\t\t\tConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\tSource Shape: shsh:ListNodeShape\n\t\t\t\t\tFocus Node: [ sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:canCoverPersonalBasicNeeds ]\n\t\t\t\t\tValue Node: [ sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:canCoverPersonalBasicNeeds ]\n\t\t\t\t\tMessage: Node [ sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:canCoverPersonalBasicNeeds ] must conform to one or more shapes in [ sh:hasValue rdf:nil ; sh:property [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:rest ] ] , [ sh:not [ sh:hasValue rdf:nil ] ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:rest ] ]\n",
        "nof_validation_results": 7,
        "validation_results": [
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:node shsh:ListShape ; sh:path sh:or ]",
                "message": "Value does not conform to Shape shsh:ListShape. See details for more information."
            },
            {
                "source_shape": "[ sh:node shsh:ListShape ; sh:path sh:or ]",
                "message": "Value does not conform to Shape shsh:ListShape. See details for more information."
            },
            {
                "source_shape": "[ sh:node shsh:ListShape ; sh:path sh:or ]",
                "message": "Value does not conform to Shape shsh:ListShape. See details for more information."
            },
            {
                "source_shape": "[ sh:node shsh:ListShape ; sh:path sh:or ]",
                "message": "Value does not conform to Shape shsh:ListShape. See details for more information."
            },
            {
                "source_shape": "[ sh:node shsh:ListShape ; sh:path sh:or ]",
                "message": "Value does not conform to Shape shsh:ListShape. See details for more information."
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "deepseek-r1-distill-llama-70b",
        "file": "baseline_deepseek-r1-distill-llama-70b_guv-rente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/deepseek-r1-distill-llama-70b/output/parsed_output/baseline_deepseek-r1-distill-llama-70b_guv-rente.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "qwq-32b",
        "file": "baseline_qwq-32b_bildung-und-teilhabe.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/qwq-32b/output/parsed_output/baseline_qwq-32b_bildung-und-teilhabe.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "qwq-32b",
        "file": "baseline_qwq-32b_aktivierung-und-eingliederung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/qwq-32b/output/parsed_output/baseline_qwq-32b_aktivierung-und-eingliederung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "qwq-32b",
        "file": "baseline_qwq-32b_guv-witwenrente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/qwq-32b/output/parsed_output/baseline_qwq-32b_guv-witwenrente.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (3):\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:or ( [ sh:path ff:deceasedSpouse ; sh:qualifiedMinCount Literal(\"1\", datatype=xsd:integer) ; sh:qualifiedValueShape [ rdf:type sh:NodeShape ; sh:property [ sh:class [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ] ; sh:path ff:causeOfDeath ] ] ] [ sh:path ff:deceasedCivilPartner ; sh:qualifiedMinCount Literal(\"1\", datatype=xsd:integer) ; sh:qualifiedValueShape [ rdf:type sh:NodeShape ; sh:property [ sh:class [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ] ; sh:path ff:causeOfDeath ] ] ] ) ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:or ( [ sh:path ff:deceasedSpouse ; sh:qualifiedMinCount Literal(\"1\", datatype=xsd:integer) ; sh:qualifiedValueShape [ rdf:type sh:NodeShape ; sh:property [ sh:class [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ] ; sh:path ff:causeOfDeath ] ] ] [ sh:path ff:deceasedCivilPartner ; sh:qualifiedMinCount Literal(\"1\", datatype=xsd:integer) ; sh:qualifiedValueShape [ rdf:type sh:NodeShape ; sh:property [ sh:class [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ] ; sh:path ff:causeOfDeath ] ] ] ) ]->sh:path\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:class ]\n\tFocus Node: [ sh:class [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ] ; sh:path ff:causeOfDeath ]\n\tValue Node: [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ]\n\tResult Path: sh:class\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:class ]\n\tFocus Node: [ sh:class [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ] ; sh:path ff:causeOfDeath ]\n\tValue Node: [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ]\n\tResult Path: sh:class\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 3,
        "validation_results": [
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:or ( [ sh:path ff:deceasedSpouse ; sh:qualifiedMinCount Literal(\"1\", datatype=xsd:integer) ; sh:qualifiedValueShape [ rdf:type sh:NodeShape ; sh:property [ sh:class [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ] ; sh:path ff:causeOfDeath ] ] ] [ sh:path ff:deceasedCivilPartner ; sh:qualifiedMinCount Literal(\"1\", datatype=xsd:integer) ; sh:qualifiedValueShape [ rdf:type sh:NodeShape ; sh:property [ sh:class [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ] ; sh:path ff:causeOfDeath ] ] ] ) ]->sh:path"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:class ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:class ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "qwq-32b",
        "file": "baseline_qwq-32b_guv-verletztengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/qwq-32b/output/parsed_output/baseline_qwq-32b_guv-verletztengeld.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (3):\nConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:class [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ] ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:sequence ( ff:hasEarningCapacity ff:triggeringEvent ) ] ]\n\tValue Node: [ sh:sequence ( ff:hasEarningCapacity ff:triggeringEvent ) ]\n\tResult Path: sh:path\n\tMessage: Node [ sh:sequence ( ff:hasEarningCapacity ff:triggeringEvent ) ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:class [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ] ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:sequence ( ff:hasEarningCapacity ff:triggeringEvent ) ] ]\n\tValue Node: [ sh:class [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ] ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:sequence ( ff:hasEarningCapacity ff:triggeringEvent ) ] ]\n\tMessage: Node [ sh:class [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ] ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:sequence ( ff:hasEarningCapacity ff:triggeringEvent ) ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:class ]\n\tFocus Node: [ sh:class [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ] ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:sequence ( ff:hasEarningCapacity ff:triggeringEvent ) ] ]\n\tValue Node: [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ]\n\tResult Path: sh:class\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 3,
        "validation_results": [
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Node [ sh:sequence ( ff:hasEarningCapacity ff:triggeringEvent ) ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:class [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ] ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:sequence ( ff:hasEarningCapacity ff:triggeringEvent ) ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:class ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "qwq-32b",
        "file": "baseline_qwq-32b_guv-uebergangsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/qwq-32b/output/parsed_output/baseline_qwq-32b_guv-uebergangsgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "qwq-32b",
        "file": "baseline_qwq-32b_arbeitslosengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/qwq-32b/output/parsed_output/baseline_qwq-32b_arbeitslosengeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "baseline_llama-3.1-sauerkrautlm-70b-instruct_guv-rentenabfindung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/baseline_llama-3.1-sauerkrautlm-70b-instruct_guv-rentenabfindung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "baseline_llama-3.1-sauerkrautlm-70b-instruct_ausbildungsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/baseline_llama-3.1-sauerkrautlm-70b-instruct_ausbildungsgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "baseline_llama-3.1-sauerkrautlm-70b-instruct_krankengeld-begleitperson.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/baseline_llama-3.1-sauerkrautlm-70b-instruct_krankengeld-begleitperson.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (6):\nConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:message Literal(\"You are not married or in a civil union to the person with disability.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:legalUnionBeforeEvent ] ; sh:property [ sh:message Literal(\"The person with disability has no residence permit.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasResidencePermit ; sh:property [ sh:message Literal(\"The residence permit does not entitle to employment.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:entitlesToEmployment ] ] ]\n\tValue Node: [ sh:inverse ff:legalUnionBeforeEvent ]\n\tResult Path: sh:path\n\tMessage: Node [ sh:inverse ff:legalUnionBeforeEvent ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]\nConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:message Literal(\"You are not a caregiver to the person with disability.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:caregiverInHousehold ] ; sh:property [ sh:message Literal(\"The person with disability does not need care.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:needsCare ; sh:property [ sh:message Literal(\"The care need does not result in medical treatment.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:resultsInTreatment ; sh:property [ sh:message Literal(\"The treatment does not require full day accompaniment.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:fullDayAccompaniment ] ] ] ]\n\tValue Node: [ sh:inverse ff:caregiverInHousehold ]\n\tResult Path: sh:path\n\tMessage: Node [ sh:inverse ff:caregiverInHousehold ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]\nConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:message Literal(\"You are not a caregiver to the person with disability.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:caregiverInHousehold ] ; sh:property [ sh:message Literal(\"The person with disability does not need care.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:needsCare ; sh:property [ sh:message Literal(\"The care need does not result in medical treatment.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:resultsInTreatment ; sh:property [ sh:message Literal(\"There is no medical treatment event.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasEvent ; sh:property [ sh:message Literal(\"There is no treatment date.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasDate ], [ sh:message Literal(\"You are not married or in a civil union to the person with disability.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:legalUnionBeforeEvent ] ; sh:property [ sh:message Literal(\"The person with disability has no residence permit.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasResidencePermit ; sh:property [ sh:message Literal(\"The residence permit does not entitle to employment.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:entitlesToEmployment ] ] ] ] ] ] ]\n\tValue Node: [ sh:inverse ff:caregiverInHousehold ]\n\tResult Path: sh:path\n\tMessage: Node [ sh:inverse ff:caregiverInHousehold ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:message Literal(\"You are not married or in a civil union to the person with disability.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:legalUnionBeforeEvent ] ; sh:property [ sh:message Literal(\"The person with disability has no residence permit.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasResidencePermit ; sh:property [ sh:message Literal(\"The residence permit does not entitle to employment.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:entitlesToEmployment ] ] ]\n\tValue Node: [ sh:message Literal(\"You are not married or in a civil union to the person with disability.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:legalUnionBeforeEvent ] ; sh:property [ sh:message Literal(\"The person with disability has no residence permit.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasResidencePermit ; sh:property [ sh:message Literal(\"The residence permit does not entitle to employment.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:entitlesToEmployment ] ] ]\n\tMessage: Node [ sh:message Literal(\"You are not married or in a civil union to the person with disability.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:legalUnionBeforeEvent ] ; sh:property [ sh:message Literal(\"The person with disability has no residence permit.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasResidencePermit ; sh:property [ sh:message Literal(\"The residence permit does not entitle to employment.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:entitlesToEmployment ] ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:message Literal(\"You are not a caregiver to the person with disability.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:caregiverInHousehold ] ; sh:property [ sh:message Literal(\"The person with disability does not need care.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:needsCare ; sh:property [ sh:message Literal(\"The care need does not result in medical treatment.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:resultsInTreatment ; sh:property [ sh:message Literal(\"The treatment does not require full day accompaniment.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:fullDayAccompaniment ] ] ] ]\n\tValue Node: [ sh:message Literal(\"You are not a caregiver to the person with disability.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:caregiverInHousehold ] ; sh:property [ sh:message Literal(\"The person with disability does not need care.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:needsCare ; sh:property [ sh:message Literal(\"The care need does not result in medical treatment.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:resultsInTreatment ; sh:property [ sh:message Literal(\"The treatment does not require full day accompaniment.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:fullDayAccompaniment ] ] ] ]\n\tMessage: Node [ sh:message Literal(\"You are not a caregiver to the person with disability.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:caregiverInHousehold ] ; sh:property [ sh:message Literal(\"The person with disability does not need care.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:needsCare ; sh:property [ sh:message Literal(\"The care need does not result in medical treatment.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:resultsInTreatment ; sh:property [ sh:message Literal(\"The treatment does not require full day accompaniment.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:fullDayAccompaniment ] ] ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:message Literal(\"You are not a caregiver to the person with disability.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:caregiverInHousehold ] ; sh:property [ sh:message Literal(\"The person with disability does not need care.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:needsCare ; sh:property [ sh:message Literal(\"The care need does not result in medical treatment.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:resultsInTreatment ; sh:property [ sh:message Literal(\"There is no medical treatment event.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasEvent ; sh:property [ sh:message Literal(\"There is no treatment date.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasDate ], [ sh:message Literal(\"You are not married or in a civil union to the person with disability.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:legalUnionBeforeEvent ] ; sh:property [ sh:message Literal(\"The person with disability has no residence permit.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasResidencePermit ; sh:property [ sh:message Literal(\"The residence permit does not entitle to employment.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:entitlesToEmployment ] ] ] ] ] ] ]\n\tValue Node: [ sh:message Literal(\"You are not a caregiver to the person with disability.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:caregiverInHousehold ] ; sh:property [ sh:message Literal(\"The person with disability does not need care.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:needsCare ; sh:property [ sh:message Literal(\"The care need does not result in medical treatment.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:resultsInTreatment ; sh:property [ sh:message Literal(\"There is no medical treatment event.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasEvent ; sh:property [ sh:message Literal(\"There is no treatment date.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasDate ], [ sh:message Literal(\"You are not married or in a civil union to the person with disability.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:legalUnionBeforeEvent ] ; sh:property [ sh:message Literal(\"The person with disability has no residence permit.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasResidencePermit ; sh:property [ sh:message Literal(\"The residence permit does not entitle to employment.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:entitlesToEmployment ] ] ] ] ] ] ]\n\tMessage: Node [ sh:message Literal(\"You are not a caregiver to the person with disability.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:caregiverInHousehold ] ; sh:property [ sh:message Literal(\"The person with disability does not need care.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:needsCare ; sh:property [ sh:message Literal(\"The care need does not result in medical treatment.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:resultsInTreatment ; sh:property [ sh:message Literal(\"There is no medical treatment event.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasEvent ; sh:property [ sh:message Literal(\"There is no treatment date.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasDate ], [ sh:message Literal(\"You are not married or in a civil union to the person with disability.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:legalUnionBeforeEvent ] ; sh:property [ sh:message Literal(\"The person with disability has no residence permit.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasResidencePermit ; sh:property [ sh:message Literal(\"The residence permit does not entitle to employment.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:entitlesToEmployment ] ] ] ] ] ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\n",
        "nof_validation_results": 6,
        "validation_results": [
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Node [ sh:inverse ff:legalUnionBeforeEvent ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Node [ sh:inverse ff:caregiverInHousehold ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Node [ sh:inverse ff:caregiverInHousehold ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:message Literal(\"You are not married or in a civil union to the person with disability.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:legalUnionBeforeEvent ] ; sh:property [ sh:message Literal(\"The person with disability has no residence permit.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasResidencePermit ; sh:property [ sh:message Literal(\"The residence permit does not entitle to employment.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:entitlesToEmployment ] ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:message Literal(\"You are not a caregiver to the person with disability.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:caregiverInHousehold ] ; sh:property [ sh:message Literal(\"The person with disability does not need care.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:needsCare ; sh:property [ sh:message Literal(\"The care need does not result in medical treatment.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:resultsInTreatment ; sh:property [ sh:message Literal(\"The treatment does not require full day accompaniment.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:fullDayAccompaniment ] ] ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:message Literal(\"You are not a caregiver to the person with disability.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:caregiverInHousehold ] ; sh:property [ sh:message Literal(\"The person with disability does not need care.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:needsCare ; sh:property [ sh:message Literal(\"The care need does not result in medical treatment.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:resultsInTreatment ; sh:property [ sh:message Literal(\"There is no medical treatment event.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasEvent ; sh:property [ sh:message Literal(\"There is no treatment date.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasDate ], [ sh:message Literal(\"You are not married or in a civil union to the person with disability.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:legalUnionBeforeEvent ] ; sh:property [ sh:message Literal(\"The person with disability has no residence permit.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasResidencePermit ; sh:property [ sh:message Literal(\"The residence permit does not entitle to employment.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:entitlesToEmployment ] ] ] ] ] ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "baseline_llama-3.1-sauerkrautlm-70b-instruct_bildung-und-teilhabe.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/baseline_llama-3.1-sauerkrautlm-70b-instruct_bildung-und-teilhabe.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (1):\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:lessThan ]\n\tFocus Node: [ sh:lessThan [ sh:node ff:LowIncomeThreshold ; sh:property [ sh:path ff:personalGrossIncome ; sh:sum [ _:n3578133561b84b40a13c302640ab2788b18 [ sh:inversePath ff:fosterChildTo ] ] ] ] ; sh:path ff:familyGrossIncome ]\n\tValue Node: [ sh:node ff:LowIncomeThreshold ; sh:property [ sh:path ff:personalGrossIncome ; sh:sum [ _:n3578133561b84b40a13c302640ab2788b18 [ sh:inversePath ff:fosterChildTo ] ] ] ]\n\tResult Path: sh:lessThan\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 1,
        "validation_results": [
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:lessThan ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "baseline_llama-3.1-sauerkrautlm-70b-instruct_grundausbildung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/baseline_llama-3.1-sauerkrautlm-70b-instruct_grundausbildung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "baseline_llama-3.1-sauerkrautlm-70b-instruct_buergergeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/baseline_llama-3.1-sauerkrautlm-70b-instruct_buergergeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "baseline_llama-3.1-sauerkrautlm-70b-instruct_berufsausbildungsbeihilfe.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/baseline_llama-3.1-sauerkrautlm-70b-instruct_berufsausbildungsbeihilfe.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "baseline_llama-3.1-sauerkrautlm-70b-instruct_guv-uebergangsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/baseline_llama-3.1-sauerkrautlm-70b-instruct_guv-uebergangsgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "baseline_llama-3.1-sauerkrautlm-70b-instruct_guv-witwenrente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/baseline_llama-3.1-sauerkrautlm-70b-instruct_guv-witwenrente.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (1):\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:class ]\n\tFocus Node: [ sh:class [ sh:in ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ] ; sh:message Literal(\"The event that caused your partner's death must have been a work accident, commuting accident or occupational disease.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:BlankNodeOrIRI ; sh:path ff:resultsInTreatment ]\n\tValue Node: [ sh:in ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ]\n\tResult Path: sh:class\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 1,
        "validation_results": [
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:class ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "baseline_llama-3.1-sauerkrautlm-70b-instruct_guv-rente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/baseline_llama-3.1-sauerkrautlm-70b-instruct_guv-rente.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "baseline_llama-3.1-sauerkrautlm-70b-instruct_arbeitslosengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/baseline_llama-3.1-sauerkrautlm-70b-instruct_arbeitslosengeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "baseline_llama-3.1-sauerkrautlm-70b-instruct_kinderzuschlag.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/baseline_llama-3.1-sauerkrautlm-70b-instruct_kinderzuschlag.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "baseline_llama-3.1-sauerkrautlm-70b-instruct_grundsicherung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/baseline_llama-3.1-sauerkrautlm-70b-instruct_grundsicherung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "baseline_llama-3.1-sauerkrautlm-70b-instruct_guv-kinderverletztengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/baseline_llama-3.1-sauerkrautlm-70b-instruct_guv-kinderverletztengeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "baseline_llama-3.1-sauerkrautlm-70b-instruct_kindergeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/baseline_llama-3.1-sauerkrautlm-70b-instruct_kindergeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "llama-3.3-70b-instruct",
        "file": "baseline_llama-3.3-70b-instruct_krankengeld-begleitperson.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/llama-3.3-70b-instruct/output/parsed_output/baseline_llama-3.3-70b-instruct_krankengeld-begleitperson.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "llama-3.3-70b-instruct",
        "file": "baseline_llama-3.3-70b-instruct_buergergeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/llama-3.3-70b-instruct/output/parsed_output/baseline_llama-3.3-70b-instruct_buergergeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "llama-3.3-70b-instruct",
        "file": "baseline_llama-3.3-70b-instruct_guv-kinderverletztengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/llama-3.3-70b-instruct/output/parsed_output/baseline_llama-3.3-70b-instruct_guv-kinderverletztengeld.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (10):\nConstraint Violation in MaxCountConstraintComponent (http://www.w3.org/ns/shacl#MaxCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path sh:path ]\n\tFocus Node: [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:node [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:isNationalOf ] ; sh:path ff:resultsInTreatment ]\n\tResult Path: sh:path\n\tMessage: More than 0 values on [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:node [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:isNationalOf ] ; sh:path ff:resultsInTreatment ]->sh:path\nConstraint Violation in MaxCountConstraintComponent (http://www.w3.org/ns/shacl#MaxCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path sh:path ]\n\tFocus Node: [ sh:max Literal(\"0\", datatype=xsd:integer) ; sh:path ff:isPensionable ]\n\tResult Path: sh:path\n\tMessage: More than 0 values on [ sh:max Literal(\"0\", datatype=xsd:integer) ; sh:path ff:isPensionable ]->sh:path\nConstraint Violation in MaxCountConstraintComponent (http://www.w3.org/ns/shacl#MaxCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path sh:path ]\n\tFocus Node: [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:isNationalOf ]\n\tResult Path: sh:path\n\tMessage: More than 0 values on [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:isNationalOf ]->sh:path\nConstraint Violation in MaxCountConstraintComponent (http://www.w3.org/ns/shacl#MaxCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path sh:path ]\n\tFocus Node: [ sh:max Literal(\"12\", datatype=xsd:integer) ; sh:path ff:hasAge ]\n\tResult Path: sh:path\n\tMessage: More than 0 values on [ sh:max Literal(\"12\", datatype=xsd:integer) ; sh:path ff:hasAge ]->sh:path\nConstraint Violation in MaxCountConstraintComponent (http://www.w3.org/ns/shacl#MaxCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path sh:path ]\n\tFocus Node: [ sh:minInclusive Literal(\"15\", datatype=xsd:integer) ; sh:path ff:workHoursPerWeek ]\n\tResult Path: sh:path\n\tMessage: More than 0 values on [ sh:minInclusive Literal(\"15\", datatype=xsd:integer) ; sh:path ff:workHoursPerWeek ]->sh:path\nConstraint Violation in MaxCountConstraintComponent (http://www.w3.org/ns/shacl#MaxCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path sh:path ]\n\tFocus Node: [ sh:minInclusive Literal(\"0\", datatype=xsd:integer) ; sh:path ff:personalGrossIncome ]\n\tResult Path: sh:path\n\tMessage: More than 0 values on [ sh:minInclusive Literal(\"0\", datatype=xsd:integer) ; sh:path ff:personalGrossIncome ]->sh:path\nConstraint Violation in MaxCountConstraintComponent (http://www.w3.org/ns/shacl#MaxCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path sh:path ]\n\tFocus Node: [ sh:minCount Literal(\"0\", datatype=xsd:integer) ; sh:path ff:canCoverBasicNeedsOfBenefitUnit ]\n\tResult Path: sh:path\n\tMessage: More than 0 values on [ sh:minCount Literal(\"0\", datatype=xsd:integer) ; sh:path ff:canCoverBasicNeedsOfBenefitUnit ]->sh:path\nConstraint Violation in MaxCountConstraintComponent (http://www.w3.org/ns/shacl#MaxCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path sh:minCount ]\n\tFocus Node: [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:node [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:isNationalOf ] ; sh:path ff:resultsInTreatment ]\n\tResult Path: sh:minCount\n\tMessage: More than 0 values on [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:node [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:isNationalOf ] ; sh:path ff:resultsInTreatment ]->sh:minCount\nConstraint Violation in MaxCountConstraintComponent (http://www.w3.org/ns/shacl#MaxCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path sh:minCount ]\n\tFocus Node: [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:isNationalOf ]\n\tResult Path: sh:minCount\n\tMessage: More than 0 values on [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:isNationalOf ]->sh:minCount\nConstraint Violation in MaxCountConstraintComponent (http://www.w3.org/ns/shacl#MaxCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path sh:minCount ]\n\tFocus Node: [ sh:minCount Literal(\"0\", datatype=xsd:integer) ; sh:path ff:canCoverBasicNeedsOfBenefitUnit ]\n\tResult Path: sh:minCount\n\tMessage: More than 0 values on [ sh:minCount Literal(\"0\", datatype=xsd:integer) ; sh:path ff:canCoverBasicNeedsOfBenefitUnit ]->sh:minCount\n",
        "nof_validation_results": 10,
        "validation_results": [
            {
                "source_shape": "[ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path sh:path ]",
                "message": "More than 0 values on [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:node [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:isNationalOf ] ; sh:path ff:resultsInTreatment ]->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path sh:path ]",
                "message": "More than 0 values on [ sh:max Literal(\"0\", datatype=xsd:integer) ; sh:path ff:isPensionable ]->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path sh:path ]",
                "message": "More than 0 values on [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:isNationalOf ]->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path sh:path ]",
                "message": "More than 0 values on [ sh:max Literal(\"12\", datatype=xsd:integer) ; sh:path ff:hasAge ]->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path sh:path ]",
                "message": "More than 0 values on [ sh:minInclusive Literal(\"15\", datatype=xsd:integer) ; sh:path ff:workHoursPerWeek ]->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path sh:path ]",
                "message": "More than 0 values on [ sh:minInclusive Literal(\"0\", datatype=xsd:integer) ; sh:path ff:personalGrossIncome ]->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path sh:path ]",
                "message": "More than 0 values on [ sh:minCount Literal(\"0\", datatype=xsd:integer) ; sh:path ff:canCoverBasicNeedsOfBenefitUnit ]->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path sh:minCount ]",
                "message": "More than 0 values on [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:node [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:isNationalOf ] ; sh:path ff:resultsInTreatment ]->sh:minCount"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path sh:minCount ]",
                "message": "More than 0 values on [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:isNationalOf ]->sh:minCount"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path sh:minCount ]",
                "message": "More than 0 values on [ sh:minCount Literal(\"0\", datatype=xsd:integer) ; sh:path ff:canCoverBasicNeedsOfBenefitUnit ]->sh:minCount"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "llama-3.3-70b-instruct",
        "file": "baseline_llama-3.3-70b-instruct_grundausbildung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/llama-3.3-70b-instruct/output/parsed_output/baseline_llama-3.3-70b-instruct_grundausbildung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "llama-3.3-70b-instruct",
        "file": "baseline_llama-3.3-70b-instruct_uebergangsgeld-behinderung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/llama-3.3-70b-instruct/output/parsed_output/baseline_llama-3.3-70b-instruct_uebergangsgeld-behinderung.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (1):\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:class ]\n\tFocus Node: [ sh:class [ sh:or ( ff:VocationalTraining ff:Berufsvorbereitung ff:Unterst\u00fctzteBesch\u00e4ftigung ff:EingangsverfahrenUndBerufsbildungsbereich ff:BeruflicheWeiterbildung ) ] ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:participates ]\n\tValue Node: [ sh:or ( ff:VocationalTraining ff:Berufsvorbereitung ff:Unterst\u00fctzteBesch\u00e4ftigung ff:EingangsverfahrenUndBerufsbildungsbereich ff:BeruflicheWeiterbildung ) ]\n\tResult Path: sh:class\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 1,
        "validation_results": [
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:class ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "llama-3.3-70b-instruct",
        "file": "baseline_llama-3.3-70b-instruct_guv-rentenabfindung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/llama-3.3-70b-instruct/output/parsed_output/baseline_llama-3.3-70b-instruct_guv-rentenabfindung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "llama-3.3-70b-instruct",
        "file": "baseline_llama-3.3-70b-instruct_guv-waisenrente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/llama-3.3-70b-instruct/output/parsed_output/baseline_llama-3.3-70b-instruct_guv-waisenrente.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "llama-3.3-70b-instruct",
        "file": "baseline_llama-3.3-70b-instruct_kindergeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/llama-3.3-70b-instruct/output/parsed_output/baseline_llama-3.3-70b-instruct_kindergeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "llama-3.3-70b-instruct",
        "file": "baseline_llama-3.3-70b-instruct_arbeitslosengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/llama-3.3-70b-instruct/output/parsed_output/baseline_llama-3.3-70b-instruct_arbeitslosengeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "llama-3.3-70b-instruct",
        "file": "baseline_llama-3.3-70b-instruct_guv-rente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/llama-3.3-70b-instruct/output/parsed_output/baseline_llama-3.3-70b-instruct_guv-rente.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "mistral-large-instruct",
        "file": "baseline_mistral-large-instruct_buergergeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/mistral-large-instruct/output/parsed_output/baseline_mistral-large-instruct_buergergeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "mistral-large-instruct",
        "file": "baseline_mistral-large-instruct_guv-witwenrente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/mistral-large-instruct/output/parsed_output/baseline_mistral-large-instruct_guv-witwenrente.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "mistral-large-instruct",
        "file": "baseline_mistral-large-instruct_uebergangsgeld-behinderung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/mistral-large-instruct/output/parsed_output/baseline_mistral-large-instruct_uebergangsgeld-behinderung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "mistral-large-instruct",
        "file": "baseline_mistral-large-instruct_guv-waisenrente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/mistral-large-instruct/output/parsed_output/baseline_mistral-large-instruct_guv-waisenrente.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (1):\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:lessThan ]\n\tFocus Node: [ sh:greaterThanOrEquals Literal(\"18\", datatype=xsd:integer) ; sh:lessThan Literal(\"27\", datatype=xsd:integer) ; sh:path ff:hasAge ]\n\tValue Node: Literal(\"27\", datatype=xsd:integer)\n\tResult Path: sh:lessThan\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 1,
        "validation_results": [
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:lessThan ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "mistral-large-instruct",
        "file": "baseline_mistral-large-instruct_bildung-und-teilhabe.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/mistral-large-instruct/output/parsed_output/baseline_mistral-large-instruct_bildung-und-teilhabe.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (2):\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:lessThanOrEquals ]\n\tFocus Node: [ sh:lessThanOrEquals Literal(\"18\", datatype=xsd:integer) ; sh:path ff:hasAge ]\n\tValue Node: Literal(\"18\", datatype=xsd:integer)\n\tResult Path: sh:lessThanOrEquals\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:lessThanOrEquals ]\n\tFocus Node: [ sh:lessThanOrEquals Literal(\"25\", datatype=xsd:integer) ; sh:path ff:hasAge ]\n\tValue Node: Literal(\"25\", datatype=xsd:integer)\n\tResult Path: sh:lessThanOrEquals\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 2,
        "validation_results": [
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:lessThanOrEquals ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:lessThanOrEquals ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "mistral-large-instruct",
        "file": "baseline_mistral-large-instruct_guv-rentenabfindung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/mistral-large-instruct/output/parsed_output/baseline_mistral-large-instruct_guv-rentenabfindung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "mistral-large-instruct",
        "file": "baseline_mistral-large-instruct_ausbildungsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/mistral-large-instruct/output/parsed_output/baseline_mistral-large-instruct_ausbildungsgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "mistral-large-instruct",
        "file": "baseline_mistral-large-instruct_berufsausbildungsbeihilfe.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/mistral-large-instruct/output/parsed_output/baseline_mistral-large-instruct_berufsausbildungsbeihilfe.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (16):\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ShapeShape ; sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ]\n\tFocus Node: ( [ sh:class ff:VocationalTraining ; sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isFirstVocationalTraining ] [ sh:class ff:Disability, ff:VocationalTraining ; sh:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:isFirstVocationalTraining, ff:workforceIntegrationProblemBecause ] )\n\tValue Node: [ sh:class ff:Disability, ff:VocationalTraining ; sh:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:isFirstVocationalTraining, ff:workforceIntegrationProblemBecause ]\n\tResult Path: ( [ sh:zeroOrMorePath rdf:rest ] rdf:first )\n\tMessage: Value does not conform to Shape shsh:ShapeShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: shsh:ShapeShape\n\t\t\tFocus Node: [ sh:class ff:Disability, ff:VocationalTraining ; sh:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:isFirstVocationalTraining, ff:workforceIntegrationProblemBecause ]\n\t\t\tValue Node: [ sh:class ff:Disability, ff:VocationalTraining ; sh:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:isFirstVocationalTraining, ff:workforceIntegrationProblemBecause ]\n\t\t\tMessage: Node [ sh:class ff:Disability, ff:VocationalTraining ; sh:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:isFirstVocationalTraining, ff:workforceIntegrationProblemBecause ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ShapeShape ; sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ]\n\tFocus Node: ( [ sh:maxInclusive Literal(\"50\", datatype=xsd:integer) ; sh:minExclusive Literal(\"0\", datatype=xsd:integer) ] [ sh:maxInclusive Literal(\"100\", datatype=xsd:integer), Literal(\"12\", datatype=xsd:integer) ; sh:minExclusive Literal(\"50\", datatype=xsd:integer) ; sh:path ff:monthsAbroad ] )\n\tValue Node: [ sh:maxInclusive Literal(\"100\", datatype=xsd:integer), Literal(\"12\", datatype=xsd:integer) ; sh:minExclusive Literal(\"50\", datatype=xsd:integer) ; sh:path ff:monthsAbroad ]\n\tResult Path: ( [ sh:zeroOrMorePath rdf:rest ] rdf:first )\n\tMessage: Value does not conform to Shape shsh:ShapeShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in MaxCountConstraintComponent (http://www.w3.org/ns/shacl#MaxCountConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Literal ; sh:path sh:maxInclusive ]\n\t\t\tFocus Node: [ sh:maxInclusive Literal(\"100\", datatype=xsd:integer), Literal(\"12\", datatype=xsd:integer) ; sh:minExclusive Literal(\"50\", datatype=xsd:integer) ; sh:path ff:monthsAbroad ]\n\t\t\tResult Path: sh:maxInclusive\n\t\t\tMessage: More than 1 values on [ sh:maxInclusive Literal(\"100\", datatype=xsd:integer), Literal(\"12\", datatype=xsd:integer) ; sh:minExclusive Literal(\"50\", datatype=xsd:integer) ; sh:path ff:monthsAbroad ]->sh:maxInclusive\nConstraint Violation in MaxCountConstraintComponent (http://www.w3.org/ns/shacl#MaxCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:class ff:Training ; sh:maxInclusive Literal(\"50\", datatype=xsd:integer) ; sh:path ff:intendedFundingPeriod, ff:monthsAbroad, ff:participates ]\n\tResult Path: sh:path\n\tMessage: More than 1 values on [ sh:class ff:Training ; sh:maxInclusive Literal(\"50\", datatype=xsd:integer) ; sh:path ff:intendedFundingPeriod, ff:monthsAbroad, ff:participates ]->sh:path\nConstraint Violation in MaxCountConstraintComponent (http://www.w3.org/ns/shacl#MaxCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:class ff:Training ; sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:commissionedByEmploymentAgency, ff:participates ]\n\tResult Path: sh:path\n\tMessage: More than 1 values on [ sh:class ff:Training ; sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:commissionedByEmploymentAgency, ff:participates ]->sh:path\nConstraint Violation in MaxCountConstraintComponent (http://www.w3.org/ns/shacl#MaxCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:class ff:Training ; sh:or ( [ sh:hasValue ff:VocationalTrainingAct ] [ sh:hasValue ff:CraftsCode ] [ sh:hasValue ff:MaritimeLabourAct ] [ sh:hasValue ff:NursingProfessionsAct ] ) ; sh:path ff:participates, ff:recognizedByLaw ]\n\tResult Path: sh:path\n\tMessage: More than 1 values on [ sh:class ff:Training ; sh:or ( [ sh:hasValue ff:VocationalTrainingAct ] [ sh:hasValue ff:CraftsCode ] [ sh:hasValue ff:MaritimeLabourAct ] [ sh:hasValue ff:NursingProfessionsAct ] ) ; sh:path ff:participates, ff:recognizedByLaw ]->sh:path\nConstraint Violation in MaxCountConstraintComponent (http://www.w3.org/ns/shacl#MaxCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:class ff:Training ; sh:or ( [ sh:maxInclusive Literal(\"50\", datatype=xsd:integer) ; sh:minExclusive Literal(\"0\", datatype=xsd:integer) ] [ sh:maxInclusive Literal(\"100\", datatype=xsd:integer), Literal(\"12\", datatype=xsd:integer) ; sh:minExclusive Literal(\"50\", datatype=xsd:integer) ; sh:path ff:monthsAbroad ] ) ; sh:path ff:participates, ff:percentAbroad ]\n\tResult Path: sh:path\n\tMessage: More than 1 values on [ sh:class ff:Training ; sh:or ( [ sh:maxInclusive Literal(\"50\", datatype=xsd:integer) ; sh:minExclusive Literal(\"0\", datatype=xsd:integer) ] [ sh:maxInclusive Literal(\"100\", datatype=xsd:integer), Literal(\"12\", datatype=xsd:integer) ; sh:minExclusive Literal(\"50\", datatype=xsd:integer) ; sh:path ff:monthsAbroad ] ) ; sh:path ff:participates, ff:percentAbroad ]->sh:path\nConstraint Violation in MaxCountConstraintComponent (http://www.w3.org/ns/shacl#MaxCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:class ff:Training, ff:VocationalTrainingContract ; sh:path ff:participates, ff:subjectToContract ]\n\tResult Path: sh:path\n\tMessage: More than 1 values on [ sh:class ff:Training, ff:VocationalTrainingContract ; sh:path ff:participates, ff:subjectToContract ]->sh:path\nConstraint Violation in MaxCountConstraintComponent (http://www.w3.org/ns/shacl#MaxCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:class ff:Training ; sh:maxInclusive Literal(\"12\", datatype=xsd:integer) ; sh:path ff:intendedFundingPeriod, ff:monthsAbroad, ff:participates ]\n\tResult Path: sh:path\n\tMessage: More than 1 values on [ sh:class ff:Training ; sh:maxInclusive Literal(\"12\", datatype=xsd:integer) ; sh:path ff:intendedFundingPeriod, ff:monthsAbroad, ff:participates ]->sh:path\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:class ff:Disability, ff:VocationalTraining ; sh:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:isFirstVocationalTraining, ff:workforceIntegrationProblemBecause ]\n\tValue Node: [ sh:class ff:Disability, ff:VocationalTraining ; sh:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:isFirstVocationalTraining, ff:workforceIntegrationProblemBecause ]\n\tMessage: Node [ sh:class ff:Disability, ff:VocationalTraining ; sh:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:isFirstVocationalTraining, ff:workforceIntegrationProblemBecause ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:class ff:Training ; sh:or ( [ sh:maxInclusive Literal(\"50\", datatype=xsd:integer) ; sh:minExclusive Literal(\"0\", datatype=xsd:integer) ] [ sh:maxInclusive Literal(\"100\", datatype=xsd:integer), Literal(\"12\", datatype=xsd:integer) ; sh:minExclusive Literal(\"50\", datatype=xsd:integer) ; sh:path ff:monthsAbroad ] ) ; sh:path ff:participates, ff:percentAbroad ]\n\tValue Node: [ sh:class ff:Training ; sh:or ( [ sh:maxInclusive Literal(\"50\", datatype=xsd:integer) ; sh:minExclusive Literal(\"0\", datatype=xsd:integer) ] [ sh:maxInclusive Literal(\"100\", datatype=xsd:integer), Literal(\"12\", datatype=xsd:integer) ; sh:minExclusive Literal(\"50\", datatype=xsd:integer) ; sh:path ff:monthsAbroad ] ) ; sh:path ff:participates, ff:percentAbroad ]\n\tMessage: Node [ sh:class ff:Training ; sh:or ( [ sh:maxInclusive Literal(\"50\", datatype=xsd:integer) ; sh:minExclusive Literal(\"0\", datatype=xsd:integer) ] [ sh:maxInclusive Literal(\"100\", datatype=xsd:integer), Literal(\"12\", datatype=xsd:integer) ; sh:minExclusive Literal(\"50\", datatype=xsd:integer) ; sh:path ff:monthsAbroad ] ) ; sh:path ff:participates, ff:percentAbroad ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:class ff:Training ; sh:maxInclusive Literal(\"12\", datatype=xsd:integer) ; sh:path ff:intendedFundingPeriod, ff:monthsAbroad, ff:participates ]\n\tValue Node: [ sh:class ff:Training ; sh:maxInclusive Literal(\"12\", datatype=xsd:integer) ; sh:path ff:intendedFundingPeriod, ff:monthsAbroad, ff:participates ]\n\tMessage: Node [ sh:class ff:Training ; sh:maxInclusive Literal(\"12\", datatype=xsd:integer) ; sh:path ff:intendedFundingPeriod, ff:monthsAbroad, ff:participates ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:class ff:Training ; sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:commissionedByEmploymentAgency, ff:participates ]\n\tValue Node: [ sh:class ff:Training ; sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:commissionedByEmploymentAgency, ff:participates ]\n\tMessage: Node [ sh:class ff:Training ; sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:commissionedByEmploymentAgency, ff:participates ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:class ff:Training ; sh:maxInclusive Literal(\"50\", datatype=xsd:integer) ; sh:path ff:intendedFundingPeriod, ff:monthsAbroad, ff:participates ]\n\tValue Node: [ sh:class ff:Training ; sh:maxInclusive Literal(\"50\", datatype=xsd:integer) ; sh:path ff:intendedFundingPeriod, ff:monthsAbroad, ff:participates ]\n\tMessage: Node [ sh:class ff:Training ; sh:maxInclusive Literal(\"50\", datatype=xsd:integer) ; sh:path ff:intendedFundingPeriod, ff:monthsAbroad, ff:participates ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:class ff:Training ; sh:or ( [ sh:hasValue ff:VocationalTrainingAct ] [ sh:hasValue ff:CraftsCode ] [ sh:hasValue ff:MaritimeLabourAct ] [ sh:hasValue ff:NursingProfessionsAct ] ) ; sh:path ff:participates, ff:recognizedByLaw ]\n\tValue Node: [ sh:class ff:Training ; sh:or ( [ sh:hasValue ff:VocationalTrainingAct ] [ sh:hasValue ff:CraftsCode ] [ sh:hasValue ff:MaritimeLabourAct ] [ sh:hasValue ff:NursingProfessionsAct ] ) ; sh:path ff:participates, ff:recognizedByLaw ]\n\tMessage: Node [ sh:class ff:Training ; sh:or ( [ sh:hasValue ff:VocationalTrainingAct ] [ sh:hasValue ff:CraftsCode ] [ sh:hasValue ff:MaritimeLabourAct ] [ sh:hasValue ff:NursingProfessionsAct ] ) ; sh:path ff:participates, ff:recognizedByLaw ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:class ff:Training, ff:VocationalTrainingContract ; sh:path ff:participates, ff:subjectToContract ]\n\tValue Node: [ sh:class ff:Training, ff:VocationalTrainingContract ; sh:path ff:participates, ff:subjectToContract ]\n\tMessage: Node [ sh:class ff:Training, ff:VocationalTrainingContract ; sh:path ff:participates, ff:subjectToContract ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in MaxCountConstraintComponent (http://www.w3.org/ns/shacl#MaxCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Literal ; sh:path sh:maxInclusive ]\n\tFocus Node: [ sh:maxInclusive Literal(\"100\", datatype=xsd:integer), Literal(\"12\", datatype=xsd:integer) ; sh:minExclusive Literal(\"50\", datatype=xsd:integer) ; sh:path ff:monthsAbroad ]\n\tResult Path: sh:maxInclusive\n\tMessage: More than 1 values on [ sh:maxInclusive Literal(\"100\", datatype=xsd:integer), Literal(\"12\", datatype=xsd:integer) ; sh:minExclusive Literal(\"50\", datatype=xsd:integer) ; sh:path ff:monthsAbroad ]->sh:maxInclusive\n",
        "nof_validation_results": 16,
        "validation_results": [
            {
                "source_shape": "[ sh:node shsh:ShapeShape ; sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ]",
                "message": "Value does not conform to Shape shsh:ShapeShape. See details for more information."
            },
            {
                "source_shape": "[ sh:node shsh:ShapeShape ; sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ]",
                "message": "Value does not conform to Shape shsh:ShapeShape. See details for more information."
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "More than 1 values on [ sh:class ff:Training ; sh:maxInclusive Literal(\"50\", datatype=xsd:integer) ; sh:path ff:intendedFundingPeriod, ff:monthsAbroad, ff:participates ]->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "More than 1 values on [ sh:class ff:Training ; sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:commissionedByEmploymentAgency, ff:participates ]->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "More than 1 values on [ sh:class ff:Training ; sh:or ( [ sh:hasValue ff:VocationalTrainingAct ] [ sh:hasValue ff:CraftsCode ] [ sh:hasValue ff:MaritimeLabourAct ] [ sh:hasValue ff:NursingProfessionsAct ] ) ; sh:path ff:participates, ff:recognizedByLaw ]->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "More than 1 values on [ sh:class ff:Training ; sh:or ( [ sh:maxInclusive Literal(\"50\", datatype=xsd:integer) ; sh:minExclusive Literal(\"0\", datatype=xsd:integer) ] [ sh:maxInclusive Literal(\"100\", datatype=xsd:integer), Literal(\"12\", datatype=xsd:integer) ; sh:minExclusive Literal(\"50\", datatype=xsd:integer) ; sh:path ff:monthsAbroad ] ) ; sh:path ff:participates, ff:percentAbroad ]->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "More than 1 values on [ sh:class ff:Training, ff:VocationalTrainingContract ; sh:path ff:participates, ff:subjectToContract ]->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "More than 1 values on [ sh:class ff:Training ; sh:maxInclusive Literal(\"12\", datatype=xsd:integer) ; sh:path ff:intendedFundingPeriod, ff:monthsAbroad, ff:participates ]->sh:path"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:class ff:Disability, ff:VocationalTraining ; sh:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:isFirstVocationalTraining, ff:workforceIntegrationProblemBecause ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:class ff:Training ; sh:or ( [ sh:maxInclusive Literal(\"50\", datatype=xsd:integer) ; sh:minExclusive Literal(\"0\", datatype=xsd:integer) ] [ sh:maxInclusive Literal(\"100\", datatype=xsd:integer), Literal(\"12\", datatype=xsd:integer) ; sh:minExclusive Literal(\"50\", datatype=xsd:integer) ; sh:path ff:monthsAbroad ] ) ; sh:path ff:participates, ff:percentAbroad ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:class ff:Training ; sh:maxInclusive Literal(\"12\", datatype=xsd:integer) ; sh:path ff:intendedFundingPeriod, ff:monthsAbroad, ff:participates ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:class ff:Training ; sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:commissionedByEmploymentAgency, ff:participates ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:class ff:Training ; sh:maxInclusive Literal(\"50\", datatype=xsd:integer) ; sh:path ff:intendedFundingPeriod, ff:monthsAbroad, ff:participates ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:class ff:Training ; sh:or ( [ sh:hasValue ff:VocationalTrainingAct ] [ sh:hasValue ff:CraftsCode ] [ sh:hasValue ff:MaritimeLabourAct ] [ sh:hasValue ff:NursingProfessionsAct ] ) ; sh:path ff:participates, ff:recognizedByLaw ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:class ff:Training, ff:VocationalTrainingContract ; sh:path ff:participates, ff:subjectToContract ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Literal ; sh:path sh:maxInclusive ]",
                "message": "More than 1 values on [ sh:maxInclusive Literal(\"100\", datatype=xsd:integer), Literal(\"12\", datatype=xsd:integer) ; sh:minExclusive Literal(\"50\", datatype=xsd:integer) ; sh:path ff:monthsAbroad ]->sh:maxInclusive"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "mistral-large-instruct",
        "file": "baseline_mistral-large-instruct_grundausbildung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/mistral-large-instruct/output/parsed_output/baseline_mistral-large-instruct_grundausbildung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "mistral-large-instruct",
        "file": "baseline_mistral-large-instruct_guv-verletztengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/mistral-large-instruct/output/parsed_output/baseline_mistral-large-instruct_guv-verletztengeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "mistral-large-instruct",
        "file": "baseline_mistral-large-instruct_insolvenzgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/mistral-large-instruct/output/parsed_output/baseline_mistral-large-instruct_insolvenzgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "mistral-large-instruct",
        "file": "baseline_mistral-large-instruct_arbeitslosengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/mistral-large-instruct/output/parsed_output/baseline_mistral-large-instruct_arbeitslosengeld.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (1):\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:lessThan ]\n\tFocus Node: [ sh:lessThan Literal(\"15\", datatype=xsd:integer) ; sh:path ff:workHoursPerWeek ]\n\tValue Node: Literal(\"15\", datatype=xsd:integer)\n\tResult Path: sh:lessThan\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 1,
        "validation_results": [
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:lessThan ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "mistral-large-instruct",
        "file": "baseline_mistral-large-instruct_guv-uebergangsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/mistral-large-instruct/output/parsed_output/baseline_mistral-large-instruct_guv-uebergangsgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "mistral-large-instruct",
        "file": "baseline_mistral-large-instruct_kinderzuschlag.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/mistral-large-instruct/output/parsed_output/baseline_mistral-large-instruct_kinderzuschlag.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (2):\nConstraint Violation in MaxCountConstraintComponent (http://www.w3.org/ns/shacl#MaxCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Literal ; sh:path sh:minInclusive ]\n\tFocus Node: [ sh:minInclusive Literal(\"600.00\", datatype=xsd:decimal), Literal(\"900.00\", datatype=xsd:decimal) ]\n\tResult Path: sh:minInclusive\n\tMessage: More than 1 values on [ sh:minInclusive Literal(\"600.00\", datatype=xsd:decimal), Literal(\"900.00\", datatype=xsd:decimal) ]->sh:minInclusive\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ListShape ; sh:path sh:or ]\n\tFocus Node: [ sh:or [ sh:minInclusive Literal(\"600.00\", datatype=xsd:decimal), Literal(\"900.00\", datatype=xsd:decimal) ] ; sh:path ff:personalGrossIncome ]\n\tValue Node: [ sh:minInclusive Literal(\"600.00\", datatype=xsd:decimal), Literal(\"900.00\", datatype=xsd:decimal) ]\n\tResult Path: sh:or\n\tMessage: Value does not conform to Shape shsh:ListShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in HasValueConstraintComponent (http://www.w3.org/ns/shacl#HasValueConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:minInclusive Literal(\"600.00\", datatype=xsd:decimal), Literal(\"900.00\", datatype=xsd:decimal) ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Node [ sh:minInclusive Literal(\"600.00\", datatype=xsd:decimal), Literal(\"900.00\", datatype=xsd:decimal) ]->[ sh:zeroOrMorePath rdf:rest ] does not contain a value in the set: ['rdf:nil']\n\t\tConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:minInclusive Literal(\"600.00\", datatype=xsd:decimal), Literal(\"900.00\", datatype=xsd:decimal) ]\n\t\t\tValue Node: [ sh:minInclusive Literal(\"600.00\", datatype=xsd:decimal), Literal(\"900.00\", datatype=xsd:decimal) ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Value does not conform to Shape shsh:ListNodeShape. See details for more information.\n\t\t\tDetails:\n\t\t\t\tConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\tSource Shape: shsh:ListNodeShape\n\t\t\t\t\tFocus Node: [ sh:minInclusive Literal(\"600.00\", datatype=xsd:decimal), Literal(\"900.00\", datatype=xsd:decimal) ]\n\t\t\t\t\tValue Node: [ sh:minInclusive Literal(\"600.00\", datatype=xsd:decimal), Literal(\"900.00\", datatype=xsd:decimal) ]\n\t\t\t\t\tMessage: Node [ sh:minInclusive Literal(\"600.00\", datatype=xsd:decimal), Literal(\"900.00\", datatype=xsd:decimal) ] must conform to one or more shapes in [ sh:hasValue rdf:nil ; sh:property [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:rest ] ] , [ sh:not [ sh:hasValue rdf:nil ] ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:rest ] ]\n",
        "nof_validation_results": 2,
        "validation_results": [
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Literal ; sh:path sh:minInclusive ]",
                "message": "More than 1 values on [ sh:minInclusive Literal(\"600.00\", datatype=xsd:decimal), Literal(\"900.00\", datatype=xsd:decimal) ]->sh:minInclusive"
            },
            {
                "source_shape": "[ sh:node shsh:ListShape ; sh:path sh:or ]",
                "message": "Value does not conform to Shape shsh:ListShape. See details for more information."
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "mistral-large-instruct",
        "file": "baseline_mistral-large-instruct_guv-rente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/mistral-large-instruct/output/parsed_output/baseline_mistral-large-instruct_guv-rente.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "mistral-large-instruct",
        "file": "baseline_mistral-large-instruct_krankengeld-begleitperson.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/mistral-large-instruct/output/parsed_output/baseline_mistral-large-instruct_krankengeld-begleitperson.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "mistral-large-instruct",
        "file": "baseline_mistral-large-instruct_grundsicherung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/mistral-large-instruct/output/parsed_output/baseline_mistral-large-instruct_grundsicherung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "mistral-large-instruct",
        "file": "baseline_mistral-large-instruct_einstiegsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/mistral-large-instruct/output/parsed_output/baseline_mistral-large-instruct_einstiegsgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "mistral-large-instruct",
        "file": "baseline_mistral-large-instruct_aktivierung-und-eingliederung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/mistral-large-instruct/output/parsed_output/baseline_mistral-large-instruct_aktivierung-und-eingliederung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "mistral-large-instruct",
        "file": "baseline_mistral-large-instruct_kindergeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/mistral-large-instruct/output/parsed_output/baseline_mistral-large-instruct_kindergeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "meta-llama-3.1-8b-instruct",
        "file": "baseline_meta-llama-3.1-8b-instruct_krankengeld-begleitperson.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/meta-llama-3.1-8b-instruct/output/parsed_output/baseline_meta-llama-3.1-8b-instruct_krankengeld-begleitperson.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "meta-llama-3.1-8b-instruct",
        "file": "baseline_meta-llama-3.1-8b-instruct_guv-witwenrente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/meta-llama-3.1-8b-instruct/output/parsed_output/baseline_meta-llama-3.1-8b-instruct_guv-witwenrente.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (9):\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:NODE ; sh:path ff:hasEvent ; sh:property [ sh:nodeKind sh:LITERAL ; sh:path ff:isOccupationalDisease ] ]\n\tValue Node: sh:NODE\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NODE not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:nodeKind sh:LITERAL ; sh:path ff:isCommutingAccident ]\n\tValue Node: sh:LITERAL\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:LITERAL not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:NODE ; sh:path ff:hasEvent ; sh:property [ sh:nodeKind sh:LITERAL ; sh:path ff:isCommutingAccident ] ]\n\tValue Node: sh:NODE\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NODE not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype ff:MaritalStatus ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeConstraint [ sh:class ff:MaritalStatus ; sh:values ( ff:Married ff:CivilUnion ) ] ; sh:nodeKind sh:NODE ; sh:path ff:hasMaritalStatus ]\n\tValue Node: sh:NODE\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NODE not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:NODE ; sh:path ff:hasEvent ; sh:property [ sh:nodeKind sh:LITERAL ; sh:path ff:isWorkAccident ] ]\n\tValue Node: sh:NODE\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NODE not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:NODE ; sh:path ff:hasDisability ; sh:property [ sh:nodeConstraint [ sh:class ff:Disability ; sh:values ( ff:HearingImpairment ff:VisualImpairment ff:OtherDisability ) ] ; sh:nodeKind sh:NODE ; sh:path ff:hasDisabilityType ] ]\n\tValue Node: sh:NODE\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NODE not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:nodeConstraint [ sh:class ff:Disability ; sh:values ( ff:HearingImpairment ff:VisualImpairment ff:OtherDisability ) ] ; sh:nodeKind sh:NODE ; sh:path ff:hasDisabilityType ]\n\tValue Node: sh:NODE\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NODE not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:nodeKind sh:LITERAL ; sh:path ff:isWorkAccident ]\n\tValue Node: sh:LITERAL\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:LITERAL not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:nodeKind sh:LITERAL ; sh:path ff:isOccupationalDisease ]\n\tValue Node: sh:LITERAL\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:LITERAL not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\n",
        "nof_validation_results": 9,
        "validation_results": [
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NODE not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:LITERAL not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NODE not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NODE not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NODE not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NODE not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NODE not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:LITERAL not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:LITERAL not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "meta-llama-3.1-8b-instruct",
        "file": "baseline_meta-llama-3.1-8b-instruct_grundausbildung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/meta-llama-3.1-8b-instruct/output/parsed_output/baseline_meta-llama-3.1-8b-instruct_grundausbildung.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (20):\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ shacl:datatype xsd:boolean ; shacl:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; shacl:in <http://example.org/bundesagentur-fuer-arbeit>, <http://example.org/rehabilitation-providers> ; shacl:maxCount Literal(\"1\", datatype=xsd:integer) ; shacl:minCount Literal(\"1\", datatype=xsd:integer) ; shacl:targetProperty <http://example.org/hasRehabilitationProvider> ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ shacl:datatype xsd:boolean ; shacl:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; shacl:in <http://example.org/bundesagentur-fuer-arbeit>, <http://example.org/rehabilitation-providers> ; shacl:maxCount Literal(\"1\", datatype=xsd:integer) ; shacl:minCount Literal(\"1\", datatype=xsd:integer) ; shacl:targetProperty <http://example.org/hasRehabilitationProvider> ]->sh:path\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ shacl:datatype xsd:boolean ; shacl:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; shacl:in <http://example.org/available-for-placement>, <http://example.org/employment-status-values> ; shacl:maxCount Literal(\"1\", datatype=xsd:integer) ; shacl:minCount Literal(\"1\", datatype=xsd:integer) ; shacl:targetProperty <http://example.org/hasEmploymentStatus> ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ shacl:datatype xsd:boolean ; shacl:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; shacl:in <http://example.org/available-for-placement>, <http://example.org/employment-status-values> ; shacl:maxCount Literal(\"1\", datatype=xsd:integer) ; shacl:minCount Literal(\"1\", datatype=xsd:integer) ; shacl:targetProperty <http://example.org/hasEmploymentStatus> ]->sh:path\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ shacl:datatype xsd:boolean ; shacl:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; shacl:in <http://example.org/disability-types>, <http://example.org/severe-disability> ; shacl:maxCount Literal(\"1\", datatype=xsd:integer) ; shacl:minCount Literal(\"1\", datatype=xsd:integer) ; shacl:targetProperty <http://example.org/hasDisability> ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ shacl:datatype xsd:boolean ; shacl:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; shacl:in <http://example.org/disability-types>, <http://example.org/severe-disability> ; shacl:maxCount Literal(\"1\", datatype=xsd:integer) ; shacl:minCount Literal(\"1\", datatype=xsd:integer) ; shacl:targetProperty <http://example.org/hasDisability> ]->sh:path\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ shacl:datatype xsd:boolean ; shacl:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; shacl:in <http://example.org/earning-capacity-values>, <http://example.org/unfit-for-work> ; shacl:maxCount Literal(\"1\", datatype=xsd:integer) ; shacl:minCount Literal(\"1\", datatype=xsd:integer) ; shacl:targetProperty <http://example.org/hasEarningCapacity> ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ shacl:datatype xsd:boolean ; shacl:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; shacl:in <http://example.org/earning-capacity-values>, <http://example.org/unfit-for-work> ; shacl:maxCount Literal(\"1\", datatype=xsd:integer) ; shacl:minCount Literal(\"1\", datatype=xsd:integer) ; shacl:targetProperty <http://example.org/hasEarningCapacity> ]->sh:path\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ shacl:datatype xsd:boolean ; shacl:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; shacl:in <http://example.org/available-for-placement>, <http://example.org/employment-status-values> ; shacl:maxCount Literal(\"1\", datatype=xsd:integer) ; shacl:minCount Literal(\"1\", datatype=xsd:integer) ; shacl:targetProperty <http://example.org/hasEmploymentStatus> ]\n\tValue Node: [ shacl:datatype xsd:boolean ; shacl:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; shacl:in <http://example.org/available-for-placement>, <http://example.org/employment-status-values> ; shacl:maxCount Literal(\"1\", datatype=xsd:integer) ; shacl:minCount Literal(\"1\", datatype=xsd:integer) ; shacl:targetProperty <http://example.org/hasEmploymentStatus> ]\n\tMessage: Node [ shacl:datatype xsd:boolean ; shacl:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; shacl:in <http://example.org/available-for-placement>, <http://example.org/employment-status-values> ; shacl:maxCount Literal(\"1\", datatype=xsd:integer) ; shacl:minCount Literal(\"1\", datatype=xsd:integer) ; shacl:targetProperty <http://example.org/hasEmploymentStatus> ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ shacl:datatype xsd:boolean ; shacl:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; shacl:in <http://example.org/bundesagentur-fuer-arbeit>, <http://example.org/rehabilitation-providers> ; shacl:maxCount Literal(\"1\", datatype=xsd:integer) ; shacl:minCount Literal(\"1\", datatype=xsd:integer) ; shacl:targetProperty <http://example.org/hasRehabilitationProvider> ]\n\tValue Node: [ shacl:datatype xsd:boolean ; shacl:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; shacl:in <http://example.org/bundesagentur-fuer-arbeit>, <http://example.org/rehabilitation-providers> ; shacl:maxCount Literal(\"1\", datatype=xsd:integer) ; shacl:minCount Literal(\"1\", datatype=xsd:integer) ; shacl:targetProperty <http://example.org/hasRehabilitationProvider> ]\n\tMessage: Node [ shacl:datatype xsd:boolean ; shacl:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; shacl:in <http://example.org/bundesagentur-fuer-arbeit>, <http://example.org/rehabilitation-providers> ; shacl:maxCount Literal(\"1\", datatype=xsd:integer) ; shacl:minCount Literal(\"1\", datatype=xsd:integer) ; shacl:targetProperty <http://example.org/hasRehabilitationProvider> ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ shacl:datatype xsd:boolean ; shacl:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; shacl:in <http://example.org/earning-capacity-values>, <http://example.org/unfit-for-work> ; shacl:maxCount Literal(\"1\", datatype=xsd:integer) ; shacl:minCount Literal(\"1\", datatype=xsd:integer) ; shacl:targetProperty <http://example.org/hasEarningCapacity> ]\n\tValue Node: [ shacl:datatype xsd:boolean ; shacl:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; shacl:in <http://example.org/earning-capacity-values>, <http://example.org/unfit-for-work> ; shacl:maxCount Literal(\"1\", datatype=xsd:integer) ; shacl:minCount Literal(\"1\", datatype=xsd:integer) ; shacl:targetProperty <http://example.org/hasEarningCapacity> ]\n\tMessage: Node [ shacl:datatype xsd:boolean ; shacl:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; shacl:in <http://example.org/earning-capacity-values>, <http://example.org/unfit-for-work> ; shacl:maxCount Literal(\"1\", datatype=xsd:integer) ; shacl:minCount Literal(\"1\", datatype=xsd:integer) ; shacl:targetProperty <http://example.org/hasEarningCapacity> ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ shacl:datatype xsd:boolean ; shacl:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; shacl:in <http://example.org/disability-types>, <http://example.org/severe-disability> ; shacl:maxCount Literal(\"1\", datatype=xsd:integer) ; shacl:minCount Literal(\"1\", datatype=xsd:integer) ; shacl:targetProperty <http://example.org/hasDisability> ]\n\tValue Node: [ shacl:datatype xsd:boolean ; shacl:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; shacl:in <http://example.org/disability-types>, <http://example.org/severe-disability> ; shacl:maxCount Literal(\"1\", datatype=xsd:integer) ; shacl:minCount Literal(\"1\", datatype=xsd:integer) ; shacl:targetProperty <http://example.org/hasDisability> ]\n\tMessage: Node [ shacl:datatype xsd:boolean ; shacl:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; shacl:in <http://example.org/disability-types>, <http://example.org/severe-disability> ; shacl:maxCount Literal(\"1\", datatype=xsd:integer) ; shacl:minCount Literal(\"1\", datatype=xsd:integer) ; shacl:targetProperty <http://example.org/hasDisability> ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in MaxCountConstraintComponent (http://www.w3.org/ns/shacl#MaxCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:node shsh:ListShape ; sh:path sh:in ]\n\tFocus Node: [ shacl:datatype xsd:boolean ; shacl:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; shacl:in <http://example.org/available-for-placement>, <http://example.org/employment-status-values> ; shacl:maxCount Literal(\"1\", datatype=xsd:integer) ; shacl:minCount Literal(\"1\", datatype=xsd:integer) ; shacl:targetProperty <http://example.org/hasEmploymentStatus> ]\n\tResult Path: sh:in\n\tMessage: More than 1 values on [ shacl:datatype xsd:boolean ; shacl:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; shacl:in <http://example.org/available-for-placement>, <http://example.org/employment-status-values> ; shacl:maxCount Literal(\"1\", datatype=xsd:integer) ; shacl:minCount Literal(\"1\", datatype=xsd:integer) ; shacl:targetProperty <http://example.org/hasEmploymentStatus> ]->sh:in\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:node shsh:ListShape ; sh:path sh:in ]\n\tFocus Node: [ shacl:datatype xsd:boolean ; shacl:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; shacl:in <http://example.org/available-for-placement>, <http://example.org/employment-status-values> ; shacl:maxCount Literal(\"1\", datatype=xsd:integer) ; shacl:minCount Literal(\"1\", datatype=xsd:integer) ; shacl:targetProperty <http://example.org/hasEmploymentStatus> ]\n\tValue Node: <http://example.org/available-for-placement>\n\tResult Path: sh:in\n\tMessage: Value does not conform to Shape shsh:ListShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in HasValueConstraintComponent (http://www.w3.org/ns/shacl#HasValueConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: <http://example.org/available-for-placement>\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Node <http://example.org/available-for-placement>->[ sh:zeroOrMorePath rdf:rest ] does not contain a value in the set: ['rdf:nil']\n\t\tConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: <http://example.org/available-for-placement>\n\t\t\tValue Node: <http://example.org/available-for-placement>\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Value does not conform to Shape shsh:ListNodeShape. See details for more information.\n\t\t\tDetails:\n\t\t\t\tConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\tSource Shape: shsh:ListNodeShape\n\t\t\t\t\tFocus Node: <http://example.org/available-for-placement>\n\t\t\t\t\tValue Node: <http://example.org/available-for-placement>\n\t\t\t\t\tMessage: Node <http://example.org/available-for-placement> must conform to one or more shapes in [ sh:hasValue rdf:nil ; sh:property [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:rest ] ] , [ sh:not [ sh:hasValue rdf:nil ] ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:rest ] ]\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:node shsh:ListShape ; sh:path sh:in ]\n\tFocus Node: [ shacl:datatype xsd:boolean ; shacl:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; shacl:in <http://example.org/available-for-placement>, <http://example.org/employment-status-values> ; shacl:maxCount Literal(\"1\", datatype=xsd:integer) ; shacl:minCount Literal(\"1\", datatype=xsd:integer) ; shacl:targetProperty <http://example.org/hasEmploymentStatus> ]\n\tValue Node: <http://example.org/employment-status-values>\n\tResult Path: sh:in\n\tMessage: Value does not conform to Shape shsh:ListShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in HasValueConstraintComponent (http://www.w3.org/ns/shacl#HasValueConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: <http://example.org/employment-status-values>\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Node <http://example.org/employment-status-values>->[ sh:zeroOrMorePath rdf:rest ] does not contain a value in the set: ['rdf:nil']\n\t\tConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: <http://example.org/employment-status-values>\n\t\t\tValue Node: <http://example.org/employment-status-values>\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Value does not conform to Shape shsh:ListNodeShape. See details for more information.\n\t\t\tDetails:\n\t\t\t\tConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\tSource Shape: shsh:ListNodeShape\n\t\t\t\t\tFocus Node: <http://example.org/employment-status-values>\n\t\t\t\t\tValue Node: <http://example.org/employment-status-values>\n\t\t\t\t\tMessage: Node <http://example.org/employment-status-values> must conform to one or more shapes in [ sh:hasValue rdf:nil ; sh:property [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:rest ] ] , [ sh:not [ sh:hasValue rdf:nil ] ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:rest ] ]\nConstraint Violation in MaxCountConstraintComponent (http://www.w3.org/ns/shacl#MaxCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:node shsh:ListShape ; sh:path sh:in ]\n\tFocus Node: [ shacl:datatype xsd:boolean ; shacl:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; shacl:in <http://example.org/bundesagentur-fuer-arbeit>, <http://example.org/rehabilitation-providers> ; shacl:maxCount Literal(\"1\", datatype=xsd:integer) ; shacl:minCount Literal(\"1\", datatype=xsd:integer) ; shacl:targetProperty <http://example.org/hasRehabilitationProvider> ]\n\tResult Path: sh:in\n\tMessage: More than 1 values on [ shacl:datatype xsd:boolean ; shacl:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; shacl:in <http://example.org/bundesagentur-fuer-arbeit>, <http://example.org/rehabilitation-providers> ; shacl:maxCount Literal(\"1\", datatype=xsd:integer) ; shacl:minCount Literal(\"1\", datatype=xsd:integer) ; shacl:targetProperty <http://example.org/hasRehabilitationProvider> ]->sh:in\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:node shsh:ListShape ; sh:path sh:in ]\n\tFocus Node: [ shacl:datatype xsd:boolean ; shacl:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; shacl:in <http://example.org/bundesagentur-fuer-arbeit>, <http://example.org/rehabilitation-providers> ; shacl:maxCount Literal(\"1\", datatype=xsd:integer) ; shacl:minCount Literal(\"1\", datatype=xsd:integer) ; shacl:targetProperty <http://example.org/hasRehabilitationProvider> ]\n\tValue Node: <http://example.org/rehabilitation-providers>\n\tResult Path: sh:in\n\tMessage: Value does not conform to Shape shsh:ListShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in HasValueConstraintComponent (http://www.w3.org/ns/shacl#HasValueConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: <http://example.org/rehabilitation-providers>\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Node <http://example.org/rehabilitation-providers>->[ sh:zeroOrMorePath rdf:rest ] does not contain a value in the set: ['rdf:nil']\n\t\tConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: <http://example.org/rehabilitation-providers>\n\t\t\tValue Node: <http://example.org/rehabilitation-providers>\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Value does not conform to Shape shsh:ListNodeShape. See details for more information.\n\t\t\tDetails:\n\t\t\t\tConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\tSource Shape: shsh:ListNodeShape\n\t\t\t\t\tFocus Node: <http://example.org/rehabilitation-providers>\n\t\t\t\t\tValue Node: <http://example.org/rehabilitation-providers>\n\t\t\t\t\tMessage: Node <http://example.org/rehabilitation-providers> must conform to one or more shapes in [ sh:hasValue rdf:nil ; sh:property [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:rest ] ] , [ sh:not [ sh:hasValue rdf:nil ] ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:rest ] ]\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:node shsh:ListShape ; sh:path sh:in ]\n\tFocus Node: [ shacl:datatype xsd:boolean ; shacl:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; shacl:in <http://example.org/bundesagentur-fuer-arbeit>, <http://example.org/rehabilitation-providers> ; shacl:maxCount Literal(\"1\", datatype=xsd:integer) ; shacl:minCount Literal(\"1\", datatype=xsd:integer) ; shacl:targetProperty <http://example.org/hasRehabilitationProvider> ]\n\tValue Node: <http://example.org/bundesagentur-fuer-arbeit>\n\tResult Path: sh:in\n\tMessage: Value does not conform to Shape shsh:ListShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in HasValueConstraintComponent (http://www.w3.org/ns/shacl#HasValueConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: <http://example.org/bundesagentur-fuer-arbeit>\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Node <http://example.org/bundesagentur-fuer-arbeit>->[ sh:zeroOrMorePath rdf:rest ] does not contain a value in the set: ['rdf:nil']\n\t\tConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: <http://example.org/bundesagentur-fuer-arbeit>\n\t\t\tValue Node: <http://example.org/bundesagentur-fuer-arbeit>\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Value does not conform to Shape shsh:ListNodeShape. See details for more information.\n\t\t\tDetails:\n\t\t\t\tConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\tSource Shape: shsh:ListNodeShape\n\t\t\t\t\tFocus Node: <http://example.org/bundesagentur-fuer-arbeit>\n\t\t\t\t\tValue Node: <http://example.org/bundesagentur-fuer-arbeit>\n\t\t\t\t\tMessage: Node <http://example.org/bundesagentur-fuer-arbeit> must conform to one or more shapes in [ sh:hasValue rdf:nil ; sh:property [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:rest ] ] , [ sh:not [ sh:hasValue rdf:nil ] ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:rest ] ]\nConstraint Violation in MaxCountConstraintComponent (http://www.w3.org/ns/shacl#MaxCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:node shsh:ListShape ; sh:path sh:in ]\n\tFocus Node: [ shacl:datatype xsd:boolean ; shacl:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; shacl:in <http://example.org/earning-capacity-values>, <http://example.org/unfit-for-work> ; shacl:maxCount Literal(\"1\", datatype=xsd:integer) ; shacl:minCount Literal(\"1\", datatype=xsd:integer) ; shacl:targetProperty <http://example.org/hasEarningCapacity> ]\n\tResult Path: sh:in\n\tMessage: More than 1 values on [ shacl:datatype xsd:boolean ; shacl:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; shacl:in <http://example.org/earning-capacity-values>, <http://example.org/unfit-for-work> ; shacl:maxCount Literal(\"1\", datatype=xsd:integer) ; shacl:minCount Literal(\"1\", datatype=xsd:integer) ; shacl:targetProperty <http://example.org/hasEarningCapacity> ]->sh:in\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:node shsh:ListShape ; sh:path sh:in ]\n\tFocus Node: [ shacl:datatype xsd:boolean ; shacl:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; shacl:in <http://example.org/earning-capacity-values>, <http://example.org/unfit-for-work> ; shacl:maxCount Literal(\"1\", datatype=xsd:integer) ; shacl:minCount Literal(\"1\", datatype=xsd:integer) ; shacl:targetProperty <http://example.org/hasEarningCapacity> ]\n\tValue Node: <http://example.org/earning-capacity-values>\n\tResult Path: sh:in\n\tMessage: Value does not conform to Shape shsh:ListShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in HasValueConstraintComponent (http://www.w3.org/ns/shacl#HasValueConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: <http://example.org/earning-capacity-values>\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Node <http://example.org/earning-capacity-values>->[ sh:zeroOrMorePath rdf:rest ] does not contain a value in the set: ['rdf:nil']\n\t\tConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: <http://example.org/earning-capacity-values>\n\t\t\tValue Node: <http://example.org/earning-capacity-values>\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Value does not conform to Shape shsh:ListNodeShape. See details for more information.\n\t\t\tDetails:\n\t\t\t\tConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\tSource Shape: shsh:ListNodeShape\n\t\t\t\t\tFocus Node: <http://example.org/earning-capacity-values>\n\t\t\t\t\tValue Node: <http://example.org/earning-capacity-values>\n\t\t\t\t\tMessage: Node <http://example.org/earning-capacity-values> must conform to one or more shapes in [ sh:hasValue rdf:nil ; sh:property [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:rest ] ] , [ sh:not [ sh:hasValue rdf:nil ] ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:rest ] ]\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:node shsh:ListShape ; sh:path sh:in ]\n\tFocus Node: [ shacl:datatype xsd:boolean ; shacl:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; shacl:in <http://example.org/earning-capacity-values>, <http://example.org/unfit-for-work> ; shacl:maxCount Literal(\"1\", datatype=xsd:integer) ; shacl:minCount Literal(\"1\", datatype=xsd:integer) ; shacl:targetProperty <http://example.org/hasEarningCapacity> ]\n\tValue Node: <http://example.org/unfit-for-work>\n\tResult Path: sh:in\n\tMessage: Value does not conform to Shape shsh:ListShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in HasValueConstraintComponent (http://www.w3.org/ns/shacl#HasValueConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: <http://example.org/unfit-for-work>\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Node <http://example.org/unfit-for-work>->[ sh:zeroOrMorePath rdf:rest ] does not contain a value in the set: ['rdf:nil']\n\t\tConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: <http://example.org/unfit-for-work>\n\t\t\tValue Node: <http://example.org/unfit-for-work>\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Value does not conform to Shape shsh:ListNodeShape. See details for more information.\n\t\t\tDetails:\n\t\t\t\tConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\tSource Shape: shsh:ListNodeShape\n\t\t\t\t\tFocus Node: <http://example.org/unfit-for-work>\n\t\t\t\t\tValue Node: <http://example.org/unfit-for-work>\n\t\t\t\t\tMessage: Node <http://example.org/unfit-for-work> must conform to one or more shapes in [ sh:hasValue rdf:nil ; sh:property [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:rest ] ] , [ sh:not [ sh:hasValue rdf:nil ] ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:rest ] ]\nConstraint Violation in MaxCountConstraintComponent (http://www.w3.org/ns/shacl#MaxCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:node shsh:ListShape ; sh:path sh:in ]\n\tFocus Node: [ shacl:datatype xsd:boolean ; shacl:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; shacl:in <http://example.org/disability-types>, <http://example.org/severe-disability> ; shacl:maxCount Literal(\"1\", datatype=xsd:integer) ; shacl:minCount Literal(\"1\", datatype=xsd:integer) ; shacl:targetProperty <http://example.org/hasDisability> ]\n\tResult Path: sh:in\n\tMessage: More than 1 values on [ shacl:datatype xsd:boolean ; shacl:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; shacl:in <http://example.org/disability-types>, <http://example.org/severe-disability> ; shacl:maxCount Literal(\"1\", datatype=xsd:integer) ; shacl:minCount Literal(\"1\", datatype=xsd:integer) ; shacl:targetProperty <http://example.org/hasDisability> ]->sh:in\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:node shsh:ListShape ; sh:path sh:in ]\n\tFocus Node: [ shacl:datatype xsd:boolean ; shacl:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; shacl:in <http://example.org/disability-types>, <http://example.org/severe-disability> ; shacl:maxCount Literal(\"1\", datatype=xsd:integer) ; shacl:minCount Literal(\"1\", datatype=xsd:integer) ; shacl:targetProperty <http://example.org/hasDisability> ]\n\tValue Node: <http://example.org/disability-types>\n\tResult Path: sh:in\n\tMessage: Value does not conform to Shape shsh:ListShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in HasValueConstraintComponent (http://www.w3.org/ns/shacl#HasValueConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: <http://example.org/disability-types>\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Node <http://example.org/disability-types>->[ sh:zeroOrMorePath rdf:rest ] does not contain a value in the set: ['rdf:nil']\n\t\tConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: <http://example.org/disability-types>\n\t\t\tValue Node: <http://example.org/disability-types>\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Value does not conform to Shape shsh:ListNodeShape. See details for more information.\n\t\t\tDetails:\n\t\t\t\tConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\tSource Shape: shsh:ListNodeShape\n\t\t\t\t\tFocus Node: <http://example.org/disability-types>\n\t\t\t\t\tValue Node: <http://example.org/disability-types>\n\t\t\t\t\tMessage: Node <http://example.org/disability-types> must conform to one or more shapes in [ sh:hasValue rdf:nil ; sh:property [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:rest ] ] , [ sh:not [ sh:hasValue rdf:nil ] ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:rest ] ]\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:node shsh:ListShape ; sh:path sh:in ]\n\tFocus Node: [ shacl:datatype xsd:boolean ; shacl:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; shacl:in <http://example.org/disability-types>, <http://example.org/severe-disability> ; shacl:maxCount Literal(\"1\", datatype=xsd:integer) ; shacl:minCount Literal(\"1\", datatype=xsd:integer) ; shacl:targetProperty <http://example.org/hasDisability> ]\n\tValue Node: <http://example.org/severe-disability>\n\tResult Path: sh:in\n\tMessage: Value does not conform to Shape shsh:ListShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in HasValueConstraintComponent (http://www.w3.org/ns/shacl#HasValueConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: <http://example.org/severe-disability>\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Node <http://example.org/severe-disability>->[ sh:zeroOrMorePath rdf:rest ] does not contain a value in the set: ['rdf:nil']\n\t\tConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: <http://example.org/severe-disability>\n\t\t\tValue Node: <http://example.org/severe-disability>\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Value does not conform to Shape shsh:ListNodeShape. See details for more information.\n\t\t\tDetails:\n\t\t\t\tConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\tSource Shape: shsh:ListNodeShape\n\t\t\t\t\tFocus Node: <http://example.org/severe-disability>\n\t\t\t\t\tValue Node: <http://example.org/severe-disability>\n\t\t\t\t\tMessage: Node <http://example.org/severe-disability> must conform to one or more shapes in [ sh:hasValue rdf:nil ; sh:property [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:rest ] ] , [ sh:not [ sh:hasValue rdf:nil ] ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:rest ] ]\n",
        "nof_validation_results": 20,
        "validation_results": [
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ shacl:datatype xsd:boolean ; shacl:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; shacl:in <http://example.org/bundesagentur-fuer-arbeit>, <http://example.org/rehabilitation-providers> ; shacl:maxCount Literal(\"1\", datatype=xsd:integer) ; shacl:minCount Literal(\"1\", datatype=xsd:integer) ; shacl:targetProperty <http://example.org/hasRehabilitationProvider> ]->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ shacl:datatype xsd:boolean ; shacl:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; shacl:in <http://example.org/available-for-placement>, <http://example.org/employment-status-values> ; shacl:maxCount Literal(\"1\", datatype=xsd:integer) ; shacl:minCount Literal(\"1\", datatype=xsd:integer) ; shacl:targetProperty <http://example.org/hasEmploymentStatus> ]->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ shacl:datatype xsd:boolean ; shacl:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; shacl:in <http://example.org/disability-types>, <http://example.org/severe-disability> ; shacl:maxCount Literal(\"1\", datatype=xsd:integer) ; shacl:minCount Literal(\"1\", datatype=xsd:integer) ; shacl:targetProperty <http://example.org/hasDisability> ]->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ shacl:datatype xsd:boolean ; shacl:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; shacl:in <http://example.org/earning-capacity-values>, <http://example.org/unfit-for-work> ; shacl:maxCount Literal(\"1\", datatype=xsd:integer) ; shacl:minCount Literal(\"1\", datatype=xsd:integer) ; shacl:targetProperty <http://example.org/hasEarningCapacity> ]->sh:path"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ shacl:datatype xsd:boolean ; shacl:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; shacl:in <http://example.org/available-for-placement>, <http://example.org/employment-status-values> ; shacl:maxCount Literal(\"1\", datatype=xsd:integer) ; shacl:minCount Literal(\"1\", datatype=xsd:integer) ; shacl:targetProperty <http://example.org/hasEmploymentStatus> ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ shacl:datatype xsd:boolean ; shacl:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; shacl:in <http://example.org/bundesagentur-fuer-arbeit>, <http://example.org/rehabilitation-providers> ; shacl:maxCount Literal(\"1\", datatype=xsd:integer) ; shacl:minCount Literal(\"1\", datatype=xsd:integer) ; shacl:targetProperty <http://example.org/hasRehabilitationProvider> ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ shacl:datatype xsd:boolean ; shacl:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; shacl:in <http://example.org/earning-capacity-values>, <http://example.org/unfit-for-work> ; shacl:maxCount Literal(\"1\", datatype=xsd:integer) ; shacl:minCount Literal(\"1\", datatype=xsd:integer) ; shacl:targetProperty <http://example.org/hasEarningCapacity> ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ shacl:datatype xsd:boolean ; shacl:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; shacl:in <http://example.org/disability-types>, <http://example.org/severe-disability> ; shacl:maxCount Literal(\"1\", datatype=xsd:integer) ; shacl:minCount Literal(\"1\", datatype=xsd:integer) ; shacl:targetProperty <http://example.org/hasDisability> ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:node shsh:ListShape ; sh:path sh:in ]",
                "message": "More than 1 values on [ shacl:datatype xsd:boolean ; shacl:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; shacl:in <http://example.org/available-for-placement>, <http://example.org/employment-status-values> ; shacl:maxCount Literal(\"1\", datatype=xsd:integer) ; shacl:minCount Literal(\"1\", datatype=xsd:integer) ; shacl:targetProperty <http://example.org/hasEmploymentStatus> ]->sh:in"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:node shsh:ListShape ; sh:path sh:in ]",
                "message": "Value does not conform to Shape shsh:ListShape. See details for more information."
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:node shsh:ListShape ; sh:path sh:in ]",
                "message": "Value does not conform to Shape shsh:ListShape. See details for more information."
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:node shsh:ListShape ; sh:path sh:in ]",
                "message": "More than 1 values on [ shacl:datatype xsd:boolean ; shacl:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; shacl:in <http://example.org/bundesagentur-fuer-arbeit>, <http://example.org/rehabilitation-providers> ; shacl:maxCount Literal(\"1\", datatype=xsd:integer) ; shacl:minCount Literal(\"1\", datatype=xsd:integer) ; shacl:targetProperty <http://example.org/hasRehabilitationProvider> ]->sh:in"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:node shsh:ListShape ; sh:path sh:in ]",
                "message": "Value does not conform to Shape shsh:ListShape. See details for more information."
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:node shsh:ListShape ; sh:path sh:in ]",
                "message": "Value does not conform to Shape shsh:ListShape. See details for more information."
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:node shsh:ListShape ; sh:path sh:in ]",
                "message": "More than 1 values on [ shacl:datatype xsd:boolean ; shacl:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; shacl:in <http://example.org/earning-capacity-values>, <http://example.org/unfit-for-work> ; shacl:maxCount Literal(\"1\", datatype=xsd:integer) ; shacl:minCount Literal(\"1\", datatype=xsd:integer) ; shacl:targetProperty <http://example.org/hasEarningCapacity> ]->sh:in"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:node shsh:ListShape ; sh:path sh:in ]",
                "message": "Value does not conform to Shape shsh:ListShape. See details for more information."
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:node shsh:ListShape ; sh:path sh:in ]",
                "message": "Value does not conform to Shape shsh:ListShape. See details for more information."
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:node shsh:ListShape ; sh:path sh:in ]",
                "message": "More than 1 values on [ shacl:datatype xsd:boolean ; shacl:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; shacl:in <http://example.org/disability-types>, <http://example.org/severe-disability> ; shacl:maxCount Literal(\"1\", datatype=xsd:integer) ; shacl:minCount Literal(\"1\", datatype=xsd:integer) ; shacl:targetProperty <http://example.org/hasDisability> ]->sh:in"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:node shsh:ListShape ; sh:path sh:in ]",
                "message": "Value does not conform to Shape shsh:ListShape. See details for more information."
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:node shsh:ListShape ; sh:path sh:in ]",
                "message": "Value does not conform to Shape shsh:ListShape. See details for more information."
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "meta-llama-3.1-8b-instruct",
        "file": "baseline_meta-llama-3.1-8b-instruct_guv-kinderverletztengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/meta-llama-3.1-8b-instruct/output/parsed_output/baseline_meta-llama-3.1-8b-instruct_guv-kinderverletztengeld.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (20):\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:disjoint ]\n\tFocus Node: [ sh:datatype rdfs:Literal ; sh:disjoint [ sh:datatype xsd:boolean ; sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Node ; sh:path ff:hasDisability ] ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Node ; sh:path ff:hasDisabilityType ]\n\tValue Node: [ sh:datatype xsd:boolean ; sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Node ; sh:path ff:hasDisability ]\n\tResult Path: sh:disjoint\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:disjoint ]\n\tFocus Node: [ sh:datatype rdfs:Literal ; sh:disjoint [ sh:datatype xsd:boolean ; sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Node ; sh:path ff:hasEmployment ] ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Node ; sh:path ff:hasEmploymentStatus ]\n\tValue Node: [ sh:datatype xsd:boolean ; sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Node ; sh:path ff:hasEmployment ]\n\tResult Path: sh:disjoint\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Node ; sh:path ff:hasEmployment ]\n\tValue Node: Literal(\"true\" = True, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Node ; sh:path ff:hasDisability ]\n\tValue Node: Literal(\"true\" = True, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Node ; sh:path ff:hasChild ]\n\tValue Node: Literal(\"true\" = True, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Node ; sh:path ff:hasEmployment ]\n\tValue Node: Literal(\"true\" = True, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Node ; sh:path ff:hasDisability ]\n\tValue Node: Literal(\"true\" = True, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Node ; sh:path ff:hasEmployment ]\n\tValue Node: sh:Node\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Node not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype rdfs:Literal ; sh:greaterThan Literal(\"0\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Node ; sh:path ff:hasIncome ]\n\tValue Node: sh:Node\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Node not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Node ; sh:path ff:hasDisability ]\n\tValue Node: sh:Node\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Node not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Node ; sh:path ff:hasChild ]\n\tValue Node: sh:Node\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Node not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Node ; sh:path ff:hasEmployment ]\n\tValue Node: sh:Node\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Node not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype rdfs:Literal ; sh:equals ff:Married ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Node ; sh:path ff:hasMaritalStatus ]\n\tValue Node: sh:Node\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Node not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype rdfs:Literal ; sh:equals ff:StatutoryHealthInsurance ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Node ; sh:path ff:hasInsurance ]\n\tValue Node: sh:Node\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Node not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype rdfs:Literal ; sh:disjoint [ sh:datatype xsd:boolean ; sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Node ; sh:path ff:hasDisability ] ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Node ; sh:path ff:hasDisabilityType ]\n\tValue Node: sh:Node\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Node not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype rdfs:Literal ; sh:greaterThan Literal(\"0\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Node ; sh:path ff:hasEmployment ]\n\tValue Node: sh:Node\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Node not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype rdfs:Literal ; sh:disjoint [ sh:datatype xsd:boolean ; sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Node ; sh:path ff:hasEmployment ] ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Node ; sh:path ff:hasEmploymentStatus ]\n\tValue Node: sh:Node\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Node not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype xsd:integer ; sh:greaterThan Literal(\"18\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Node ; sh:path ff:hasAge ]\n\tValue Node: sh:Node\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Node not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Node ; sh:path ff:hasDisability ]\n\tValue Node: sh:Node\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Node not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype rdfs:Literal ; sh:equals ff:Tolerated ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Node ; sh:path ff:hasResidencePermit ]\n\tValue Node: sh:Node\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Node not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\n",
        "nof_validation_results": 20,
        "validation_results": [
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:disjoint ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:disjoint ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Node not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Node not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Node not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Node not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Node not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Node not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Node not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Node not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Node not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Node not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Node not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Node not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Node not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "meta-llama-3.1-8b-instruct",
        "file": "baseline_meta-llama-3.1-8b-instruct_berufsausbildungsbeihilfe.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/meta-llama-3.1-8b-instruct/output/parsed_output/baseline_meta-llama-3.1-8b-instruct_berufsausbildungsbeihilfe.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "meta-llama-3.1-8b-instruct",
        "file": "baseline_meta-llama-3.1-8b-instruct_ausbildungsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/meta-llama-3.1-8b-instruct/output/parsed_output/baseline_meta-llama-3.1-8b-instruct_ausbildungsgeld.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (11):\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:nodeKind sh:NodeShape ; sh:path ff:hasDisability ; sh:property [ sh:datatype xsd:string ; sh:in ( Literal(\"HearingImpairment\") Literal(\"VisualImpairment\") ) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasDisabilityType ] ]\n\tValue Node: sh:NodeShape\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeShape not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:nodeKind sh:NodeShape ; sh:path ff:hasEmployment ; sh:property [ sh:datatype xsd:decimal ; sh:maxInclusive Literal(\"40\", datatype=xsd:integer) ; sh:minInclusive Literal(\"0\", datatype=xsd:integer) ; sh:path ff:workHoursPerWeek ] ]\n\tValue Node: sh:NodeShape\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeShape not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:nodeKind sh:NodeShape ; sh:path ff:hasIncome ; sh:property [ sh:datatype xsd:decimal ; sh:minInclusive Literal(\"0\", datatype=xsd:integer) ; sh:path ff:reducesChildSupplementTo ] ]\n\tValue Node: sh:NodeShape\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeShape not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:nodeKind sh:NodeShape ; sh:path ff:hasEmployment ; sh:property [ sh:nodeKind sh:NodeShape ; sh:path ff:hasIncome ; sh:property [ sh:datatype xsd:decimal ; sh:minInclusive Literal(\"0\", datatype=xsd:integer) ; sh:path ff:reducesChildSupplementTo ] ] ]\n\tValue Node: sh:NodeShape\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeShape not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:nodeKind sh:NodeShape ; sh:path ff:triggeringEvent ; sh:targetClass ff:Event ]\n\tValue Node: sh:NodeShape\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeShape not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:nodeKind sh:NodeShape ; sh:path ff:hasRehabilitationProvider ; sh:property [ sh:nodeKind sh:NodeShape ; sh:path ff:derivesFreedomOfMovementFrom ; sh:targetClass ff:User ] ]\n\tValue Node: sh:NodeShape\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeShape not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:nodeKind sh:NodeShape ; sh:path ff:hasEvent ; sh:property [ sh:nodeKind sh:NodeShape ; sh:path ff:triggeringEvent ; sh:targetClass ff:Event ] ]\n\tValue Node: sh:NodeShape\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeShape not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:nodeKind sh:NodeShape ; sh:path ff:hasIncome ; sh:property [ sh:datatype xsd:int ; sh:minInclusive Literal(\"0\", datatype=xsd:integer) ; sh:path ff:personalGrossIncome ] ]\n\tValue Node: sh:NodeShape\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeShape not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:nodeKind sh:NodeShape ; sh:path ff:hasEmploymentStatus ; sh:targetClass ff:EmploymentStatus ]\n\tValue Node: sh:NodeShape\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeShape not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:nodeKind sh:NodeShape ; sh:path ff:derivesFreedomOfMovementFrom ; sh:targetClass ff:User ]\n\tValue Node: sh:NodeShape\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeShape not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:nodeKind sh:NodeShape ; sh:path ff:hasEmployment ; sh:property [ sh:nodeKind sh:NodeShape ; sh:path ff:hasEmploymentStatus ; sh:targetClass ff:EmploymentStatus ] ]\n\tValue Node: sh:NodeShape\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeShape not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\n",
        "nof_validation_results": 11,
        "validation_results": [
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeShape not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeShape not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeShape not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeShape not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeShape not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeShape not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeShape not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeShape not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeShape not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeShape not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeShape not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "meta-llama-3.1-8b-instruct",
        "file": "baseline_meta-llama-3.1-8b-instruct_buergergeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/meta-llama-3.1-8b-instruct/output/parsed_output/baseline_meta-llama-3.1-8b-instruct_buergergeld.ttl",
        "valid_shacl": 0,
        "syntax_error": 0,
        "unexpected_error": 1,
        "validation_report": "A shape defined as a NodeShape cannot be the subject of a 'sh:path' predicate.\nFor reference, see https://www.w3.org/TR/shacl/#node-shapes",
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "meta-llama-3.1-8b-instruct",
        "file": "baseline_meta-llama-3.1-8b-instruct_guv-verletztengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/meta-llama-3.1-8b-instruct/output/parsed_output/baseline_meta-llama-3.1-8b-instruct_guv-verletztengeld.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (6):\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype rdfs:Resource ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path <https://foerderfunke.org/default#hasEmploymentStatus> ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype rdfs:Resource ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path <https://foerderfunke.org/default#hasEarningCapacity> ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype rdfs:Resource ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path <https://foerderfunke.org/default#hasInsurance> ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype rdfs:Resource ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path <https://foerderfunke.org/default#hasIncome> ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype rdfs:Resource ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path <https://foerderfunke.org/default#hasEmployment> ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype rdfs:Resource ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path <https://foerderfunke.org/default#hasResidenceStatus> ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\n",
        "nof_validation_results": 6,
        "validation_results": [
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745697193",
        "prompt": "baseline",
        "model": "meta-llama-3.1-8b-instruct",
        "file": "baseline_meta-llama-3.1-8b-instruct_kindergeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745697193/meta-llama-3.1-8b-instruct/output/parsed_output/baseline_meta-llama-3.1-8b-instruct_kindergeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "qwen2.5-72b-instruct",
        "file": "baseline_qwen2.5-72b-instruct_kinderzuschlag.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/qwen2.5-72b-instruct/output/parsed_output/baseline_qwen2.5-72b-instruct_kinderzuschlag.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (5):\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ShapeShape ; sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ]\n\tFocus Node: ( [ sh:and [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isSingleParent ] ; sh:minInclusive Literal(\"600.0\", datatype=xsd:decimal) ] [ sh:and [ sh:not [ sh:hasValue ff:Single ] ; sh:path ff:hasMaritalStatus ] ; sh:minInclusive Literal(\"900.0\", datatype=xsd:decimal) ] )\n\tValue Node: [ sh:and [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isSingleParent ] ; sh:minInclusive Literal(\"600.0\", datatype=xsd:decimal) ]\n\tResult Path: ( [ sh:zeroOrMorePath rdf:rest ] rdf:first )\n\tMessage: Value does not conform to Shape shsh:ShapeShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ sh:node shsh:ListShape ; sh:path sh:and ]\n\t\t\tFocus Node: [ sh:and [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isSingleParent ] ; sh:minInclusive Literal(\"600.0\", datatype=xsd:decimal) ]\n\t\t\tValue Node: [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isSingleParent ]\n\t\t\tResult Path: sh:and\n\t\t\tMessage: Value does not conform to Shape shsh:ListShape. See details for more information.\n\t\t\tDetails:\n\t\t\t\tConstraint Violation in HasValueConstraintComponent (http://www.w3.org/ns/shacl#HasValueConstraintComponent):\n\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\t\t\tFocus Node: [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isSingleParent ]\n\t\t\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\t\t\tMessage: Node [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isSingleParent ]->[ sh:zeroOrMorePath rdf:rest ] does not contain a value in the set: ['rdf:nil']\n\t\t\t\tConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\t\t\tFocus Node: [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isSingleParent ]\n\t\t\t\t\tValue Node: [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isSingleParent ]\n\t\t\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\t\t\tMessage: Value does not conform to Shape shsh:ListNodeShape. See details for more information.\n\t\t\t\t\tDetails:\n\t\t\t\t\t\tConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\t\t\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\t\t\tSource Shape: shsh:ListNodeShape\n\t\t\t\t\t\t\tFocus Node: [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isSingleParent ]\n\t\t\t\t\t\t\tValue Node: [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isSingleParent ]\n\t\t\t\t\t\t\tMessage: Node [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isSingleParent ] must conform to one or more shapes in [ sh:hasValue rdf:nil ; sh:property [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:rest ] ] , [ sh:not [ sh:hasValue rdf:nil ] ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:rest ] ]\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ShapeShape ; sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ]\n\tFocus Node: ( [ sh:and [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isSingleParent ] ; sh:minInclusive Literal(\"600.0\", datatype=xsd:decimal) ] [ sh:and [ sh:not [ sh:hasValue ff:Single ] ; sh:path ff:hasMaritalStatus ] ; sh:minInclusive Literal(\"900.0\", datatype=xsd:decimal) ] )\n\tValue Node: [ sh:and [ sh:not [ sh:hasValue ff:Single ] ; sh:path ff:hasMaritalStatus ] ; sh:minInclusive Literal(\"900.0\", datatype=xsd:decimal) ]\n\tResult Path: ( [ sh:zeroOrMorePath rdf:rest ] rdf:first )\n\tMessage: Value does not conform to Shape shsh:ShapeShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ sh:node shsh:ListShape ; sh:path sh:and ]\n\t\t\tFocus Node: [ sh:and [ sh:not [ sh:hasValue ff:Single ] ; sh:path ff:hasMaritalStatus ] ; sh:minInclusive Literal(\"900.0\", datatype=xsd:decimal) ]\n\t\t\tValue Node: [ sh:not [ sh:hasValue ff:Single ] ; sh:path ff:hasMaritalStatus ]\n\t\t\tResult Path: sh:and\n\t\t\tMessage: Value does not conform to Shape shsh:ListShape. See details for more information.\n\t\t\tDetails:\n\t\t\t\tConstraint Violation in HasValueConstraintComponent (http://www.w3.org/ns/shacl#HasValueConstraintComponent):\n\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\t\t\tFocus Node: [ sh:not [ sh:hasValue ff:Single ] ; sh:path ff:hasMaritalStatus ]\n\t\t\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\t\t\tMessage: Node [ sh:not [ sh:hasValue ff:Single ] ; sh:path ff:hasMaritalStatus ]->[ sh:zeroOrMorePath rdf:rest ] does not contain a value in the set: ['rdf:nil']\n\t\t\t\tConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\t\t\tFocus Node: [ sh:not [ sh:hasValue ff:Single ] ; sh:path ff:hasMaritalStatus ]\n\t\t\t\t\tValue Node: [ sh:not [ sh:hasValue ff:Single ] ; sh:path ff:hasMaritalStatus ]\n\t\t\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\t\t\tMessage: Value does not conform to Shape shsh:ListNodeShape. See details for more information.\n\t\t\t\t\tDetails:\n\t\t\t\t\t\tConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\t\t\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\t\t\tSource Shape: shsh:ListNodeShape\n\t\t\t\t\t\t\tFocus Node: [ sh:not [ sh:hasValue ff:Single ] ; sh:path ff:hasMaritalStatus ]\n\t\t\t\t\t\t\tValue Node: [ sh:not [ sh:hasValue ff:Single ] ; sh:path ff:hasMaritalStatus ]\n\t\t\t\t\t\t\tMessage: Node [ sh:not [ sh:hasValue ff:Single ] ; sh:path ff:hasMaritalStatus ] must conform to one or more shapes in [ sh:hasValue rdf:nil ; sh:property [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:rest ] ] , [ sh:not [ sh:hasValue rdf:nil ] ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:rest ] ]\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ListShape ; sh:path sh:and ]\n\tFocus Node: [ sh:and [ sh:not [ sh:hasValue ff:Single ] ; sh:path ff:hasMaritalStatus ] ; sh:minInclusive Literal(\"900.0\", datatype=xsd:decimal) ]\n\tValue Node: [ sh:not [ sh:hasValue ff:Single ] ; sh:path ff:hasMaritalStatus ]\n\tResult Path: sh:and\n\tMessage: Value does not conform to Shape shsh:ListShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in HasValueConstraintComponent (http://www.w3.org/ns/shacl#HasValueConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:not [ sh:hasValue ff:Single ] ; sh:path ff:hasMaritalStatus ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Node [ sh:not [ sh:hasValue ff:Single ] ; sh:path ff:hasMaritalStatus ]->[ sh:zeroOrMorePath rdf:rest ] does not contain a value in the set: ['rdf:nil']\n\t\tConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:not [ sh:hasValue ff:Single ] ; sh:path ff:hasMaritalStatus ]\n\t\t\tValue Node: [ sh:not [ sh:hasValue ff:Single ] ; sh:path ff:hasMaritalStatus ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Value does not conform to Shape shsh:ListNodeShape. See details for more information.\n\t\t\tDetails:\n\t\t\t\tConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\tSource Shape: shsh:ListNodeShape\n\t\t\t\t\tFocus Node: [ sh:not [ sh:hasValue ff:Single ] ; sh:path ff:hasMaritalStatus ]\n\t\t\t\t\tValue Node: [ sh:not [ sh:hasValue ff:Single ] ; sh:path ff:hasMaritalStatus ]\n\t\t\t\t\tMessage: Node [ sh:not [ sh:hasValue ff:Single ] ; sh:path ff:hasMaritalStatus ] must conform to one or more shapes in [ sh:hasValue rdf:nil ; sh:property [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:rest ] ] , [ sh:not [ sh:hasValue rdf:nil ] ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:rest ] ]\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ListShape ; sh:path sh:and ]\n\tFocus Node: [ sh:and [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isSingleParent ] ; sh:minInclusive Literal(\"600.0\", datatype=xsd:decimal) ]\n\tValue Node: [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isSingleParent ]\n\tResult Path: sh:and\n\tMessage: Value does not conform to Shape shsh:ListShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in HasValueConstraintComponent (http://www.w3.org/ns/shacl#HasValueConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isSingleParent ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Node [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isSingleParent ]->[ sh:zeroOrMorePath rdf:rest ] does not contain a value in the set: ['rdf:nil']\n\t\tConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isSingleParent ]\n\t\t\tValue Node: [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isSingleParent ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Value does not conform to Shape shsh:ListNodeShape. See details for more information.\n\t\t\tDetails:\n\t\t\t\tConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\tSource Shape: shsh:ListNodeShape\n\t\t\t\t\tFocus Node: [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isSingleParent ]\n\t\t\t\t\tValue Node: [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isSingleParent ]\n\t\t\t\t\tMessage: Node [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isSingleParent ] must conform to one or more shapes in [ sh:hasValue rdf:nil ; sh:property [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:rest ] ] , [ sh:not [ sh:hasValue rdf:nil ] ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:rest ] ]\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:lessThan ]\n\tFocus Node: [ sh:lessThan Literal(\"25\", datatype=xsd:integer) ; sh:path ff:hasAge ]\n\tValue Node: Literal(\"25\", datatype=xsd:integer)\n\tResult Path: sh:lessThan\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 5,
        "validation_results": [
            {
                "source_shape": "[ sh:node shsh:ShapeShape ; sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ]",
                "message": "Value does not conform to Shape shsh:ShapeShape. See details for more information."
            },
            {
                "source_shape": "[ sh:node shsh:ShapeShape ; sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ]",
                "message": "Value does not conform to Shape shsh:ShapeShape. See details for more information."
            },
            {
                "source_shape": "[ sh:node shsh:ListShape ; sh:path sh:and ]",
                "message": "Value does not conform to Shape shsh:ListShape. See details for more information."
            },
            {
                "source_shape": "[ sh:node shsh:ListShape ; sh:path sh:and ]",
                "message": "Value does not conform to Shape shsh:ListShape. See details for more information."
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:lessThan ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "qwen2.5-72b-instruct",
        "file": "baseline_qwen2.5-72b-instruct_grundausbildung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/qwen2.5-72b-instruct/output/parsed_output/baseline_qwen2.5-72b-instruct_grundausbildung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "qwen2.5-72b-instruct",
        "file": "baseline_qwen2.5-72b-instruct_guv-rente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/qwen2.5-72b-instruct/output/parsed_output/baseline_qwen2.5-72b-instruct_guv-rente.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "qwen2.5-72b-instruct",
        "file": "baseline_qwen2.5-72b-instruct_buergergeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/qwen2.5-72b-instruct/output/parsed_output/baseline_qwen2.5-72b-instruct_buergergeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "qwen2.5-72b-instruct",
        "file": "baseline_qwen2.5-72b-instruct_guv-kinderverletztengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/qwen2.5-72b-instruct/output/parsed_output/baseline_qwen2.5-72b-instruct_guv-kinderverletztengeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "qwen2.5-72b-instruct",
        "file": "baseline_qwen2.5-72b-instruct_arbeitslosengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/qwen2.5-72b-instruct/output/parsed_output/baseline_qwen2.5-72b-instruct_arbeitslosengeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "qwen2.5-72b-instruct",
        "file": "baseline_qwen2.5-72b-instruct_guv-waisenrente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/qwen2.5-72b-instruct/output/parsed_output/baseline_qwen2.5-72b-instruct_guv-waisenrente.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "qwen2.5-72b-instruct",
        "file": "baseline_qwen2.5-72b-instruct_guv-rentenabfindung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/qwen2.5-72b-instruct/output/parsed_output/baseline_qwen2.5-72b-instruct_guv-rentenabfindung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "qwen2.5-72b-instruct",
        "file": "baseline_qwen2.5-72b-instruct_guv-uebergangsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/qwen2.5-72b-instruct/output/parsed_output/baseline_qwen2.5-72b-instruct_guv-uebergangsgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "qwen2.5-72b-instruct",
        "file": "baseline_qwen2.5-72b-instruct_kindergeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/qwen2.5-72b-instruct/output/parsed_output/baseline_qwen2.5-72b-instruct_kindergeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "qwen2.5-72b-instruct",
        "file": "baseline_qwen2.5-72b-instruct_grundsicherung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/qwen2.5-72b-instruct/output/parsed_output/baseline_qwen2.5-72b-instruct_grundsicherung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "qwen2.5-72b-instruct",
        "file": "baseline_qwen2.5-72b-instruct_bildung-und-teilhabe.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/qwen2.5-72b-instruct/output/parsed_output/baseline_qwen2.5-72b-instruct_bildung-und-teilhabe.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (5):\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ShapeShape ; sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ]\n\tFocus Node: ( [ sh:in ( ff:B100019_LB_106311931 ff:L100040_LB_8665924 ff:B100019_LB_581863 ff:AsylumSeekerBenefits ) ; sh:path ff:receivesBenefit ] [ sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:canCoverBasicNeedsOfBenefitUnit ] [ sh:path ff:hasIncome ; sh:property [ sh:datatype xsd:decimal ; sh:lessThan Literal(\"1500\", datatype=xsd:integer) ; sh:path ff:personalGrossIncome ] ] )\n\tValue Node: [ sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:canCoverBasicNeedsOfBenefitUnit ]\n\tResult Path: ( [ sh:zeroOrMorePath rdf:rest ] rdf:first )\n\tMessage: Value does not conform to Shape shsh:ShapeShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\t\t\tFocus Node: [ sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:canCoverBasicNeedsOfBenefitUnit ]\n\t\t\tValue Node: Literal(\"false\" = False, datatype=xsd:boolean)\n\t\t\tResult Path: sh:equals\n\t\t\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:canCoverBasicNeedsOfBenefitUnit ]\n\tValue Node: Literal(\"false\" = False, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:optional Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:canCoverBasicNeedsOfBenefitUnit ]\n\tValue Node: Literal(\"false\" = False, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:lessThan ]\n\tFocus Node: [ sh:datatype xsd:decimal ; sh:lessThan Literal(\"1500\", datatype=xsd:integer) ; sh:path ff:personalGrossIncome ]\n\tValue Node: Literal(\"1500\", datatype=xsd:integer)\n\tResult Path: sh:lessThan\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:lessThan ]\n\tFocus Node: [ sh:datatype xsd:decimal ; sh:lessThan Literal(\"1500\", datatype=xsd:integer) ; sh:path ff:personalGrossIncome ]\n\tValue Node: Literal(\"1500\", datatype=xsd:integer)\n\tResult Path: sh:lessThan\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 5,
        "validation_results": [
            {
                "source_shape": "[ sh:node shsh:ShapeShape ; sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ]",
                "message": "Value does not conform to Shape shsh:ShapeShape. See details for more information."
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:lessThan ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:lessThan ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "qwen2.5-72b-instruct",
        "file": "baseline_qwen2.5-72b-instruct_aktivierung-und-eingliederung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/qwen2.5-72b-instruct/output/parsed_output/baseline_qwen2.5-72b-instruct_aktivierung-und-eingliederung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "qwen2.5-72b-instruct",
        "file": "baseline_qwen2.5-72b-instruct_guv-verletztengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/qwen2.5-72b-instruct/output/parsed_output/baseline_qwen2.5-72b-instruct_guv-verletztengeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "deepseek-r1-distill-llama-70b",
        "file": "baseline_deepseek-r1-distill-llama-70b_guv-uebergangsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/deepseek-r1-distill-llama-70b/output/parsed_output/baseline_deepseek-r1-distill-llama-70b_guv-uebergangsgeld.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (3):\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:in ff:OccupationalRehabilitation ; sh:predicate ff:participates ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:in ff:OccupationalRehabilitation ; sh:predicate ff:participates ]->sh:path\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:in ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ; sh:predicate ff:hasEvent ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:in ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ; sh:predicate ff:hasEvent ]->sh:path\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:node shsh:ListShape ; sh:path sh:in ]\n\tFocus Node: [ sh:in ff:OccupationalRehabilitation ; sh:predicate ff:participates ]\n\tValue Node: ff:OccupationalRehabilitation\n\tResult Path: sh:in\n\tMessage: Value does not conform to Shape shsh:ListShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in HasValueConstraintComponent (http://www.w3.org/ns/shacl#HasValueConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: ff:OccupationalRehabilitation\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Node ff:OccupationalRehabilitation->[ sh:zeroOrMorePath rdf:rest ] does not contain a value in the set: ['rdf:nil']\n\t\tConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: ff:OccupationalRehabilitation\n\t\t\tValue Node: ff:OccupationalRehabilitation\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Value does not conform to Shape shsh:ListNodeShape. See details for more information.\n\t\t\tDetails:\n\t\t\t\tConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\tSource Shape: shsh:ListNodeShape\n\t\t\t\t\tFocus Node: ff:OccupationalRehabilitation\n\t\t\t\t\tValue Node: ff:OccupationalRehabilitation\n\t\t\t\t\tMessage: Node ff:OccupationalRehabilitation must conform to one or more shapes in [ sh:hasValue rdf:nil ; sh:property [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:rest ] ] , [ sh:not [ sh:hasValue rdf:nil ] ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:rest ] ]\n",
        "nof_validation_results": 3,
        "validation_results": [
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:in ff:OccupationalRehabilitation ; sh:predicate ff:participates ]->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:in ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ; sh:predicate ff:hasEvent ]->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:node shsh:ListShape ; sh:path sh:in ]",
                "message": "Value does not conform to Shape shsh:ListShape. See details for more information."
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "deepseek-r1-distill-llama-70b",
        "file": "baseline_deepseek-r1-distill-llama-70b_guv-rentenabfindung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/deepseek-r1-distill-llama-70b/output/parsed_output/baseline_deepseek-r1-distill-llama-70b_guv-rentenabfindung.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (2):\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: ff:isEligibleFor\n\tResult Path: sh:path\n\tMessage: Less than 1 values on ff:isEligibleFor->sh:path\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: ff:hasMaritalStatus\n\tResult Path: sh:path\n\tMessage: Less than 1 values on ff:hasMaritalStatus->sh:path\n",
        "nof_validation_results": 2,
        "validation_results": [
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on ff:isEligibleFor->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on ff:hasMaritalStatus->sh:path"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "deepseek-r1-distill-llama-70b",
        "file": "baseline_deepseek-r1-distill-llama-70b_guv-waisenrente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/deepseek-r1-distill-llama-70b/output/parsed_output/baseline_deepseek-r1-distill-llama-70b_guv-waisenrente.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (11):\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ShapeShape ; sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ]\n\tFocus Node: ( [ sh:in ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ; sh:path ff:triggeringEvent ] [ sh:path [ sh:inverse ff:parentalAdress ] ; sh:property [ sh:hasValue ff:User ; sh:path ff:hasPrimaryCareTaker ], [ sh:hasValue ff:User ; sh:path ff:sameHouseholdAs ] ] [ sh:hasValue ff:User ; sh:path ff:hasPrimaryCareTaker ] )\n\tValue Node: [ sh:path [ sh:inverse ff:parentalAdress ] ; sh:property [ sh:hasValue ff:User ; sh:path ff:hasPrimaryCareTaker ], [ sh:hasValue ff:User ; sh:path ff:sameHouseholdAs ] ]\n\tResult Path: ( [ sh:zeroOrMorePath rdf:rest ] rdf:first )\n\tMessage: Value does not conform to Shape shsh:ShapeShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: shsh:ShapeShape\n\t\t\tFocus Node: [ sh:path [ sh:inverse ff:parentalAdress ] ; sh:property [ sh:hasValue ff:User ; sh:path ff:hasPrimaryCareTaker ], [ sh:hasValue ff:User ; sh:path ff:sameHouseholdAs ] ]\n\t\t\tValue Node: [ sh:path [ sh:inverse ff:parentalAdress ] ; sh:property [ sh:hasValue ff:User ; sh:path ff:hasPrimaryCareTaker ], [ sh:hasValue ff:User ; sh:path ff:sameHouseholdAs ] ]\n\t\t\tMessage: Node [ sh:path [ sh:inverse ff:parentalAdress ] ; sh:property [ sh:hasValue ff:User ; sh:path ff:hasPrimaryCareTaker ], [ sh:hasValue ff:User ; sh:path ff:sameHouseholdAs ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ShapeShape ; sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ]\n\tFocus Node: ( [ sh:in ff:Training ; sh:path ff:participates ] [ sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:hasDisability ] [ sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isInTransitionalPeriod ] )\n\tValue Node: [ sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isInTransitionalPeriod ]\n\tResult Path: ( [ sh:zeroOrMorePath rdf:rest ] rdf:first )\n\tMessage: Value does not conform to Shape shsh:ShapeShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\t\t\tFocus Node: [ sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isInTransitionalPeriod ]\n\t\t\tValue Node: Literal(\"true\" = True, datatype=xsd:boolean)\n\t\t\tResult Path: sh:equals\n\t\t\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ShapeShape ; sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ]\n\tFocus Node: ( [ sh:in ff:Training ; sh:path ff:participates ] [ sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:hasDisability ] [ sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isInTransitionalPeriod ] )\n\tValue Node: [ sh:in ff:Training ; sh:path ff:participates ]\n\tResult Path: ( [ sh:zeroOrMorePath rdf:rest ] rdf:first )\n\tMessage: Value does not conform to Shape shsh:ShapeShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:node shsh:ListShape ; sh:path sh:in ]\n\t\t\tFocus Node: [ sh:in ff:Training ; sh:path ff:participates ]\n\t\t\tValue Node: ff:Training\n\t\t\tResult Path: sh:in\n\t\t\tMessage: Value does not conform to Shape shsh:ListShape. See details for more information.\n\t\t\tDetails:\n\t\t\t\tConstraint Violation in HasValueConstraintComponent (http://www.w3.org/ns/shacl#HasValueConstraintComponent):\n\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\t\t\tFocus Node: ff:Training\n\t\t\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\t\t\tMessage: Node ff:Training->[ sh:zeroOrMorePath rdf:rest ] does not contain a value in the set: ['rdf:nil']\n\t\t\t\tConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\t\t\tFocus Node: ff:Training\n\t\t\t\t\tValue Node: ff:Training\n\t\t\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\t\t\tMessage: Value does not conform to Shape shsh:ListNodeShape. See details for more information.\n\t\t\t\t\tDetails:\n\t\t\t\t\t\tConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\t\t\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\t\t\tSource Shape: shsh:ListNodeShape\n\t\t\t\t\t\t\tFocus Node: ff:Training\n\t\t\t\t\t\t\tValue Node: ff:Training\n\t\t\t\t\t\t\tMessage: Node ff:Training must conform to one or more shapes in [ sh:hasValue rdf:nil ; sh:property [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:rest ] ] , [ sh:not [ sh:hasValue rdf:nil ] ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:rest ] ]\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ShapeShape ; sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ]\n\tFocus Node: ( [ sh:in ff:Training ; sh:path ff:participates ] [ sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:hasDisability ] [ sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isInTransitionalPeriod ] )\n\tValue Node: [ sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:hasDisability ]\n\tResult Path: ( [ sh:zeroOrMorePath rdf:rest ] rdf:first )\n\tMessage: Value does not conform to Shape shsh:ShapeShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\t\t\tFocus Node: [ sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:hasDisability ]\n\t\t\tValue Node: Literal(\"true\" = True, datatype=xsd:boolean)\n\t\t\tResult Path: sh:equals\n\t\t\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:or ( [ sh:in ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ; sh:path ff:triggeringEvent ] [ sh:path [ sh:inverse ff:parentalAdress ] ; sh:property [ sh:hasValue ff:User ; sh:path ff:hasPrimaryCareTaker ], [ sh:hasValue ff:User ; sh:path ff:sameHouseholdAs ] ] [ sh:hasValue ff:User ; sh:path ff:hasPrimaryCareTaker ] ) ; sh:path [ sh:inverse ff:deceasedCivilPartner, ff:deceasedSpouse, ff:hasChild ] ]\n\tValue Node: [ sh:inverse ff:deceasedCivilPartner, ff:deceasedSpouse, ff:hasChild ]\n\tResult Path: sh:path\n\tMessage: Node [ sh:inverse ff:deceasedCivilPartner, ff:deceasedSpouse, ff:hasChild ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:path [ sh:inverse ff:parentalAdress ] ; sh:property [ sh:hasValue ff:User ; sh:path ff:hasPrimaryCareTaker ], [ sh:hasValue ff:User ; sh:path ff:sameHouseholdAs ] ]\n\tValue Node: [ sh:path [ sh:inverse ff:parentalAdress ] ; sh:property [ sh:hasValue ff:User ; sh:path ff:hasPrimaryCareTaker ], [ sh:hasValue ff:User ; sh:path ff:sameHouseholdAs ] ]\n\tMessage: Node [ sh:path [ sh:inverse ff:parentalAdress ] ; sh:property [ sh:hasValue ff:User ; sh:path ff:hasPrimaryCareTaker ], [ sh:hasValue ff:User ; sh:path ff:sameHouseholdAs ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:or ( [ sh:in ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ; sh:path ff:triggeringEvent ] [ sh:path [ sh:inverse ff:parentalAdress ] ; sh:property [ sh:hasValue ff:User ; sh:path ff:hasPrimaryCareTaker ], [ sh:hasValue ff:User ; sh:path ff:sameHouseholdAs ] ] [ sh:hasValue ff:User ; sh:path ff:hasPrimaryCareTaker ] ) ; sh:path [ sh:inverse ff:deceasedCivilPartner, ff:deceasedSpouse, ff:hasChild ] ]\n\tValue Node: [ sh:or ( [ sh:in ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ; sh:path ff:triggeringEvent ] [ sh:path [ sh:inverse ff:parentalAdress ] ; sh:property [ sh:hasValue ff:User ; sh:path ff:hasPrimaryCareTaker ], [ sh:hasValue ff:User ; sh:path ff:sameHouseholdAs ] ] [ sh:hasValue ff:User ; sh:path ff:hasPrimaryCareTaker ] ) ; sh:path [ sh:inverse ff:deceasedCivilPartner, ff:deceasedSpouse, ff:hasChild ] ]\n\tMessage: Node [ sh:or ( [ sh:in ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ; sh:path ff:triggeringEvent ] [ sh:path [ sh:inverse ff:parentalAdress ] ; sh:property [ sh:hasValue ff:User ; sh:path ff:hasPrimaryCareTaker ], [ sh:hasValue ff:User ; sh:path ff:sameHouseholdAs ] ] [ sh:hasValue ff:User ; sh:path ff:hasPrimaryCareTaker ] ) ; sh:path [ sh:inverse ff:deceasedCivilPartner, ff:deceasedSpouse, ff:hasChild ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:hasDisability ]\n\tValue Node: Literal(\"true\" = True, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isInTransitionalPeriod ]\n\tValue Node: Literal(\"true\" = True, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:node shsh:ListShape ; sh:path sh:in ]\n\tFocus Node: [ sh:in ff:Training ; sh:path ff:participates ]\n\tValue Node: ff:Training\n\tResult Path: sh:in\n\tMessage: Value does not conform to Shape shsh:ListShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in HasValueConstraintComponent (http://www.w3.org/ns/shacl#HasValueConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: ff:Training\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Node ff:Training->[ sh:zeroOrMorePath rdf:rest ] does not contain a value in the set: ['rdf:nil']\n\t\tConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: ff:Training\n\t\t\tValue Node: ff:Training\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Value does not conform to Shape shsh:ListNodeShape. See details for more information.\n\t\t\tDetails:\n\t\t\t\tConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\tSource Shape: shsh:ListNodeShape\n\t\t\t\t\tFocus Node: ff:Training\n\t\t\t\t\tValue Node: ff:Training\n\t\t\t\t\tMessage: Node ff:Training must conform to one or more shapes in [ sh:hasValue rdf:nil ; sh:property [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:rest ] ] , [ sh:not [ sh:hasValue rdf:nil ] ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:rest ] ]\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:lessThanOrEquals ]\n\tFocus Node: [ sh:gte Literal(\"18\", datatype=xsd:integer) ; sh:lessThanOrEquals Literal(\"27\", datatype=xsd:integer) ; sh:or ( [ sh:in ff:Training ; sh:path ff:participates ] [ sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:hasDisability ] [ sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isInTransitionalPeriod ] ) ; sh:path ff:hasAge ]\n\tValue Node: Literal(\"27\", datatype=xsd:integer)\n\tResult Path: sh:lessThanOrEquals\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 11,
        "validation_results": [
            {
                "source_shape": "[ sh:node shsh:ShapeShape ; sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ]",
                "message": "Value does not conform to Shape shsh:ShapeShape. See details for more information."
            },
            {
                "source_shape": "[ sh:node shsh:ShapeShape ; sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ]",
                "message": "Value does not conform to Shape shsh:ShapeShape. See details for more information."
            },
            {
                "source_shape": "[ sh:node shsh:ShapeShape ; sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ]",
                "message": "Value does not conform to Shape shsh:ShapeShape. See details for more information."
            },
            {
                "source_shape": "[ sh:node shsh:ShapeShape ; sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ]",
                "message": "Value does not conform to Shape shsh:ShapeShape. See details for more information."
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Node [ sh:inverse ff:deceasedCivilPartner, ff:deceasedSpouse, ff:hasChild ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:path [ sh:inverse ff:parentalAdress ] ; sh:property [ sh:hasValue ff:User ; sh:path ff:hasPrimaryCareTaker ], [ sh:hasValue ff:User ; sh:path ff:sameHouseholdAs ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:or ( [ sh:in ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ; sh:path ff:triggeringEvent ] [ sh:path [ sh:inverse ff:parentalAdress ] ; sh:property [ sh:hasValue ff:User ; sh:path ff:hasPrimaryCareTaker ], [ sh:hasValue ff:User ; sh:path ff:sameHouseholdAs ] ] [ sh:hasValue ff:User ; sh:path ff:hasPrimaryCareTaker ] ) ; sh:path [ sh:inverse ff:deceasedCivilPartner, ff:deceasedSpouse, ff:hasChild ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:node shsh:ListShape ; sh:path sh:in ]",
                "message": "Value does not conform to Shape shsh:ListShape. See details for more information."
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:lessThanOrEquals ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "deepseek-r1-distill-llama-70b",
        "file": "baseline_deepseek-r1-distill-llama-70b_arbeitslosengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/deepseek-r1-distill-llama-70b/output/parsed_output/baseline_deepseek-r1-distill-llama-70b_arbeitslosengeld.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (8):\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:defaultValue Literal(\"false\" = False, datatype=xsd:boolean) ; sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:predicate ff:inEmployment ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:defaultValue Literal(\"false\" = False, datatype=xsd:boolean) ; sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:predicate ff:inEmployment ]->sh:path\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:max Literal(\"14\", datatype=xsd:integer) ; sh:predicate ff:workHoursPerWeek ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:max Literal(\"14\", datatype=xsd:integer) ; sh:predicate ff:workHoursPerWeek ]->sh:path\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:object ff:B100019_LB_576842 ; sh:predicate ff:isEligibleFor ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:object ff:B100019_LB_576842 ; sh:predicate ff:isEligibleFor ]->sh:path\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:predicate ff:compulsoryInsuranceFor12In30 ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:predicate ff:compulsoryInsuranceFor12In30 ]->sh:path\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:predicate ff:availableForPlacement ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:predicate ff:availableForPlacement ]->sh:path\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:defaultValue Literal(\"false\" = False, datatype=xsd:boolean) ; sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:predicate ff:inEmployment ]\n\tValue Node: Literal(\"false\" = False, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:predicate ff:compulsoryInsuranceFor12In30 ]\n\tValue Node: Literal(\"true\" = True, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:predicate ff:availableForPlacement ]\n\tValue Node: Literal(\"true\" = True, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 8,
        "validation_results": [
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:defaultValue Literal(\"false\" = False, datatype=xsd:boolean) ; sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:predicate ff:inEmployment ]->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:max Literal(\"14\", datatype=xsd:integer) ; sh:predicate ff:workHoursPerWeek ]->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:object ff:B100019_LB_576842 ; sh:predicate ff:isEligibleFor ]->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:predicate ff:compulsoryInsuranceFor12In30 ]->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:predicate ff:availableForPlacement ]->sh:path"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "deepseek-r1-distill-llama-70b",
        "file": "baseline_deepseek-r1-distill-llama-70b_guv-verletztengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/deepseek-r1-distill-llama-70b/output/parsed_output/baseline_deepseek-r1-distill-llama-70b_guv-verletztengeld.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (9):\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: ff:receivesBenefit\n\tResult Path: sh:path\n\tMessage: Less than 1 values on ff:receivesBenefit->sh:path\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:hasValue ff:B100019_LB_576842 ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:message Literal(\"Must receive Verletztengeld from statutory accident insurance.\") ; sh:property ff:receivesBenefit ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:hasValue ff:B100019_LB_576842 ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:message Literal(\"Must receive Verletztengeld from statutory accident insurance.\") ; sh:property ff:receivesBenefit ]->sh:path\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: ff:hasEvent\n\tResult Path: sh:path\n\tMessage: Less than 1 values on ff:hasEvent->sh:path\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:class [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ] ; sh:message Literal(\"Must have an insurance event causing work disability.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:property ff:hasEvent ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:class [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ] ; sh:message Literal(\"Must have an insurance event causing work disability.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:property ff:hasEvent ]->sh:path\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: ff:unfitForWork\n\tResult Path: sh:path\n\tMessage: Less than 1 values on ff:unfitForWork->sh:path\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:message Literal(\"Must be unfit for work due to the insurance event.\") ; sh:property ff:unfitForWork ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:message Literal(\"Must be unfit for work due to the insurance event.\") ; sh:property ff:unfitForWork ]->sh:path\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:hasValue ff:B100019_LB_576842 ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:message Literal(\"Must receive Verletztengeld from statutory accident insurance.\") ; sh:property ff:receivesBenefit ]\n\tValue Node: [ sh:hasValue ff:B100019_LB_576842 ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:message Literal(\"Must receive Verletztengeld from statutory accident insurance.\") ; sh:property ff:receivesBenefit ]\n\tMessage: Node [ sh:hasValue ff:B100019_LB_576842 ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:message Literal(\"Must receive Verletztengeld from statutory accident insurance.\") ; sh:property ff:receivesBenefit ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:class [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ] ; sh:message Literal(\"Must have an insurance event causing work disability.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:property ff:hasEvent ]\n\tValue Node: [ sh:class [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ] ; sh:message Literal(\"Must have an insurance event causing work disability.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:property ff:hasEvent ]\n\tMessage: Node [ sh:class [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ] ; sh:message Literal(\"Must have an insurance event causing work disability.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:property ff:hasEvent ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:class ]\n\tFocus Node: [ sh:class [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ] ; sh:message Literal(\"Must have an insurance event causing work disability.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:property ff:hasEvent ]\n\tValue Node: [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ]\n\tResult Path: sh:class\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 9,
        "validation_results": [
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on ff:receivesBenefit->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:hasValue ff:B100019_LB_576842 ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:message Literal(\"Must receive Verletztengeld from statutory accident insurance.\") ; sh:property ff:receivesBenefit ]->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on ff:hasEvent->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:class [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ] ; sh:message Literal(\"Must have an insurance event causing work disability.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:property ff:hasEvent ]->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on ff:unfitForWork->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:message Literal(\"Must be unfit for work due to the insurance event.\") ; sh:property ff:unfitForWork ]->sh:path"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:hasValue ff:B100019_LB_576842 ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:message Literal(\"Must receive Verletztengeld from statutory accident insurance.\") ; sh:property ff:receivesBenefit ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:class [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ] ; sh:message Literal(\"Must have an insurance event causing work disability.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:property ff:hasEvent ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:class ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "deepseek-r1-distill-llama-70b",
        "file": "baseline_deepseek-r1-distill-llama-70b_buergergeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/deepseek-r1-distill-llama-70b/output/parsed_output/baseline_deepseek-r1-distill-llama-70b_buergergeld.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (2):\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:isPensionable ]\n\tValue Node: Literal(\"false\" = False, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:canCoverBasicNeedsOfBenefitUnit ]\n\tValue Node: Literal(\"false\" = False, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 2,
        "validation_results": [
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "deepseek-r1-distill-llama-70b",
        "file": "baseline_deepseek-r1-distill-llama-70b_krankengeld-begleitperson.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/deepseek-r1-distill-llama-70b/output/parsed_output/baseline_deepseek-r1-distill-llama-70b_krankengeld-begleitperson.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "deepseek-r1-distill-llama-70b",
        "file": "baseline_deepseek-r1-distill-llama-70b_guv-kinderverletztengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/deepseek-r1-distill-llama-70b/output/parsed_output/baseline_deepseek-r1-distill-llama-70b_guv-kinderverletztengeld.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (1):\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:canCoverPersonalBasicNeeds ]\n\tValue Node: Literal(\"true\" = True, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 1,
        "validation_results": [
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "qwq-32b",
        "file": "baseline_qwq-32b_insolvenzgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/qwq-32b/output/parsed_output/baseline_qwq-32b_insolvenzgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "qwq-32b",
        "file": "baseline_qwq-32b_ausbildungsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/qwq-32b/output/parsed_output/baseline_qwq-32b_ausbildungsgeld.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (1):\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:disjoint ]\n\tFocus Node: [ sh:disjoint ( ff:B100019_LB_102716305 ) ; sh:path ff:isEligibleFor ]\n\tValue Node: ( ff:B100019_LB_102716305 )\n\tResult Path: sh:disjoint\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 1,
        "validation_results": [
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:disjoint ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "qwq-32b",
        "file": "baseline_qwq-32b_aktivierung-und-eingliederung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/qwq-32b/output/parsed_output/baseline_qwq-32b_aktivierung-und-eingliederung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "qwq-32b",
        "file": "baseline_qwq-32b_guv-kinderverletztengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/qwq-32b/output/parsed_output/baseline_qwq-32b_guv-kinderverletztengeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "qwq-32b",
        "file": "baseline_qwq-32b_guv-uebergangsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/qwq-32b/output/parsed_output/baseline_qwq-32b_guv-uebergangsgeld.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (1):\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:class ]\n\tFocus Node: [ sh:class ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasEvent ]\n\tValue Node: ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease )\n\tResult Path: sh:class\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 1,
        "validation_results": [
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:class ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "qwq-32b",
        "file": "baseline_qwq-32b_guv-rente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/qwq-32b/output/parsed_output/baseline_qwq-32b_guv-rente.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (1):\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:class ]\n\tFocus Node: [ sh:class [ sh:in ( ff:WorkAccident ff:SchoolAccident ff:KindergartenAccident ff:CommutingAccident ff:OccupationalDisease ) ] ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:triggeringEvent ]\n\tValue Node: [ sh:in ( ff:WorkAccident ff:SchoolAccident ff:KindergartenAccident ff:CommutingAccident ff:OccupationalDisease ) ]\n\tResult Path: sh:class\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 1,
        "validation_results": [
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:class ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "qwq-32b",
        "file": "baseline_qwq-32b_guv-rentenabfindung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/qwq-32b/output/parsed_output/baseline_qwq-32b_guv-rentenabfindung.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (1):\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:or ( [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:deceasedSpouse ] [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:deceasedCivilPartner ] ) ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:or ( [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:deceasedSpouse ] [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:deceasedCivilPartner ] ) ]->sh:path\n",
        "nof_validation_results": 1,
        "validation_results": [
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:or ( [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:deceasedSpouse ] [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:deceasedCivilPartner ] ) ]->sh:path"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "qwq-32b",
        "file": "baseline_qwq-32b_arbeitslosengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/qwq-32b/output/parsed_output/baseline_qwq-32b_arbeitslosengeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "baseline_llama-3.1-sauerkrautlm-70b-instruct_guv-rentenabfindung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/baseline_llama-3.1-sauerkrautlm-70b-instruct_guv-rentenabfindung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "baseline_llama-3.1-sauerkrautlm-70b-instruct_krankengeld-begleitperson.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/baseline_llama-3.1-sauerkrautlm-70b-instruct_krankengeld-begleitperson.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (12):\nConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:message Literal(\"The caregiver must be linked to a medical event.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:BlankNodeOrIRI ; sh:path [ sh:inverse ff:caregiverInHousehold ; sh:path ff:hasEvent, ff:needsCare ] ; sh:severity sh:Violation ]\n\tValue Node: [ sh:inverse ff:caregiverInHousehold ; sh:path ff:hasEvent, ff:needsCare ]\n\tResult Path: sh:path\n\tMessage: Node [ sh:inverse ff:caregiverInHousehold ; sh:path ff:hasEvent, ff:needsCare ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]\nConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:message Literal(\"The medical event must require a full-day accompaniment.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:caregiverInHousehold ; sh:path ff:fullDayAccompaniment, ff:hasEvent, ff:needsCare ] ; sh:severity sh:Violation ]\n\tValue Node: [ sh:inverse ff:caregiverInHousehold ; sh:path ff:fullDayAccompaniment, ff:hasEvent, ff:needsCare ]\n\tResult Path: sh:path\n\tMessage: Node [ sh:inverse ff:caregiverInHousehold ; sh:path ff:fullDayAccompaniment, ff:hasEvent, ff:needsCare ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]\nConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:datatype ff:Person ; sh:message Literal(\"The user must be linked to a caregiver.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:caregiverInHousehold ; sh:path ff:needsCare ] ; sh:severity sh:Violation ]\n\tValue Node: [ sh:inverse ff:caregiverInHousehold ; sh:path ff:needsCare ]\n\tResult Path: sh:path\n\tMessage: Node [ sh:inverse ff:caregiverInHousehold ; sh:path ff:needsCare ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]\nConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:message Literal(\"The medical event must require hospitalization.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:caregiverInHousehold ; sh:path ff:hasEvent, ff:inPatientCoAdmission, ff:needsCare ] ; sh:severity sh:Violation ]\n\tValue Node: [ sh:inverse ff:caregiverInHousehold ; sh:path ff:hasEvent, ff:inPatientCoAdmission, ff:needsCare ]\n\tResult Path: sh:path\n\tMessage: Node [ sh:inverse ff:caregiverInHousehold ; sh:path ff:hasEvent, ff:inPatientCoAdmission, ff:needsCare ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]\nConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:message Literal(\"The medical event must result in a medical treatment.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:BlankNodeOrIRI ; sh:path [ sh:inverse ff:caregiverInHousehold ; sh:path ff:hasEvent, ff:needsCare, ff:resultsInTreatment ] ; sh:severity sh:Violation ]\n\tValue Node: [ sh:inverse ff:caregiverInHousehold ; sh:path ff:hasEvent, ff:needsCare, ff:resultsInTreatment ]\n\tResult Path: sh:path\n\tMessage: Node [ sh:inverse ff:caregiverInHousehold ; sh:path ff:hasEvent, ff:needsCare, ff:resultsInTreatment ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]\nConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:datatype xsd:dateTime ; sh:message Literal(\"The medical event must have a date.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:caregiverInHousehold ; sh:path ff:hasDate, ff:hasEvent, ff:needsCare ] ; sh:severity sh:Violation ]\n\tValue Node: [ sh:inverse ff:caregiverInHousehold ; sh:path ff:hasDate, ff:hasEvent, ff:needsCare ]\n\tResult Path: sh:path\n\tMessage: Node [ sh:inverse ff:caregiverInHousehold ; sh:path ff:hasDate, ff:hasEvent, ff:needsCare ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:message Literal(\"The medical event must require a full-day accompaniment.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:caregiverInHousehold ; sh:path ff:fullDayAccompaniment, ff:hasEvent, ff:needsCare ] ; sh:severity sh:Violation ]\n\tValue Node: [ sh:datatype xsd:boolean ; sh:message Literal(\"The medical event must require a full-day accompaniment.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:caregiverInHousehold ; sh:path ff:fullDayAccompaniment, ff:hasEvent, ff:needsCare ] ; sh:severity sh:Violation ]\n\tMessage: Node [ sh:datatype xsd:boolean ; sh:message Literal(\"The medical event must require a full-day accompaniment.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:caregiverInHousehold ; sh:path ff:fullDayAccompaniment, ff:hasEvent, ff:needsCare ] ; sh:severity sh:Violation ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:datatype ff:Person ; sh:message Literal(\"The user must be linked to a caregiver.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:caregiverInHousehold ; sh:path ff:needsCare ] ; sh:severity sh:Violation ]\n\tValue Node: [ sh:datatype ff:Person ; sh:message Literal(\"The user must be linked to a caregiver.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:caregiverInHousehold ; sh:path ff:needsCare ] ; sh:severity sh:Violation ]\n\tMessage: Node [ sh:datatype ff:Person ; sh:message Literal(\"The user must be linked to a caregiver.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:caregiverInHousehold ; sh:path ff:needsCare ] ; sh:severity sh:Violation ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:datatype xsd:dateTime ; sh:message Literal(\"The medical event must have a date.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:caregiverInHousehold ; sh:path ff:hasDate, ff:hasEvent, ff:needsCare ] ; sh:severity sh:Violation ]\n\tValue Node: [ sh:datatype xsd:dateTime ; sh:message Literal(\"The medical event must have a date.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:caregiverInHousehold ; sh:path ff:hasDate, ff:hasEvent, ff:needsCare ] ; sh:severity sh:Violation ]\n\tMessage: Node [ sh:datatype xsd:dateTime ; sh:message Literal(\"The medical event must have a date.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:caregiverInHousehold ; sh:path ff:hasDate, ff:hasEvent, ff:needsCare ] ; sh:severity sh:Violation ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:message Literal(\"The caregiver must be linked to a medical event.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:BlankNodeOrIRI ; sh:path [ sh:inverse ff:caregiverInHousehold ; sh:path ff:hasEvent, ff:needsCare ] ; sh:severity sh:Violation ]\n\tValue Node: [ sh:message Literal(\"The caregiver must be linked to a medical event.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:BlankNodeOrIRI ; sh:path [ sh:inverse ff:caregiverInHousehold ; sh:path ff:hasEvent, ff:needsCare ] ; sh:severity sh:Violation ]\n\tMessage: Node [ sh:message Literal(\"The caregiver must be linked to a medical event.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:BlankNodeOrIRI ; sh:path [ sh:inverse ff:caregiverInHousehold ; sh:path ff:hasEvent, ff:needsCare ] ; sh:severity sh:Violation ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:message Literal(\"The medical event must require hospitalization.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:caregiverInHousehold ; sh:path ff:hasEvent, ff:inPatientCoAdmission, ff:needsCare ] ; sh:severity sh:Violation ]\n\tValue Node: [ sh:datatype xsd:boolean ; sh:message Literal(\"The medical event must require hospitalization.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:caregiverInHousehold ; sh:path ff:hasEvent, ff:inPatientCoAdmission, ff:needsCare ] ; sh:severity sh:Violation ]\n\tMessage: Node [ sh:datatype xsd:boolean ; sh:message Literal(\"The medical event must require hospitalization.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:caregiverInHousehold ; sh:path ff:hasEvent, ff:inPatientCoAdmission, ff:needsCare ] ; sh:severity sh:Violation ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:message Literal(\"The medical event must result in a medical treatment.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:BlankNodeOrIRI ; sh:path [ sh:inverse ff:caregiverInHousehold ; sh:path ff:hasEvent, ff:needsCare, ff:resultsInTreatment ] ; sh:severity sh:Violation ]\n\tValue Node: [ sh:message Literal(\"The medical event must result in a medical treatment.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:BlankNodeOrIRI ; sh:path [ sh:inverse ff:caregiverInHousehold ; sh:path ff:hasEvent, ff:needsCare, ff:resultsInTreatment ] ; sh:severity sh:Violation ]\n\tMessage: Node [ sh:message Literal(\"The medical event must result in a medical treatment.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:BlankNodeOrIRI ; sh:path [ sh:inverse ff:caregiverInHousehold ; sh:path ff:hasEvent, ff:needsCare, ff:resultsInTreatment ] ; sh:severity sh:Violation ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\n",
        "nof_validation_results": 12,
        "validation_results": [
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Node [ sh:inverse ff:caregiverInHousehold ; sh:path ff:hasEvent, ff:needsCare ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Node [ sh:inverse ff:caregiverInHousehold ; sh:path ff:fullDayAccompaniment, ff:hasEvent, ff:needsCare ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Node [ sh:inverse ff:caregiverInHousehold ; sh:path ff:needsCare ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Node [ sh:inverse ff:caregiverInHousehold ; sh:path ff:hasEvent, ff:inPatientCoAdmission, ff:needsCare ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Node [ sh:inverse ff:caregiverInHousehold ; sh:path ff:hasEvent, ff:needsCare, ff:resultsInTreatment ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Node [ sh:inverse ff:caregiverInHousehold ; sh:path ff:hasDate, ff:hasEvent, ff:needsCare ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:datatype xsd:boolean ; sh:message Literal(\"The medical event must require a full-day accompaniment.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:caregiverInHousehold ; sh:path ff:fullDayAccompaniment, ff:hasEvent, ff:needsCare ] ; sh:severity sh:Violation ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:datatype ff:Person ; sh:message Literal(\"The user must be linked to a caregiver.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:caregiverInHousehold ; sh:path ff:needsCare ] ; sh:severity sh:Violation ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:datatype xsd:dateTime ; sh:message Literal(\"The medical event must have a date.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:caregiverInHousehold ; sh:path ff:hasDate, ff:hasEvent, ff:needsCare ] ; sh:severity sh:Violation ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:message Literal(\"The caregiver must be linked to a medical event.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:BlankNodeOrIRI ; sh:path [ sh:inverse ff:caregiverInHousehold ; sh:path ff:hasEvent, ff:needsCare ] ; sh:severity sh:Violation ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:datatype xsd:boolean ; sh:message Literal(\"The medical event must require hospitalization.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:caregiverInHousehold ; sh:path ff:hasEvent, ff:inPatientCoAdmission, ff:needsCare ] ; sh:severity sh:Violation ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:message Literal(\"The medical event must result in a medical treatment.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:BlankNodeOrIRI ; sh:path [ sh:inverse ff:caregiverInHousehold ; sh:path ff:hasEvent, ff:needsCare, ff:resultsInTreatment ] ; sh:severity sh:Violation ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "baseline_llama-3.1-sauerkrautlm-70b-instruct_bildung-und-teilhabe.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/baseline_llama-3.1-sauerkrautlm-70b-instruct_bildung-und-teilhabe.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "baseline_llama-3.1-sauerkrautlm-70b-instruct_grundausbildung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/baseline_llama-3.1-sauerkrautlm-70b-instruct_grundausbildung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "baseline_llama-3.1-sauerkrautlm-70b-instruct_buergergeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/baseline_llama-3.1-sauerkrautlm-70b-instruct_buergergeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "baseline_llama-3.1-sauerkrautlm-70b-instruct_berufsausbildungsbeihilfe.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/baseline_llama-3.1-sauerkrautlm-70b-instruct_berufsausbildungsbeihilfe.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (3):\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:lessThan ]\n\tFocus Node: [ sh:datatype xsd:decimal ; sh:lessThan Literal(\"0.5\", datatype=xsd:decimal) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:percentAbroad ]\n\tValue Node: Literal(\"0.5\", datatype=xsd:decimal)\n\tResult Path: sh:lessThan\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:lessThan ]\n\tFocus Node: [ sh:datatype xsd:int ; sh:lessThan Literal(\"12\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:monthsAbroad ]\n\tValue Node: Literal(\"12\", datatype=xsd:integer)\n\tResult Path: sh:lessThan\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:lessThan ]\n\tFocus Node: [ sh:datatype xsd:int ; sh:lessThan Literal(\"12\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:monthsTotal ]\n\tValue Node: Literal(\"12\", datatype=xsd:integer)\n\tResult Path: sh:lessThan\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 3,
        "validation_results": [
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:lessThan ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:lessThan ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:lessThan ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "baseline_llama-3.1-sauerkrautlm-70b-instruct_guv-waisenrente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/baseline_llama-3.1-sauerkrautlm-70b-instruct_guv-waisenrente.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "baseline_llama-3.1-sauerkrautlm-70b-instruct_guv-witwenrente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/baseline_llama-3.1-sauerkrautlm-70b-instruct_guv-witwenrente.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (3):\nConstraint Violation in MaxCountConstraintComponent (http://www.w3.org/ns/shacl#MaxCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path sh:lessThan ]\n\tFocus Node: ff:hasMaritalStatusShape\n\tResult Path: sh:lessThan\n\tMessage: More than 0 values on ff:hasMaritalStatusShape->sh:lessThan\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: ff:hasMaritalStatusShape\n\tValue Node: ff:hasMaritalStatusShape\n\tMessage: Node ff:hasMaritalStatusShape must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:lessThan ]\n\tFocus Node: ff:hasMaritalStatusShape\n\tValue Node: [ sh:node ff:hasDateShape ; sh:path ff:hasDate ]\n\tResult Path: sh:lessThan\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 3,
        "validation_results": [
            {
                "source_shape": "[ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path sh:lessThan ]",
                "message": "More than 0 values on ff:hasMaritalStatusShape->sh:lessThan"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node ff:hasMaritalStatusShape must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:lessThan ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "baseline_llama-3.1-sauerkrautlm-70b-instruct_guv-rente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/baseline_llama-3.1-sauerkrautlm-70b-instruct_guv-rente.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "baseline_llama-3.1-sauerkrautlm-70b-instruct_arbeitslosengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/baseline_llama-3.1-sauerkrautlm-70b-instruct_arbeitslosengeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "baseline_llama-3.1-sauerkrautlm-70b-instruct_guv-verletztengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/baseline_llama-3.1-sauerkrautlm-70b-instruct_guv-verletztengeld.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (1):\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:or ( [ sh:class ff:OccupationalRehabilitation ; sh:path ff:resultsInTreatment ] [ sh:class ff:WorkAccident ] [ sh:class ff:CommutingAccident ] [ sh:class ff:KindergartenAccident ] [ sh:class ff:SchoolAccident ] [ sh:class ff:OccupationalDisease ] ) ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:or ( [ sh:class ff:OccupationalRehabilitation ; sh:path ff:resultsInTreatment ] [ sh:class ff:WorkAccident ] [ sh:class ff:CommutingAccident ] [ sh:class ff:KindergartenAccident ] [ sh:class ff:SchoolAccident ] [ sh:class ff:OccupationalDisease ] ) ]->sh:path\n",
        "nof_validation_results": 1,
        "validation_results": [
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:or ( [ sh:class ff:OccupationalRehabilitation ; sh:path ff:resultsInTreatment ] [ sh:class ff:WorkAccident ] [ sh:class ff:CommutingAccident ] [ sh:class ff:KindergartenAccident ] [ sh:class ff:SchoolAccident ] [ sh:class ff:OccupationalDisease ] ) ]->sh:path"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "baseline_llama-3.1-sauerkrautlm-70b-instruct_kinderzuschlag.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/baseline_llama-3.1-sauerkrautlm-70b-instruct_kinderzuschlag.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (5):\nConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:hasValue ff:B100019_LB_581863 ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:receivesBenefit ] ]\n\tValue Node: [ sh:inverse ff:receivesBenefit ]\n\tResult Path: sh:path\n\tMessage: Node [ sh:inverse ff:receivesBenefit ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:hasValue ff:B100019_LB_581863 ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:receivesBenefit ] ]\n\tValue Node: [ sh:hasValue ff:B100019_LB_581863 ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:receivesBenefit ] ]\n\tMessage: Node [ sh:hasValue ff:B100019_LB_581863 ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:receivesBenefit ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:canCoverBasicNeedsOfBenefitUnit ]\n\tValue Node: Literal(\"true\" = True, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasConsiderableAssets ]\n\tValue Node: Literal(\"false\" = False, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:lessThan ]\n\tFocus Node: [ sh:lessThan Literal(\"25\", datatype=xsd:integer) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasAge ]\n\tValue Node: Literal(\"25\", datatype=xsd:integer)\n\tResult Path: sh:lessThan\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 5,
        "validation_results": [
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Node [ sh:inverse ff:receivesBenefit ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:hasValue ff:B100019_LB_581863 ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:receivesBenefit ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:lessThan ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "baseline_llama-3.1-sauerkrautlm-70b-instruct_aktivierung-und-eingliederung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/baseline_llama-3.1-sauerkrautlm-70b-instruct_aktivierung-und-eingliederung.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (2):\nConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:datatype ff:B100019_LB_102730340 ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:hasNoPriorityClaimsOver ] ]\n\tValue Node: [ sh:inverse ff:hasNoPriorityClaimsOver ]\n\tResult Path: sh:path\n\tMessage: Node [ sh:inverse ff:hasNoPriorityClaimsOver ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:datatype ff:B100019_LB_102730340 ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:hasNoPriorityClaimsOver ] ]\n\tValue Node: [ sh:datatype ff:B100019_LB_102730340 ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:hasNoPriorityClaimsOver ] ]\n\tMessage: Node [ sh:datatype ff:B100019_LB_102730340 ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:hasNoPriorityClaimsOver ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\n",
        "nof_validation_results": 2,
        "validation_results": [
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Node [ sh:inverse ff:hasNoPriorityClaimsOver ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:datatype ff:B100019_LB_102730340 ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:hasNoPriorityClaimsOver ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "baseline_llama-3.1-sauerkrautlm-70b-instruct_insolvenzgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/baseline_llama-3.1-sauerkrautlm-70b-instruct_insolvenzgeld.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (2):\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:lessThan ]\n\tFocus Node: [ sh:datatype xsd:dateTime ; sh:lessThan [ sh:datatype xsd:dateTime ; sh:nodeKind sh:Literal ; sh:path ff:hasDate ] ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Literal ; sh:path ff:hasDate ]\n\tValue Node: [ sh:datatype xsd:dateTime ; sh:nodeKind sh:Literal ; sh:path ff:hasDate ]\n\tResult Path: sh:lessThan\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:lessThanOrEquals ]\n\tFocus Node: [ sh:datatype xsd:decimal ; sh:lessThanOrEquals [ sh:datatype xsd:decimal ; sh:nodeKind sh:Literal ; sh:path ff:workHoursPerWeek ; sh:value Literal(\"15\", datatype=xsd:integer) ] ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Literal ; sh:path ff:workHoursPerWeek ]\n\tValue Node: [ sh:datatype xsd:decimal ; sh:nodeKind sh:Literal ; sh:path ff:workHoursPerWeek ; sh:value Literal(\"15\", datatype=xsd:integer) ]\n\tResult Path: sh:lessThanOrEquals\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 2,
        "validation_results": [
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:lessThan ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:lessThanOrEquals ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "baseline_llama-3.1-sauerkrautlm-70b-instruct_uebergangsgeld-behinderung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/baseline_llama-3.1-sauerkrautlm-70b-instruct_uebergangsgeld-behinderung.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (4):\nConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:message Literal(\"You must meet one of the three conditions for the 3-year period to be eligible for \u00dcbergangsgeld.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:or ( [ sh:datatype xsd:boolean ; sh:path ff:compulsoryInsuranceFor12In30 ] [ sh:datatype xsd:boolean ; sh:hasValue ff:B100019_LB_576842 ; sh:path ff:receivesBenefit ] [ sh:datatype xsd:boolean ; sh:hasValue ff:UnemploymentBenefitsSVG ; sh:path ff:hasNoPriorityClaimsOver ] ) ] ]\n\tValue Node: [ sh:or ( [ sh:datatype xsd:boolean ; sh:path ff:compulsoryInsuranceFor12In30 ] [ sh:datatype xsd:boolean ; sh:hasValue ff:B100019_LB_576842 ; sh:path ff:receivesBenefit ] [ sh:datatype xsd:boolean ; sh:hasValue ff:UnemploymentBenefitsSVG ; sh:path ff:hasNoPriorityClaimsOver ] ) ]\n\tResult Path: sh:path\n\tMessage: Node [ sh:or ( [ sh:datatype xsd:boolean ; sh:path ff:compulsoryInsuranceFor12In30 ] [ sh:datatype xsd:boolean ; sh:hasValue ff:B100019_LB_576842 ; sh:path ff:receivesBenefit ] [ sh:datatype xsd:boolean ; sh:hasValue ff:UnemploymentBenefitsSVG ; sh:path ff:hasNoPriorityClaimsOver ] ) ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]\nConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:message Literal(\"If you have completed a training program in the last year, the 3-year period is waived.\") ; sh:minCount Literal(\"0\", datatype=xsd:integer) ; sh:path [ sh:or ( [ sh:datatype xsd:boolean ; sh:hasValue ff:SchuleBerufsbildende ; sh:path ff:participates ] [ sh:datatype xsd:boolean ; sh:hasValue ff:Pr\u00fcfungszeugnis ; sh:path ff:participates ] ) ] ]\n\tValue Node: [ sh:or ( [ sh:datatype xsd:boolean ; sh:hasValue ff:SchuleBerufsbildende ; sh:path ff:participates ] [ sh:datatype xsd:boolean ; sh:hasValue ff:Pr\u00fcfungszeugnis ; sh:path ff:participates ] ) ]\n\tResult Path: sh:path\n\tMessage: Node [ sh:or ( [ sh:datatype xsd:boolean ; sh:hasValue ff:SchuleBerufsbildende ; sh:path ff:participates ] [ sh:datatype xsd:boolean ; sh:hasValue ff:Pr\u00fcfungszeugnis ; sh:path ff:participates ] ) ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:message Literal(\"You must meet one of the three conditions for the 3-year period to be eligible for \u00dcbergangsgeld.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:or ( [ sh:datatype xsd:boolean ; sh:path ff:compulsoryInsuranceFor12In30 ] [ sh:datatype xsd:boolean ; sh:hasValue ff:B100019_LB_576842 ; sh:path ff:receivesBenefit ] [ sh:datatype xsd:boolean ; sh:hasValue ff:UnemploymentBenefitsSVG ; sh:path ff:hasNoPriorityClaimsOver ] ) ] ]\n\tValue Node: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:message Literal(\"You must meet one of the three conditions for the 3-year period to be eligible for \u00dcbergangsgeld.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:or ( [ sh:datatype xsd:boolean ; sh:path ff:compulsoryInsuranceFor12In30 ] [ sh:datatype xsd:boolean ; sh:hasValue ff:B100019_LB_576842 ; sh:path ff:receivesBenefit ] [ sh:datatype xsd:boolean ; sh:hasValue ff:UnemploymentBenefitsSVG ; sh:path ff:hasNoPriorityClaimsOver ] ) ] ]\n\tMessage: Node [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:message Literal(\"You must meet one of the three conditions for the 3-year period to be eligible for \u00dcbergangsgeld.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:or ( [ sh:datatype xsd:boolean ; sh:path ff:compulsoryInsuranceFor12In30 ] [ sh:datatype xsd:boolean ; sh:hasValue ff:B100019_LB_576842 ; sh:path ff:receivesBenefit ] [ sh:datatype xsd:boolean ; sh:hasValue ff:UnemploymentBenefitsSVG ; sh:path ff:hasNoPriorityClaimsOver ] ) ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:message Literal(\"If you have completed a training program in the last year, the 3-year period is waived.\") ; sh:minCount Literal(\"0\", datatype=xsd:integer) ; sh:path [ sh:or ( [ sh:datatype xsd:boolean ; sh:hasValue ff:SchuleBerufsbildende ; sh:path ff:participates ] [ sh:datatype xsd:boolean ; sh:hasValue ff:Pr\u00fcfungszeugnis ; sh:path ff:participates ] ) ] ]\n\tValue Node: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:message Literal(\"If you have completed a training program in the last year, the 3-year period is waived.\") ; sh:minCount Literal(\"0\", datatype=xsd:integer) ; sh:path [ sh:or ( [ sh:datatype xsd:boolean ; sh:hasValue ff:SchuleBerufsbildende ; sh:path ff:participates ] [ sh:datatype xsd:boolean ; sh:hasValue ff:Pr\u00fcfungszeugnis ; sh:path ff:participates ] ) ] ]\n\tMessage: Node [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:message Literal(\"If you have completed a training program in the last year, the 3-year period is waived.\") ; sh:minCount Literal(\"0\", datatype=xsd:integer) ; sh:path [ sh:or ( [ sh:datatype xsd:boolean ; sh:hasValue ff:SchuleBerufsbildende ; sh:path ff:participates ] [ sh:datatype xsd:boolean ; sh:hasValue ff:Pr\u00fcfungszeugnis ; sh:path ff:participates ] ) ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\n",
        "nof_validation_results": 4,
        "validation_results": [
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Node [ sh:or ( [ sh:datatype xsd:boolean ; sh:path ff:compulsoryInsuranceFor12In30 ] [ sh:datatype xsd:boolean ; sh:hasValue ff:B100019_LB_576842 ; sh:path ff:receivesBenefit ] [ sh:datatype xsd:boolean ; sh:hasValue ff:UnemploymentBenefitsSVG ; sh:path ff:hasNoPriorityClaimsOver ] ) ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Node [ sh:or ( [ sh:datatype xsd:boolean ; sh:hasValue ff:SchuleBerufsbildende ; sh:path ff:participates ] [ sh:datatype xsd:boolean ; sh:hasValue ff:Pr\u00fcfungszeugnis ; sh:path ff:participates ] ) ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:message Literal(\"You must meet one of the three conditions for the 3-year period to be eligible for \u00dcbergangsgeld.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:or ( [ sh:datatype xsd:boolean ; sh:path ff:compulsoryInsuranceFor12In30 ] [ sh:datatype xsd:boolean ; sh:hasValue ff:B100019_LB_576842 ; sh:path ff:receivesBenefit ] [ sh:datatype xsd:boolean ; sh:hasValue ff:UnemploymentBenefitsSVG ; sh:path ff:hasNoPriorityClaimsOver ] ) ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:message Literal(\"If you have completed a training program in the last year, the 3-year period is waived.\") ; sh:minCount Literal(\"0\", datatype=xsd:integer) ; sh:path [ sh:or ( [ sh:datatype xsd:boolean ; sh:hasValue ff:SchuleBerufsbildende ; sh:path ff:participates ] [ sh:datatype xsd:boolean ; sh:hasValue ff:Pr\u00fcfungszeugnis ; sh:path ff:participates ] ) ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "baseline_llama-3.1-sauerkrautlm-70b-instruct_einstiegsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/baseline_llama-3.1-sauerkrautlm-70b-instruct_einstiegsgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "baseline_llama-3.1-sauerkrautlm-70b-instruct_kindergeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/baseline_llama-3.1-sauerkrautlm-70b-instruct_kindergeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "llama-3.3-70b-instruct",
        "file": "baseline_llama-3.3-70b-instruct_einstiegsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/llama-3.3-70b-instruct/output/parsed_output/baseline_llama-3.3-70b-instruct_einstiegsgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "llama-3.3-70b-instruct",
        "file": "baseline_llama-3.3-70b-instruct_aktivierung-und-eingliederung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/llama-3.3-70b-instruct/output/parsed_output/baseline_llama-3.3-70b-instruct_aktivierung-und-eingliederung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "llama-3.3-70b-instruct",
        "file": "baseline_llama-3.3-70b-instruct_guv-verletztengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/llama-3.3-70b-instruct/output/parsed_output/baseline_llama-3.3-70b-instruct_guv-verletztengeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "llama-3.3-70b-instruct",
        "file": "baseline_llama-3.3-70b-instruct_grundausbildung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/llama-3.3-70b-instruct/output/parsed_output/baseline_llama-3.3-70b-instruct_grundausbildung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "llama-3.3-70b-instruct",
        "file": "baseline_llama-3.3-70b-instruct_grundsicherung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/llama-3.3-70b-instruct/output/parsed_output/baseline_llama-3.3-70b-instruct_grundsicherung.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (4):\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ShapeShape ; sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ]\n\tFocus Node: ( [ sh:datatype xsd:boolean ; sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:hasDisability ] [ sh:class ff:Disability ; sh:path ff:hasDisabilityType ] )\n\tValue Node: [ sh:datatype xsd:boolean ; sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:hasDisability ]\n\tResult Path: ( [ sh:zeroOrMorePath rdf:rest ] rdf:first )\n\tMessage: Value does not conform to Shape shsh:ShapeShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\t\t\tFocus Node: [ sh:datatype xsd:boolean ; sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:hasDisability ]\n\t\t\tValue Node: Literal(\"true\" = True, datatype=xsd:boolean)\n\t\t\tResult Path: sh:equals\n\t\t\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:canCoverBasicNeedsOfBenefitUnit ]\n\tValue Node: Literal(\"false\" = False, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:hasDisability ]\n\tValue Node: Literal(\"true\" = True, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:canCoverPersonalBasicNeeds ]\n\tValue Node: Literal(\"false\" = False, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 4,
        "validation_results": [
            {
                "source_shape": "[ sh:node shsh:ShapeShape ; sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ]",
                "message": "Value does not conform to Shape shsh:ShapeShape. See details for more information."
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "llama-3.3-70b-instruct",
        "file": "baseline_llama-3.3-70b-instruct_uebergangsgeld-behinderung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/llama-3.3-70b-instruct/output/parsed_output/baseline_llama-3.3-70b-instruct_uebergangsgeld-behinderung.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (1):\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:class ]\n\tFocus Node: [ sh:class [ sh:or ( ff:Berufsausbildung ff:Berufsvorbereitung ff:Unterst\u00fctzteBesch\u00e4ftigung ff:Eingangsverfahren ff:Berufsbildungsbereich ff:BeruflicheWeiterbildung ) ] ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:participates ]\n\tValue Node: [ sh:or ( ff:Berufsausbildung ff:Berufsvorbereitung ff:Unterst\u00fctzteBesch\u00e4ftigung ff:Eingangsverfahren ff:Berufsbildungsbereich ff:BeruflicheWeiterbildung ) ]\n\tResult Path: sh:class\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 1,
        "validation_results": [
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:class ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "llama-3.3-70b-instruct",
        "file": "baseline_llama-3.3-70b-instruct_guv-rentenabfindung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/llama-3.3-70b-instruct/output/parsed_output/baseline_llama-3.3-70b-instruct_guv-rentenabfindung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "llama-3.3-70b-instruct",
        "file": "baseline_llama-3.3-70b-instruct_guv-uebergangsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/llama-3.3-70b-instruct/output/parsed_output/baseline_llama-3.3-70b-instruct_guv-uebergangsgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "llama-3.3-70b-instruct",
        "file": "baseline_llama-3.3-70b-instruct_kindergeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/llama-3.3-70b-instruct/output/parsed_output/baseline_llama-3.3-70b-instruct_kindergeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "llama-3.3-70b-instruct",
        "file": "baseline_llama-3.3-70b-instruct_arbeitslosengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/llama-3.3-70b-instruct/output/parsed_output/baseline_llama-3.3-70b-instruct_arbeitslosengeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "llama-3.3-70b-instruct",
        "file": "baseline_llama-3.3-70b-instruct_bildung-und-teilhabe.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/llama-3.3-70b-instruct/output/parsed_output/baseline_llama-3.3-70b-instruct_bildung-und-teilhabe.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (5):\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ListShape ; sh:path sh:or ]\n\tFocus Node: [ sh:maxInclusive Literal(\"18\", datatype=xsd:integer) ; sh:minInclusive Literal(\"0\", datatype=xsd:integer) ; sh:or [ sh:maxInclusive Literal(\"25\", datatype=xsd:integer) ; sh:minInclusive Literal(\"0\", datatype=xsd:integer) ; sh:path ff:hasAge ] ; sh:path ff:hasAge ]\n\tValue Node: [ sh:maxInclusive Literal(\"25\", datatype=xsd:integer) ; sh:minInclusive Literal(\"0\", datatype=xsd:integer) ; sh:path ff:hasAge ]\n\tResult Path: sh:or\n\tMessage: Value does not conform to Shape shsh:ListShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in HasValueConstraintComponent (http://www.w3.org/ns/shacl#HasValueConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:maxInclusive Literal(\"25\", datatype=xsd:integer) ; sh:minInclusive Literal(\"0\", datatype=xsd:integer) ; sh:path ff:hasAge ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Node [ sh:maxInclusive Literal(\"25\", datatype=xsd:integer) ; sh:minInclusive Literal(\"0\", datatype=xsd:integer) ; sh:path ff:hasAge ]->[ sh:zeroOrMorePath rdf:rest ] does not contain a value in the set: ['rdf:nil']\n\t\tConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:maxInclusive Literal(\"25\", datatype=xsd:integer) ; sh:minInclusive Literal(\"0\", datatype=xsd:integer) ; sh:path ff:hasAge ]\n\t\t\tValue Node: [ sh:maxInclusive Literal(\"25\", datatype=xsd:integer) ; sh:minInclusive Literal(\"0\", datatype=xsd:integer) ; sh:path ff:hasAge ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Value does not conform to Shape shsh:ListNodeShape. See details for more information.\n\t\t\tDetails:\n\t\t\t\tConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\tSource Shape: shsh:ListNodeShape\n\t\t\t\t\tFocus Node: [ sh:maxInclusive Literal(\"25\", datatype=xsd:integer) ; sh:minInclusive Literal(\"0\", datatype=xsd:integer) ; sh:path ff:hasAge ]\n\t\t\t\t\tValue Node: [ sh:maxInclusive Literal(\"25\", datatype=xsd:integer) ; sh:minInclusive Literal(\"0\", datatype=xsd:integer) ; sh:path ff:hasAge ]\n\t\t\t\t\tMessage: Node [ sh:maxInclusive Literal(\"25\", datatype=xsd:integer) ; sh:minInclusive Literal(\"0\", datatype=xsd:integer) ; sh:path ff:hasAge ] must conform to one or more shapes in [ sh:hasValue rdf:nil ; sh:property [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:rest ] ] , [ sh:not [ sh:hasValue rdf:nil ] ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:rest ] ]\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ListShape ; sh:path sh:or ]\n\tFocus Node: [ sh:hasValue ff:B100019_LB_106311931 ; sh:or [ sh:hasValue ff:AsylumSeekerBenefits ; sh:path ff:receivesBenefit ], [ sh:hasValue ff:L100040_LB_8665924 ; sh:path ff:receivesBenefit ], [ sh:hasValue ff:SocialAssistance ; sh:path ff:receivesBenefit ], [ sh:maxExclusive Literal(\"1500\", datatype=xsd:integer) ; sh:path ff:hasIncome ] ; sh:path ff:receivesBenefit ]\n\tValue Node: [ sh:maxExclusive Literal(\"1500\", datatype=xsd:integer) ; sh:path ff:hasIncome ]\n\tResult Path: sh:or\n\tMessage: Value does not conform to Shape shsh:ListShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in HasValueConstraintComponent (http://www.w3.org/ns/shacl#HasValueConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:maxExclusive Literal(\"1500\", datatype=xsd:integer) ; sh:path ff:hasIncome ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Node [ sh:maxExclusive Literal(\"1500\", datatype=xsd:integer) ; sh:path ff:hasIncome ]->[ sh:zeroOrMorePath rdf:rest ] does not contain a value in the set: ['rdf:nil']\n\t\tConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:maxExclusive Literal(\"1500\", datatype=xsd:integer) ; sh:path ff:hasIncome ]\n\t\t\tValue Node: [ sh:maxExclusive Literal(\"1500\", datatype=xsd:integer) ; sh:path ff:hasIncome ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Value does not conform to Shape shsh:ListNodeShape. See details for more information.\n\t\t\tDetails:\n\t\t\t\tConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\tSource Shape: shsh:ListNodeShape\n\t\t\t\t\tFocus Node: [ sh:maxExclusive Literal(\"1500\", datatype=xsd:integer) ; sh:path ff:hasIncome ]\n\t\t\t\t\tValue Node: [ sh:maxExclusive Literal(\"1500\", datatype=xsd:integer) ; sh:path ff:hasIncome ]\n\t\t\t\t\tMessage: Node [ sh:maxExclusive Literal(\"1500\", datatype=xsd:integer) ; sh:path ff:hasIncome ] must conform to one or more shapes in [ sh:hasValue rdf:nil ; sh:property [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:rest ] ] , [ sh:not [ sh:hasValue rdf:nil ] ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:rest ] ]\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ListShape ; sh:path sh:or ]\n\tFocus Node: [ sh:hasValue ff:B100019_LB_106311931 ; sh:or [ sh:hasValue ff:AsylumSeekerBenefits ; sh:path ff:receivesBenefit ], [ sh:hasValue ff:L100040_LB_8665924 ; sh:path ff:receivesBenefit ], [ sh:hasValue ff:SocialAssistance ; sh:path ff:receivesBenefit ], [ sh:maxExclusive Literal(\"1500\", datatype=xsd:integer) ; sh:path ff:hasIncome ] ; sh:path ff:receivesBenefit ]\n\tValue Node: [ sh:hasValue ff:L100040_LB_8665924 ; sh:path ff:receivesBenefit ]\n\tResult Path: sh:or\n\tMessage: Value does not conform to Shape shsh:ListShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in HasValueConstraintComponent (http://www.w3.org/ns/shacl#HasValueConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:hasValue ff:L100040_LB_8665924 ; sh:path ff:receivesBenefit ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Node [ sh:hasValue ff:L100040_LB_8665924 ; sh:path ff:receivesBenefit ]->[ sh:zeroOrMorePath rdf:rest ] does not contain a value in the set: ['rdf:nil']\n\t\tConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:hasValue ff:L100040_LB_8665924 ; sh:path ff:receivesBenefit ]\n\t\t\tValue Node: [ sh:hasValue ff:L100040_LB_8665924 ; sh:path ff:receivesBenefit ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Value does not conform to Shape shsh:ListNodeShape. See details for more information.\n\t\t\tDetails:\n\t\t\t\tConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\tSource Shape: shsh:ListNodeShape\n\t\t\t\t\tFocus Node: [ sh:hasValue ff:L100040_LB_8665924 ; sh:path ff:receivesBenefit ]\n\t\t\t\t\tValue Node: [ sh:hasValue ff:L100040_LB_8665924 ; sh:path ff:receivesBenefit ]\n\t\t\t\t\tMessage: Node [ sh:hasValue ff:L100040_LB_8665924 ; sh:path ff:receivesBenefit ] must conform to one or more shapes in [ sh:hasValue rdf:nil ; sh:property [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:rest ] ] , [ sh:not [ sh:hasValue rdf:nil ] ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:rest ] ]\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ListShape ; sh:path sh:or ]\n\tFocus Node: [ sh:hasValue ff:B100019_LB_106311931 ; sh:or [ sh:hasValue ff:AsylumSeekerBenefits ; sh:path ff:receivesBenefit ], [ sh:hasValue ff:L100040_LB_8665924 ; sh:path ff:receivesBenefit ], [ sh:hasValue ff:SocialAssistance ; sh:path ff:receivesBenefit ], [ sh:maxExclusive Literal(\"1500\", datatype=xsd:integer) ; sh:path ff:hasIncome ] ; sh:path ff:receivesBenefit ]\n\tValue Node: [ sh:hasValue ff:AsylumSeekerBenefits ; sh:path ff:receivesBenefit ]\n\tResult Path: sh:or\n\tMessage: Value does not conform to Shape shsh:ListShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in HasValueConstraintComponent (http://www.w3.org/ns/shacl#HasValueConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:hasValue ff:AsylumSeekerBenefits ; sh:path ff:receivesBenefit ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Node [ sh:hasValue ff:AsylumSeekerBenefits ; sh:path ff:receivesBenefit ]->[ sh:zeroOrMorePath rdf:rest ] does not contain a value in the set: ['rdf:nil']\n\t\tConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:hasValue ff:AsylumSeekerBenefits ; sh:path ff:receivesBenefit ]\n\t\t\tValue Node: [ sh:hasValue ff:AsylumSeekerBenefits ; sh:path ff:receivesBenefit ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Value does not conform to Shape shsh:ListNodeShape. See details for more information.\n\t\t\tDetails:\n\t\t\t\tConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\tSource Shape: shsh:ListNodeShape\n\t\t\t\t\tFocus Node: [ sh:hasValue ff:AsylumSeekerBenefits ; sh:path ff:receivesBenefit ]\n\t\t\t\t\tValue Node: [ sh:hasValue ff:AsylumSeekerBenefits ; sh:path ff:receivesBenefit ]\n\t\t\t\t\tMessage: Node [ sh:hasValue ff:AsylumSeekerBenefits ; sh:path ff:receivesBenefit ] must conform to one or more shapes in [ sh:hasValue rdf:nil ; sh:property [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:rest ] ] , [ sh:not [ sh:hasValue rdf:nil ] ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:rest ] ]\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ListShape ; sh:path sh:or ]\n\tFocus Node: [ sh:hasValue ff:B100019_LB_106311931 ; sh:or [ sh:hasValue ff:AsylumSeekerBenefits ; sh:path ff:receivesBenefit ], [ sh:hasValue ff:L100040_LB_8665924 ; sh:path ff:receivesBenefit ], [ sh:hasValue ff:SocialAssistance ; sh:path ff:receivesBenefit ], [ sh:maxExclusive Literal(\"1500\", datatype=xsd:integer) ; sh:path ff:hasIncome ] ; sh:path ff:receivesBenefit ]\n\tValue Node: [ sh:hasValue ff:SocialAssistance ; sh:path ff:receivesBenefit ]\n\tResult Path: sh:or\n\tMessage: Value does not conform to Shape shsh:ListShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in HasValueConstraintComponent (http://www.w3.org/ns/shacl#HasValueConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:hasValue ff:SocialAssistance ; sh:path ff:receivesBenefit ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Node [ sh:hasValue ff:SocialAssistance ; sh:path ff:receivesBenefit ]->[ sh:zeroOrMorePath rdf:rest ] does not contain a value in the set: ['rdf:nil']\n\t\tConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:hasValue ff:SocialAssistance ; sh:path ff:receivesBenefit ]\n\t\t\tValue Node: [ sh:hasValue ff:SocialAssistance ; sh:path ff:receivesBenefit ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Value does not conform to Shape shsh:ListNodeShape. See details for more information.\n\t\t\tDetails:\n\t\t\t\tConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\tSource Shape: shsh:ListNodeShape\n\t\t\t\t\tFocus Node: [ sh:hasValue ff:SocialAssistance ; sh:path ff:receivesBenefit ]\n\t\t\t\t\tValue Node: [ sh:hasValue ff:SocialAssistance ; sh:path ff:receivesBenefit ]\n\t\t\t\t\tMessage: Node [ sh:hasValue ff:SocialAssistance ; sh:path ff:receivesBenefit ] must conform to one or more shapes in [ sh:hasValue rdf:nil ; sh:property [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:rest ] ] , [ sh:not [ sh:hasValue rdf:nil ] ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:rest ] ]\n",
        "nof_validation_results": 5,
        "validation_results": [
            {
                "source_shape": "[ sh:node shsh:ListShape ; sh:path sh:or ]",
                "message": "Value does not conform to Shape shsh:ListShape. See details for more information."
            },
            {
                "source_shape": "[ sh:node shsh:ListShape ; sh:path sh:or ]",
                "message": "Value does not conform to Shape shsh:ListShape. See details for more information."
            },
            {
                "source_shape": "[ sh:node shsh:ListShape ; sh:path sh:or ]",
                "message": "Value does not conform to Shape shsh:ListShape. See details for more information."
            },
            {
                "source_shape": "[ sh:node shsh:ListShape ; sh:path sh:or ]",
                "message": "Value does not conform to Shape shsh:ListShape. See details for more information."
            },
            {
                "source_shape": "[ sh:node shsh:ListShape ; sh:path sh:or ]",
                "message": "Value does not conform to Shape shsh:ListShape. See details for more information."
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "llama-3.3-70b-instruct",
        "file": "baseline_llama-3.3-70b-instruct_insolvenzgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/llama-3.3-70b-instruct/output/parsed_output/baseline_llama-3.3-70b-instruct_insolvenzgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "llama-3.3-70b-instruct",
        "file": "baseline_llama-3.3-70b-instruct_guv-rente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/llama-3.3-70b-instruct/output/parsed_output/baseline_llama-3.3-70b-instruct_guv-rente.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "llama-3.3-70b-instruct",
        "file": "baseline_llama-3.3-70b-instruct_ausbildungsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/llama-3.3-70b-instruct/output/parsed_output/baseline_llama-3.3-70b-instruct_ausbildungsgeld.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (1):\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasDisability ]\n\tValue Node: Literal(\"true\" = True, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 1,
        "validation_results": [
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "mistral-large-instruct",
        "file": "baseline_mistral-large-instruct_guv-kinderverletztengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/mistral-large-instruct/output/parsed_output/baseline_mistral-large-instruct_guv-kinderverletztengeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "mistral-large-instruct",
        "file": "baseline_mistral-large-instruct_buergergeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/mistral-large-instruct/output/parsed_output/baseline_mistral-large-instruct_buergergeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "mistral-large-instruct",
        "file": "baseline_mistral-large-instruct_uebergangsgeld-behinderung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/mistral-large-instruct/output/parsed_output/baseline_mistral-large-instruct_uebergangsgeld-behinderung.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (1):\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:lessThanOrEquals ]\n\tFocus Node: [ sh:lessThanOrEquals [ sh:path ff:hasDate ; sh:value Literal(\"now() - P1Y\", datatype=xsd:dateTime) ] ; sh:path ff:hasDate ]\n\tValue Node: [ sh:path ff:hasDate ; sh:value Literal(\"now() - P1Y\", datatype=xsd:dateTime) ]\n\tResult Path: sh:lessThanOrEquals\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 1,
        "validation_results": [
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:lessThanOrEquals ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "mistral-large-instruct",
        "file": "baseline_mistral-large-instruct_guv-waisenrente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/mistral-large-instruct/output/parsed_output/baseline_mistral-large-instruct_guv-waisenrente.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "mistral-large-instruct",
        "file": "baseline_mistral-large-instruct_bildung-und-teilhabe.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/mistral-large-instruct/output/parsed_output/baseline_mistral-large-instruct_bildung-und-teilhabe.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (3):\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:lessThanOrEquals ]\n\tFocus Node: [ sh:lessThanOrEquals Literal(\"1000\", datatype=xsd:integer) ; sh:path ff:familyGrossIncome ]\n\tValue Node: Literal(\"1000\", datatype=xsd:integer)\n\tResult Path: sh:lessThanOrEquals\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:lessThanOrEquals ]\n\tFocus Node: [ sh:lessThanOrEquals Literal(\"25\", datatype=xsd:integer) ; sh:path ff:hasAge ]\n\tValue Node: Literal(\"25\", datatype=xsd:integer)\n\tResult Path: sh:lessThanOrEquals\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:lessThanOrEquals ]\n\tFocus Node: [ sh:lessThanOrEquals Literal(\"18\", datatype=xsd:integer) ; sh:path ff:hasAge ]\n\tValue Node: Literal(\"18\", datatype=xsd:integer)\n\tResult Path: sh:lessThanOrEquals\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 3,
        "validation_results": [
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:lessThanOrEquals ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:lessThanOrEquals ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:lessThanOrEquals ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "mistral-large-instruct",
        "file": "baseline_mistral-large-instruct_guv-rentenabfindung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/mistral-large-instruct/output/parsed_output/baseline_mistral-large-instruct_guv-rentenabfindung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "mistral-large-instruct",
        "file": "baseline_mistral-large-instruct_ausbildungsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/mistral-large-instruct/output/parsed_output/baseline_mistral-large-instruct_ausbildungsgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "mistral-large-instruct",
        "file": "baseline_mistral-large-instruct_berufsausbildungsbeihilfe.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/mistral-large-instruct/output/parsed_output/baseline_mistral-large-instruct_berufsausbildungsbeihilfe.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (3):\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ShapeShape ; sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ]\n\tFocus Node: ( [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ] [ sh:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; sh:qualifiedValueShape [ sh:property [ sh:class ff:Disability ; sh:path ff:ruleExemptionBecause ] ] ] )\n\tValue Node: [ sh:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; sh:qualifiedValueShape [ sh:property [ sh:class ff:Disability ; sh:path ff:ruleExemptionBecause ] ] ]\n\tResult Path: ( [ sh:zeroOrMorePath rdf:rest ] rdf:first )\n\tMessage: Value does not conform to Shape shsh:ShapeShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: shsh:ShapeShape\n\t\t\tFocus Node: [ sh:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; sh:qualifiedValueShape [ sh:property [ sh:class ff:Disability ; sh:path ff:ruleExemptionBecause ] ] ]\n\t\t\tValue Node: [ sh:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; sh:qualifiedValueShape [ sh:property [ sh:class ff:Disability ; sh:path ff:ruleExemptionBecause ] ] ]\n\t\t\tMessage: Node [ sh:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; sh:qualifiedValueShape [ sh:property [ sh:class ff:Disability ; sh:path ff:ruleExemptionBecause ] ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; sh:qualifiedValueShape [ sh:property [ sh:class ff:Disability ; sh:path ff:ruleExemptionBecause ] ] ]\n\tValue Node: [ sh:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; sh:qualifiedValueShape [ sh:property [ sh:class ff:Disability ; sh:path ff:ruleExemptionBecause ] ] ]\n\tMessage: Node [ sh:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; sh:qualifiedValueShape [ sh:property [ sh:class ff:Disability ; sh:path ff:ruleExemptionBecause ] ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:lessThanOrEquals ]\n\tFocus Node: [ sh:lessThanOrEquals Literal(\"50\", datatype=xsd:integer) ; sh:path ff:percentAbroad ]\n\tValue Node: Literal(\"50\", datatype=xsd:integer)\n\tResult Path: sh:lessThanOrEquals\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 3,
        "validation_results": [
            {
                "source_shape": "[ sh:node shsh:ShapeShape ; sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ]",
                "message": "Value does not conform to Shape shsh:ShapeShape. See details for more information."
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; sh:qualifiedValueShape [ sh:property [ sh:class ff:Disability ; sh:path ff:ruleExemptionBecause ] ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:lessThanOrEquals ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "mistral-large-instruct",
        "file": "baseline_mistral-large-instruct_grundausbildung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/mistral-large-instruct/output/parsed_output/baseline_mistral-large-instruct_grundausbildung.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (2):\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ListShape ; sh:path sh:or ]\n\tFocus Node: [ sh:hasValue ff:VisualImpairment ; sh:or [ sh:hasValue ff:HearingImpairment ; sh:path ff:atRiskOfDisabilityType ] ; sh:path ff:atRiskOfDisabilityType ]\n\tValue Node: [ sh:hasValue ff:HearingImpairment ; sh:path ff:atRiskOfDisabilityType ]\n\tResult Path: sh:or\n\tMessage: Value does not conform to Shape shsh:ListShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in HasValueConstraintComponent (http://www.w3.org/ns/shacl#HasValueConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:hasValue ff:HearingImpairment ; sh:path ff:atRiskOfDisabilityType ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Node [ sh:hasValue ff:HearingImpairment ; sh:path ff:atRiskOfDisabilityType ]->[ sh:zeroOrMorePath rdf:rest ] does not contain a value in the set: ['rdf:nil']\n\t\tConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:hasValue ff:HearingImpairment ; sh:path ff:atRiskOfDisabilityType ]\n\t\t\tValue Node: [ sh:hasValue ff:HearingImpairment ; sh:path ff:atRiskOfDisabilityType ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Value does not conform to Shape shsh:ListNodeShape. See details for more information.\n\t\t\tDetails:\n\t\t\t\tConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\tSource Shape: shsh:ListNodeShape\n\t\t\t\t\tFocus Node: [ sh:hasValue ff:HearingImpairment ; sh:path ff:atRiskOfDisabilityType ]\n\t\t\t\t\tValue Node: [ sh:hasValue ff:HearingImpairment ; sh:path ff:atRiskOfDisabilityType ]\n\t\t\t\t\tMessage: Node [ sh:hasValue ff:HearingImpairment ; sh:path ff:atRiskOfDisabilityType ] must conform to one or more shapes in [ sh:hasValue rdf:nil ; sh:property [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:rest ] ] , [ sh:not [ sh:hasValue rdf:nil ] ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:rest ] ]\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ListShape ; sh:path sh:or ]\n\tFocus Node: [ sh:hasValue ff:VisualImpairment ; sh:or [ sh:hasValue ff:HearingImpairment ; sh:path ff:hasDisabilityType ; sh:property [ sh:hasValue ff:VisualImpairment ; sh:or [ sh:hasValue ff:HearingImpairment ; sh:path ff:atRiskOfDisabilityType ] ; sh:path ff:atRiskOfDisabilityType ] ] ; sh:path ff:hasDisabilityType ]\n\tValue Node: [ sh:hasValue ff:HearingImpairment ; sh:path ff:hasDisabilityType ; sh:property [ sh:hasValue ff:VisualImpairment ; sh:or [ sh:hasValue ff:HearingImpairment ; sh:path ff:atRiskOfDisabilityType ] ; sh:path ff:atRiskOfDisabilityType ] ]\n\tResult Path: sh:or\n\tMessage: Value does not conform to Shape shsh:ListShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in HasValueConstraintComponent (http://www.w3.org/ns/shacl#HasValueConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:hasValue ff:HearingImpairment ; sh:path ff:hasDisabilityType ; sh:property [ sh:hasValue ff:VisualImpairment ; sh:or [ sh:hasValue ff:HearingImpairment ; sh:path ff:atRiskOfDisabilityType ] ; sh:path ff:atRiskOfDisabilityType ] ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Node [ sh:hasValue ff:HearingImpairment ; sh:path ff:hasDisabilityType ; sh:property [ sh:hasValue ff:VisualImpairment ; sh:or [ sh:hasValue ff:HearingImpairment ; sh:path ff:atRiskOfDisabilityType ] ; sh:path ff:atRiskOfDisabilityType ] ]->[ sh:zeroOrMorePath rdf:rest ] does not contain a value in the set: ['rdf:nil']\n\t\tConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:hasValue ff:HearingImpairment ; sh:path ff:hasDisabilityType ; sh:property [ sh:hasValue ff:VisualImpairment ; sh:or [ sh:hasValue ff:HearingImpairment ; sh:path ff:atRiskOfDisabilityType ] ; sh:path ff:atRiskOfDisabilityType ] ]\n\t\t\tValue Node: [ sh:hasValue ff:HearingImpairment ; sh:path ff:hasDisabilityType ; sh:property [ sh:hasValue ff:VisualImpairment ; sh:or [ sh:hasValue ff:HearingImpairment ; sh:path ff:atRiskOfDisabilityType ] ; sh:path ff:atRiskOfDisabilityType ] ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Value does not conform to Shape shsh:ListNodeShape. See details for more information.\n\t\t\tDetails:\n\t\t\t\tConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\tSource Shape: shsh:ListNodeShape\n\t\t\t\t\tFocus Node: [ sh:hasValue ff:HearingImpairment ; sh:path ff:hasDisabilityType ; sh:property [ sh:hasValue ff:VisualImpairment ; sh:or [ sh:hasValue ff:HearingImpairment ; sh:path ff:atRiskOfDisabilityType ] ; sh:path ff:atRiskOfDisabilityType ] ]\n\t\t\t\t\tValue Node: [ sh:hasValue ff:HearingImpairment ; sh:path ff:hasDisabilityType ; sh:property [ sh:hasValue ff:VisualImpairment ; sh:or [ sh:hasValue ff:HearingImpairment ; sh:path ff:atRiskOfDisabilityType ] ; sh:path ff:atRiskOfDisabilityType ] ]\n\t\t\t\t\tMessage: Node [ sh:hasValue ff:HearingImpairment ; sh:path ff:hasDisabilityType ; sh:property [ sh:hasValue ff:VisualImpairment ; sh:or [ sh:hasValue ff:HearingImpairment ; sh:path ff:atRiskOfDisabilityType ] ; sh:path ff:atRiskOfDisabilityType ] ] must conform to one or more shapes in [ sh:hasValue rdf:nil ; sh:property [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:rest ] ] , [ sh:not [ sh:hasValue rdf:nil ] ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:rest ] ]\n",
        "nof_validation_results": 2,
        "validation_results": [
            {
                "source_shape": "[ sh:node shsh:ListShape ; sh:path sh:or ]",
                "message": "Value does not conform to Shape shsh:ListShape. See details for more information."
            },
            {
                "source_shape": "[ sh:node shsh:ListShape ; sh:path sh:or ]",
                "message": "Value does not conform to Shape shsh:ListShape. See details for more information."
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "mistral-large-instruct",
        "file": "baseline_mistral-large-instruct_guv-verletztengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/mistral-large-instruct/output/parsed_output/baseline_mistral-large-instruct_guv-verletztengeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "mistral-large-instruct",
        "file": "baseline_mistral-large-instruct_arbeitslosengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/mistral-large-instruct/output/parsed_output/baseline_mistral-large-instruct_arbeitslosengeld.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (1):\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:lessThan ]\n\tFocus Node: [ sh:lessThan Literal(\"15\", datatype=xsd:integer) ; sh:path ff:workHoursPerWeek ]\n\tValue Node: Literal(\"15\", datatype=xsd:integer)\n\tResult Path: sh:lessThan\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 1,
        "validation_results": [
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:lessThan ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "mistral-large-instruct",
        "file": "baseline_mistral-large-instruct_guv-uebergangsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/mistral-large-instruct/output/parsed_output/baseline_mistral-large-instruct_guv-uebergangsgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "mistral-large-instruct",
        "file": "baseline_mistral-large-instruct_kinderzuschlag.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/mistral-large-instruct/output/parsed_output/baseline_mistral-large-instruct_kinderzuschlag.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (1):\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:lessThan ]\n\tFocus Node: [ sh:lessThan Literal(\"25\", datatype=xsd:integer) ; sh:path ff:hasAge ]\n\tValue Node: Literal(\"25\", datatype=xsd:integer)\n\tResult Path: sh:lessThan\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 1,
        "validation_results": [
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:lessThan ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "mistral-large-instruct",
        "file": "baseline_mistral-large-instruct_guv-rente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/mistral-large-instruct/output/parsed_output/baseline_mistral-large-instruct_guv-rente.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "mistral-large-instruct",
        "file": "baseline_mistral-large-instruct_krankengeld-begleitperson.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/mistral-large-instruct/output/parsed_output/baseline_mistral-large-instruct_krankengeld-begleitperson.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (1):\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:not [ sh:hasValue ff:B100019_LB_103817036 ; sh:path ff:isEligibleFor ] ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:not [ sh:hasValue ff:B100019_LB_103817036 ; sh:path ff:isEligibleFor ] ]->sh:path\n",
        "nof_validation_results": 1,
        "validation_results": [
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:not [ sh:hasValue ff:B100019_LB_103817036 ; sh:path ff:isEligibleFor ] ]->sh:path"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "mistral-large-instruct",
        "file": "baseline_mistral-large-instruct_grundsicherung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/mistral-large-instruct/output/parsed_output/baseline_mistral-large-instruct_grundsicherung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "mistral-large-instruct",
        "file": "baseline_mistral-large-instruct_einstiegsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/mistral-large-instruct/output/parsed_output/baseline_mistral-large-instruct_einstiegsgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "mistral-large-instruct",
        "file": "baseline_mistral-large-instruct_aktivierung-und-eingliederung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/mistral-large-instruct/output/parsed_output/baseline_mistral-large-instruct_aktivierung-und-eingliederung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "mistral-large-instruct",
        "file": "baseline_mistral-large-instruct_kindergeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/mistral-large-instruct/output/parsed_output/baseline_mistral-large-instruct_kindergeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "meta-llama-3.1-8b-instruct",
        "file": "baseline_meta-llama-3.1-8b-instruct_krankengeld-begleitperson.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/meta-llama-3.1-8b-instruct/output/parsed_output/baseline_meta-llama-3.1-8b-instruct_krankengeld-begleitperson.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (68):\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:False ; sh:nodeKind sh:NodeTest ; sh:path ff:hasConsiderableAssets ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:Boolean ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:NodeTest ; sh:path ff:hasDisabilityType ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:Boolean ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:NodeTest ; sh:path ff:hasDisabilityType ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:Boolean ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:NodeTest ; sh:path ff:hasDisability ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:Boolean ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:NodeTest ; sh:path ff:hasDisability ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:False ; sh:nodeKind sh:NodeTest ; sh:path ff:hasConsiderableAssets ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:Boolean ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:NodeTest ; sh:path ff:hasDisabilityType ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:False ; sh:nodeKind sh:NodeTest ; sh:path ff:hasConsiderableAssets ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:Boolean ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:NodeTest ; sh:path ff:hasDisabilityType ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:Boolean ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:NodeTest ; sh:path ff:hasDisability ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:False ; sh:nodeKind sh:NodeTest ; sh:path ff:hasConsiderableAssets ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:Boolean ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:NodeTest ; sh:path ff:hasEvent ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:Boolean ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:NodeTest ; sh:path ff:hasDisability ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:Boolean ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:NodeTest ; sh:path ff:hasDisabilityType ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:Boolean ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:NodeTest ; sh:path ff:hasDisabilityType ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:False ; sh:nodeKind sh:NodeTest ; sh:path ff:hasConsiderableAssets ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:Boolean ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:NodeTest ; sh:path ff:hasEvent ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:Boolean ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:NodeTest ; sh:path ff:hasEvent ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:False ; sh:nodeKind sh:NodeTest ; sh:path ff:hasConsiderableAssets ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:Boolean ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:NodeTest ; sh:path ff:hasEvent ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:True ; sh:nodeKind sh:NodeTest ; sh:path ff:hasDisability ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:Boolean ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:NodeTest ; sh:path ff:hasDisability ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:False ; sh:nodeKind sh:NodeTest ; sh:path ff:hasConsiderableAssets ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:Boolean ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:NodeTest ; sh:path ff:hasEvent ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:False ; sh:nodeKind sh:NodeTest ; sh:path ff:hasConsiderableAssets ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:Boolean ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:NodeTest ; sh:path ff:hasDisability ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:Boolean ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:NodeTest ; sh:path ff:hasEvent ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:Boolean ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:NodeTest ; sh:path ff:hasDisabilityType ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:Boolean ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:NodeTest ; sh:path ff:hasDisabilityType ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:False ; sh:nodeKind sh:NodeTest ; sh:path ff:hasConsiderableAssets ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:Boolean ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:NodeTest ; sh:path ff:hasDisability ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:Boolean ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:NodeTest ; sh:path ff:hasEvent ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:Boolean ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:NodeTest ; sh:path ff:hasDisability ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:True ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:NodeTest ; sh:path ff:hasDisabilityType ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:True ; sh:nodeKind sh:NodeTest ; sh:path ff:hasInsurance ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:Boolean ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:NodeTest ; sh:path ff:hasDisabilityType ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:Boolean ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:NodeTest ; sh:path ff:hasDisability ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:Boolean ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:NodeTest ; sh:path ff:hasDisability ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:False ; sh:nodeKind sh:NodeTest ; sh:path ff:hasConsiderableAssets ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:Boolean ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:NodeTest ; sh:path ff:hasEvent ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:Boolean ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:NodeTest ; sh:path ff:hasEvent ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:Boolean ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:NodeTest ; sh:path ff:hasDisability ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:Boolean ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:NodeTest ; sh:path ff:hasEvent ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:False ; sh:nodeKind sh:NodeTest ; sh:path ff:hasConsiderableAssets ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:Boolean ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:NodeTest ; sh:path ff:hasEvent ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:Boolean ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:NodeTest ; sh:path ff:hasEvent ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:Boolean ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:NodeTest ; sh:path ff:hasEvent ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:False ; sh:nodeKind sh:NodeTest ; sh:path ff:hasAsylumActPermit ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:Boolean ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:NodeTest ; sh:path ff:hasDisabilityType ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:False ; sh:nodeKind sh:NodeTest ; sh:path ff:hasConsiderableAssets ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:Boolean ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:NodeTest ; sh:path ff:hasEvent ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:Boolean ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:NodeTest ; sh:path ff:hasDisabilityType ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:False ; sh:nodeKind sh:NodeTest ; sh:path ff:hasConsiderableAssets ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:False ; sh:nodeKind sh:NodeTest ; sh:path ff:hasConsiderableAssets ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:Boolean ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:NodeTest ; sh:path ff:hasDisabilityType ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:Boolean ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:NodeTest ; sh:path ff:hasEvent ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:Boolean ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:NodeTest ; sh:path ff:hasDisabilityType ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:False ; sh:nodeKind sh:NodeTest ; sh:path ff:hasConsiderableAssets ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:Boolean ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:NodeTest ; sh:path ff:hasDisability ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:Boolean ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:NodeTest ; sh:path ff:hasEvent ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:Boolean ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:NodeTest ; sh:path ff:hasDisabilityType ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:Boolean ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:NodeTest ; sh:path ff:hasDisabilityType ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:Boolean ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:NodeTest ; sh:path ff:hasDisability ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:Boolean ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:NodeTest ; sh:path ff:hasDisability ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:False ; sh:nodeKind sh:NodeTest ; sh:path ff:hasConsiderableAssets ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:Boolean ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:NodeTest ; sh:path ff:hasDisability ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:Boolean ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:NodeTest ; sh:path ff:hasDisability ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype sh:Boolean ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:NodeTest ; sh:path ff:hasDisabilityType ]\n\tValue Node: sh:NodeTest\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\n",
        "nof_validation_results": 68,
        "validation_results": [
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "meta-llama-3.1-8b-instruct",
        "file": "baseline_meta-llama-3.1-8b-instruct_guv-witwenrente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/meta-llama-3.1-8b-instruct/output/parsed_output/baseline_meta-llama-3.1-8b-instruct_guv-witwenrente.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "meta-llama-3.1-8b-instruct",
        "file": "baseline_meta-llama-3.1-8b-instruct_grundausbildung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/meta-llama-3.1-8b-instruct/output/parsed_output/baseline_meta-llama-3.1-8b-instruct_grundausbildung.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (8):\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: ff:hasDisability\n\tResult Path: sh:path\n\tMessage: Less than 1 values on ff:hasDisability->sh:path\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: ff:hasRehabilitationProvider\n\tResult Path: sh:path\n\tMessage: Less than 1 values on ff:hasRehabilitationProvider->sh:path\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: ff:hasEarningCapacity\n\tResult Path: sh:path\n\tMessage: Less than 1 values on ff:hasEarningCapacity->sh:path\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: ff:hasEvent\n\tResult Path: sh:path\n\tMessage: Less than 1 values on ff:hasEvent->sh:path\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: ff:WillToTrain\n\tValue Node: ff:WillToTrain\n\tMessage: Node ff:WillToTrain must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: ff:ReducedEarningCapacity\n\tValue Node: ff:ReducedEarningCapacity\n\tMessage: Node ff:ReducedEarningCapacity must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: ff:RehabilitationProvider\n\tValue Node: ff:RehabilitationProvider\n\tMessage: Node ff:RehabilitationProvider must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: ff:SevereImpairment\n\tValue Node: ff:SevereImpairment\n\tMessage: Node ff:SevereImpairment must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\n",
        "nof_validation_results": 8,
        "validation_results": [
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on ff:hasDisability->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on ff:hasRehabilitationProvider->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on ff:hasEarningCapacity->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on ff:hasEvent->sh:path"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node ff:WillToTrain must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node ff:ReducedEarningCapacity must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node ff:RehabilitationProvider must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node ff:SevereImpairment must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "meta-llama-3.1-8b-instruct",
        "file": "baseline_meta-llama-3.1-8b-instruct_insolvenzgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/meta-llama-3.1-8b-instruct/output/parsed_output/baseline_meta-llama-3.1-8b-instruct_insolvenzgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "meta-llama-3.1-8b-instruct",
        "file": "baseline_meta-llama-3.1-8b-instruct_guv-verletztengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/meta-llama-3.1-8b-instruct/output/parsed_output/baseline_meta-llama-3.1-8b-instruct_guv-verletztengeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745709217",
        "prompt": "baseline",
        "model": "meta-llama-3.1-8b-instruct",
        "file": "baseline_meta-llama-3.1-8b-instruct_kindergeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745709217/meta-llama-3.1-8b-instruct/output/parsed_output/baseline_meta-llama-3.1-8b-instruct_kindergeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745924000",
        "prompt": "fewshot",
        "model": "qwq-32b",
        "file": "fewshot_qwq-32b_grundsicherung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745924000/qwq-32b/output/parsed_output/fewshot_qwq-32b_grundsicherung.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (8):\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:class ]\n\tFocus Node: [ sh:class [ sh:in ff:VocationalTraining ] ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:participates ; sh:property [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:commissionedByEmploymentAgency ] ]\n\tValue Node: [ sh:in ff:VocationalTraining ]\n\tResult Path: sh:class\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:class ]\n\tFocus Node: [ sh:class [ sh:in ff:EntryProcedureAndVocationalTrainingArea ] ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:participates ]\n\tValue Node: [ sh:in ff:EntryProcedureAndVocationalTrainingArea ]\n\tResult Path: sh:class\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:class ]\n\tFocus Node: [ sh:class [ sh:in ff:ReducedEarningCapacity ] ; sh:path ff:hasEarningCapacity ; sh:property [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isPermanent ] ]\n\tValue Node: [ sh:in ff:ReducedEarningCapacity ]\n\tResult Path: sh:class\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:class ]\n\tFocus Node: [ sh:class [ sh:in ( ff:SocialAssistance ) ] ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasNoPriorityClaimsOver ]\n\tValue Node: [ sh:in ( ff:SocialAssistance ) ]\n\tResult Path: sh:class\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:node shsh:ListShape ; sh:path sh:in ]\n\tFocus Node: [ sh:in ff:ReducedEarningCapacity ]\n\tValue Node: ff:ReducedEarningCapacity\n\tResult Path: sh:in\n\tMessage: Value does not conform to Shape shsh:ListShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in HasValueConstraintComponent (http://www.w3.org/ns/shacl#HasValueConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: ff:ReducedEarningCapacity\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Node ff:ReducedEarningCapacity->[ sh:zeroOrMorePath rdf:rest ] does not contain a value in the set: ['rdf:nil']\n\t\tConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: ff:ReducedEarningCapacity\n\t\t\tValue Node: ff:ReducedEarningCapacity\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Value does not conform to Shape shsh:ListNodeShape. See details for more information.\n\t\t\tDetails:\n\t\t\t\tConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\tSource Shape: shsh:ListNodeShape\n\t\t\t\t\tFocus Node: ff:ReducedEarningCapacity\n\t\t\t\t\tValue Node: ff:ReducedEarningCapacity\n\t\t\t\t\tMessage: Node ff:ReducedEarningCapacity must conform to one or more shapes in [ sh:hasValue rdf:nil ; sh:property [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:rest ] ] , [ sh:not [ sh:hasValue rdf:nil ] ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:rest ] ]\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:node shsh:ListShape ; sh:path sh:in ]\n\tFocus Node: [ sh:in ff:EntryProcedureAndVocationalTrainingArea ]\n\tValue Node: ff:EntryProcedureAndVocationalTrainingArea\n\tResult Path: sh:in\n\tMessage: Value does not conform to Shape shsh:ListShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in HasValueConstraintComponent (http://www.w3.org/ns/shacl#HasValueConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: ff:EntryProcedureAndVocationalTrainingArea\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Node ff:EntryProcedureAndVocationalTrainingArea->[ sh:zeroOrMorePath rdf:rest ] does not contain a value in the set: ['rdf:nil']\n\t\tConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: ff:EntryProcedureAndVocationalTrainingArea\n\t\t\tValue Node: ff:EntryProcedureAndVocationalTrainingArea\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Value does not conform to Shape shsh:ListNodeShape. See details for more information.\n\t\t\tDetails:\n\t\t\t\tConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\tSource Shape: shsh:ListNodeShape\n\t\t\t\t\tFocus Node: ff:EntryProcedureAndVocationalTrainingArea\n\t\t\t\t\tValue Node: ff:EntryProcedureAndVocationalTrainingArea\n\t\t\t\t\tMessage: Node ff:EntryProcedureAndVocationalTrainingArea must conform to one or more shapes in [ sh:hasValue rdf:nil ; sh:property [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:rest ] ] , [ sh:not [ sh:hasValue rdf:nil ] ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:rest ] ]\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:node shsh:ListShape ; sh:path sh:in ]\n\tFocus Node: [ sh:in ff:VocationalTraining ]\n\tValue Node: ff:VocationalTraining\n\tResult Path: sh:in\n\tMessage: Value does not conform to Shape shsh:ListShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in HasValueConstraintComponent (http://www.w3.org/ns/shacl#HasValueConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: ff:VocationalTraining\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Node ff:VocationalTraining->[ sh:zeroOrMorePath rdf:rest ] does not contain a value in the set: ['rdf:nil']\n\t\tConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: ff:VocationalTraining\n\t\t\tValue Node: ff:VocationalTraining\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Value does not conform to Shape shsh:ListNodeShape. See details for more information.\n\t\t\tDetails:\n\t\t\t\tConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\tSource Shape: shsh:ListNodeShape\n\t\t\t\t\tFocus Node: ff:VocationalTraining\n\t\t\t\t\tValue Node: ff:VocationalTraining\n\t\t\t\t\tMessage: Node ff:VocationalTraining must conform to one or more shapes in [ sh:hasValue rdf:nil ; sh:property [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:rest ] ] , [ sh:not [ sh:hasValue rdf:nil ] ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:rest ] ]\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:lessThan ]\n\tFocus Node: [ sh:lessThan Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:canCoverPersonalBasicNeeds ]\n\tValue Node: Literal(\"true\" = True, datatype=xsd:boolean)\n\tResult Path: sh:lessThan\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 8,
        "validation_results": [
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:class ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:class ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:class ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:class ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:node shsh:ListShape ; sh:path sh:in ]",
                "message": "Value does not conform to Shape shsh:ListShape. See details for more information."
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:node shsh:ListShape ; sh:path sh:in ]",
                "message": "Value does not conform to Shape shsh:ListShape. See details for more information."
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:node shsh:ListShape ; sh:path sh:in ]",
                "message": "Value does not conform to Shape shsh:ListShape. See details for more information."
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:lessThan ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "fewshot_1ex3fcv_1745924000",
        "prompt": "fewshot",
        "model": "qwq-32b",
        "file": "fewshot_qwq-32b_insolvenzgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745924000/qwq-32b/output/parsed_output/fewshot_qwq-32b_insolvenzgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745924000",
        "prompt": "fewshot",
        "model": "qwq-32b",
        "file": "fewshot_qwq-32b_krankengeld-begleitperson.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745924000/qwq-32b/output/parsed_output/fewshot_qwq-32b_krankengeld-begleitperson.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (1):\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:or ( [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:closeRelative ] [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:immediateCircleMember ] ) ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:or ( [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:closeRelative ] [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:immediateCircleMember ] ) ]->sh:path\n",
        "nof_validation_results": 1,
        "validation_results": [
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:or ( [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:closeRelative ] [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:immediateCircleMember ] ) ]->sh:path"
            }
        ]
    },
    {
        "experiment": "fewshot_1ex3fcv_1745924000",
        "prompt": "fewshot",
        "model": "qwq-32b",
        "file": "fewshot_qwq-32b_kinderzuschlag.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745924000/qwq-32b/output/parsed_output/fewshot_qwq-32b_kinderzuschlag.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745924000",
        "prompt": "fewshot",
        "model": "qwq-32b",
        "file": "fewshot_qwq-32b_guv-verletztengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745924000/qwq-32b/output/parsed_output/fewshot_qwq-32b_guv-verletztengeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745924000",
        "prompt": "fewshot",
        "model": "qwq-32b",
        "file": "fewshot_qwq-32b_uebergangsgeld-behinderung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745924000/qwq-32b/output/parsed_output/fewshot_qwq-32b_uebergangsgeld-behinderung.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (2):\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:or ( [ sh:property [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isVocationalReturnee ] ] [ sh:or ( [ sh:property [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:socialSecurityDuration ; sh:property [ sh:minInclusive Literal(\"12\", datatype=xsd:integer) ; sh:path ff:monthsWithinLast3Years ] ] ] [ sh:property [ sh:hasValue ff:B100019_LB_576842 ; sh:path ff:isEligibleFor ] ] [ sh:property [ sh:hasValue ff:UnemploymentBenefitsSVG ; sh:path ff:isEligibleFor ] ] ) ] ) ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:or ( [ sh:property [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isVocationalReturnee ] ] [ sh:or ( [ sh:property [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:socialSecurityDuration ; sh:property [ sh:minInclusive Literal(\"12\", datatype=xsd:integer) ; sh:path ff:monthsWithinLast3Years ] ] ] [ sh:property [ sh:hasValue ff:B100019_LB_576842 ; sh:path ff:isEligibleFor ] ] [ sh:property [ sh:hasValue ff:UnemploymentBenefitsSVG ; sh:path ff:isEligibleFor ] ] ) ] ) ]->sh:path\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:class ]\n\tFocus Node: [ sh:class [ sh:or ( sh:instanceOf ff:VocationalTraining sh:instanceOf ff:School sh:instanceOf ff:EntryProcedureAndVocationalTrainingArea ) ] ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:participates ]\n\tValue Node: [ sh:or ( sh:instanceOf ff:VocationalTraining sh:instanceOf ff:School sh:instanceOf ff:EntryProcedureAndVocationalTrainingArea ) ]\n\tResult Path: sh:class\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 2,
        "validation_results": [
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:or ( [ sh:property [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isVocationalReturnee ] ] [ sh:or ( [ sh:property [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:socialSecurityDuration ; sh:property [ sh:minInclusive Literal(\"12\", datatype=xsd:integer) ; sh:path ff:monthsWithinLast3Years ] ] ] [ sh:property [ sh:hasValue ff:B100019_LB_576842 ; sh:path ff:isEligibleFor ] ] [ sh:property [ sh:hasValue ff:UnemploymentBenefitsSVG ; sh:path ff:isEligibleFor ] ] ) ] ) ]->sh:path"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:class ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "fewshot_1ex3fcv_1745924000",
        "prompt": "fewshot",
        "model": "qwq-32b",
        "file": "fewshot_qwq-32b_guv-witwenrente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745924000/qwq-32b/output/parsed_output/fewshot_qwq-32b_guv-witwenrente.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745924000",
        "prompt": "fewshot",
        "model": "qwq-32b",
        "file": "fewshot_qwq-32b_guv-uebergangsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745924000/qwq-32b/output/parsed_output/fewshot_qwq-32b_guv-uebergangsgeld.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (1):\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:class ]\n\tFocus Node: [ sh:class ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ; sh:message Literal(\"Does not meet requirement 'User has work accident/commuting accident/recognized occupational disease'.\", lang=en) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasEvent ]\n\tValue Node: ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease )\n\tResult Path: sh:class\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 1,
        "validation_results": [
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:class ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "fewshot_1ex3fcv_1745924000",
        "prompt": "fewshot",
        "model": "qwq-32b",
        "file": "fewshot_qwq-32b_grundausbildung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745924000/qwq-32b/output/parsed_output/fewshot_qwq-32b_grundausbildung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745924000",
        "prompt": "fewshot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "fewshot_llama-3.1-sauerkrautlm-70b-instruct_kindergeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745924000/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/fewshot_llama-3.1-sauerkrautlm-70b-instruct_kindergeld.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (2):\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ListShape ; sh:path sh:or ]\n\tFocus Node: [ sh:or [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:property [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:entitledToAsylum ] ] ; sh:path ff:recognizedRefugee ]\n\tValue Node: [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:property [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:entitledToAsylum ] ]\n\tResult Path: sh:or\n\tMessage: Value does not conform to Shape shsh:ListShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in HasValueConstraintComponent (http://www.w3.org/ns/shacl#HasValueConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:property [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:entitledToAsylum ] ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Node [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:property [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:entitledToAsylum ] ]->[ sh:zeroOrMorePath rdf:rest ] does not contain a value in the set: ['rdf:nil']\n\t\tConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:property [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:entitledToAsylum ] ]\n\t\t\tValue Node: [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:property [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:entitledToAsylum ] ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Value does not conform to Shape shsh:ListNodeShape. See details for more information.\n\t\t\tDetails:\n\t\t\t\tConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\tSource Shape: shsh:ListNodeShape\n\t\t\t\t\tFocus Node: [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:property [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:entitledToAsylum ] ]\n\t\t\t\t\tValue Node: [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:property [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:entitledToAsylum ] ]\n\t\t\t\t\tMessage: Node [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:property [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:entitledToAsylum ] ] must conform to one or more shapes in [ sh:hasValue rdf:nil ; sh:property [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:rest ] ] , [ sh:not [ sh:hasValue rdf:nil ] ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:rest ] ]\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ListShape ; sh:path sh:or ]\n\tFocus Node: [ sh:or [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:property [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:entitledToAsylum ] ] ; sh:path ff:recognizedRefugee ]\n\tValue Node: [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:property [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:entitledToAsylum ] ]\n\tResult Path: sh:or\n\tMessage: Value does not conform to Shape shsh:ListShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in HasValueConstraintComponent (http://www.w3.org/ns/shacl#HasValueConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:property [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:entitledToAsylum ] ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Node [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:property [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:entitledToAsylum ] ]->[ sh:zeroOrMorePath rdf:rest ] does not contain a value in the set: ['rdf:nil']\n\t\tConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:property [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:entitledToAsylum ] ]\n\t\t\tValue Node: [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:property [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:entitledToAsylum ] ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Value does not conform to Shape shsh:ListNodeShape. See details for more information.\n\t\t\tDetails:\n\t\t\t\tConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\tSource Shape: shsh:ListNodeShape\n\t\t\t\t\tFocus Node: [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:property [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:entitledToAsylum ] ]\n\t\t\t\t\tValue Node: [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:property [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:entitledToAsylum ] ]\n\t\t\t\t\tMessage: Node [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:property [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:entitledToAsylum ] ] must conform to one or more shapes in [ sh:hasValue rdf:nil ; sh:property [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:rest ] ] , [ sh:not [ sh:hasValue rdf:nil ] ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:rest ] ]\n",
        "nof_validation_results": 2,
        "validation_results": [
            {
                "source_shape": "[ sh:node shsh:ListShape ; sh:path sh:or ]",
                "message": "Value does not conform to Shape shsh:ListShape. See details for more information."
            },
            {
                "source_shape": "[ sh:node shsh:ListShape ; sh:path sh:or ]",
                "message": "Value does not conform to Shape shsh:ListShape. See details for more information."
            }
        ]
    },
    {
        "experiment": "fewshot_1ex3fcv_1745924000",
        "prompt": "fewshot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "fewshot_llama-3.1-sauerkrautlm-70b-instruct_berufsausbildungsbeihilfe.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745924000/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/fewshot_llama-3.1-sauerkrautlm-70b-instruct_berufsausbildungsbeihilfe.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (18):\nConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:in ( ff:VocationalTrainingAct ff:MaritimeLabourAct ff:CraftsCode ff:NursingProfessionsAct ) ; sh:message Literal(\"Does not meet requirement 'Training is recognized by the Vocational Training Act, Maritime Labour Act, Crafts Code or Nursing Professions Act.'\", lang=en) ; sh:path [ ff:participates ff:recognizedByLaw ] ]\n\tValue Node: [ ff:participates ff:recognizedByLaw ]\n\tResult Path: sh:path\n\tMessage: Node [ ff:participates ff:recognizedByLaw ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]\nConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:message Literal(\"Does not meet requirement 'Training funding period is at least 12 months.'\", lang=en) ; sh:minInclusive Literal(\"12\", datatype=xsd:integer) ; sh:path [ ff:participates ff:intendedFundingPeriod ] ]\n\tValue Node: [ ff:participates ff:intendedFundingPeriod ]\n\tResult Path: sh:path\n\tMessage: Node [ ff:participates ff:intendedFundingPeriod ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]\nConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:equals ff:VocationalTrainingContract ; sh:message Literal(\"Does not meet requirement 'Training is subject to a vocational training contract.'\", lang=en) ; sh:path [ ff:participates ff:subjectToContract ] ]\n\tValue Node: [ ff:participates ff:subjectToContract ]\n\tResult Path: sh:path\n\tMessage: Node [ ff:participates ff:subjectToContract ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]\nConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:maxInclusive Literal(\"50\", datatype=xsd:integer) ; sh:message Literal(\"Does not meet requirement 'Training takes place abroad for 50% or less.'\", lang=en) ; sh:path [ ff:participates ff:percentAbroad ] ]\n\tValue Node: [ ff:participates ff:percentAbroad ]\n\tResult Path: sh:path\n\tMessage: Node [ ff:participates ff:percentAbroad ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]\nConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:message Literal(\"Does not meet requirement 'Training duration is at least 12 months.'\", lang=en) ; sh:minInclusive Literal(\"12\", datatype=xsd:integer) ; sh:path [ ff:participates ff:monthsTotal ] ]\n\tValue Node: [ ff:participates ff:monthsTotal ]\n\tResult Path: sh:path\n\tMessage: Node [ ff:participates ff:monthsTotal ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]\nConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:message Literal(\"Does not meet requirement 'Training was commissioned by the employment agency.'\", lang=en) ; sh:path [ ff:participates ff:commissionedByEmploymentAgency ] ]\n\tValue Node: [ ff:participates ff:commissionedByEmploymentAgency ]\n\tResult Path: sh:path\n\tMessage: Node [ ff:participates ff:commissionedByEmploymentAgency ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]\nConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:message Literal(\"Does not meet requirement 'Training is user's first vocational training.'\", lang=en) ; sh:path [ ff:participates ff:isFirstVocationalTraining ] ]\n\tValue Node: [ ff:participates ff:isFirstVocationalTraining ]\n\tResult Path: sh:path\n\tMessage: Node [ ff:participates ff:isFirstVocationalTraining ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:in ( ff:VocationalTrainingAct ff:MaritimeLabourAct ff:CraftsCode ff:NursingProfessionsAct ) ; sh:message Literal(\"Does not meet requirement 'Training is recognized by the Vocational Training Act, Maritime Labour Act, Crafts Code or Nursing Professions Act.'\", lang=en) ; sh:path [ ff:participates ff:recognizedByLaw ] ]\n\tValue Node: [ sh:in ( ff:VocationalTrainingAct ff:MaritimeLabourAct ff:CraftsCode ff:NursingProfessionsAct ) ; sh:message Literal(\"Does not meet requirement 'Training is recognized by the Vocational Training Act, Maritime Labour Act, Crafts Code or Nursing Professions Act.'\", lang=en) ; sh:path [ ff:participates ff:recognizedByLaw ] ]\n\tMessage: Node [ sh:in ( ff:VocationalTrainingAct ff:MaritimeLabourAct ff:CraftsCode ff:NursingProfessionsAct ) ; sh:message Literal(\"Does not meet requirement 'Training is recognized by the Vocational Training Act, Maritime Labour Act, Crafts Code or Nursing Professions Act.'\", lang=en) ; sh:path [ ff:participates ff:recognizedByLaw ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:message Literal(\"Does not meet requirement 'Training funding period is at least 12 months.'\", lang=en) ; sh:minInclusive Literal(\"12\", datatype=xsd:integer) ; sh:path [ ff:participates ff:intendedFundingPeriod ] ]\n\tValue Node: [ sh:message Literal(\"Does not meet requirement 'Training funding period is at least 12 months.'\", lang=en) ; sh:minInclusive Literal(\"12\", datatype=xsd:integer) ; sh:path [ ff:participates ff:intendedFundingPeriod ] ]\n\tMessage: Node [ sh:message Literal(\"Does not meet requirement 'Training funding period is at least 12 months.'\", lang=en) ; sh:minInclusive Literal(\"12\", datatype=xsd:integer) ; sh:path [ ff:participates ff:intendedFundingPeriod ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:message Literal(\"Does not meet requirement 'Training was commissioned by the employment agency.'\", lang=en) ; sh:path [ ff:participates ff:commissionedByEmploymentAgency ] ]\n\tValue Node: [ sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:message Literal(\"Does not meet requirement 'Training was commissioned by the employment agency.'\", lang=en) ; sh:path [ ff:participates ff:commissionedByEmploymentAgency ] ]\n\tMessage: Node [ sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:message Literal(\"Does not meet requirement 'Training was commissioned by the employment agency.'\", lang=en) ; sh:path [ ff:participates ff:commissionedByEmploymentAgency ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:maxInclusive Literal(\"50\", datatype=xsd:integer) ; sh:message Literal(\"Does not meet requirement 'Training takes place abroad for 50% or less.'\", lang=en) ; sh:path [ ff:participates ff:percentAbroad ] ]\n\tValue Node: [ sh:maxInclusive Literal(\"50\", datatype=xsd:integer) ; sh:message Literal(\"Does not meet requirement 'Training takes place abroad for 50% or less.'\", lang=en) ; sh:path [ ff:participates ff:percentAbroad ] ]\n\tMessage: Node [ sh:maxInclusive Literal(\"50\", datatype=xsd:integer) ; sh:message Literal(\"Does not meet requirement 'Training takes place abroad for 50% or less.'\", lang=en) ; sh:path [ ff:participates ff:percentAbroad ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:message Literal(\"Does not meet requirement 'Training is user's first vocational training.'\", lang=en) ; sh:path [ ff:participates ff:isFirstVocationalTraining ] ]\n\tValue Node: [ sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:message Literal(\"Does not meet requirement 'Training is user's first vocational training.'\", lang=en) ; sh:path [ ff:participates ff:isFirstVocationalTraining ] ]\n\tMessage: Node [ sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:message Literal(\"Does not meet requirement 'Training is user's first vocational training.'\", lang=en) ; sh:path [ ff:participates ff:isFirstVocationalTraining ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:equals ff:VocationalTrainingContract ; sh:message Literal(\"Does not meet requirement 'Training is subject to a vocational training contract.'\", lang=en) ; sh:path [ ff:participates ff:subjectToContract ] ]\n\tValue Node: [ sh:equals ff:VocationalTrainingContract ; sh:message Literal(\"Does not meet requirement 'Training is subject to a vocational training contract.'\", lang=en) ; sh:path [ ff:participates ff:subjectToContract ] ]\n\tMessage: Node [ sh:equals ff:VocationalTrainingContract ; sh:message Literal(\"Does not meet requirement 'Training is subject to a vocational training contract.'\", lang=en) ; sh:path [ ff:participates ff:subjectToContract ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:message Literal(\"Does not meet requirement 'Training duration is at least 12 months.'\", lang=en) ; sh:minInclusive Literal(\"12\", datatype=xsd:integer) ; sh:path [ ff:participates ff:monthsTotal ] ]\n\tValue Node: [ sh:message Literal(\"Does not meet requirement 'Training duration is at least 12 months.'\", lang=en) ; sh:minInclusive Literal(\"12\", datatype=xsd:integer) ; sh:path [ ff:participates ff:monthsTotal ] ]\n\tMessage: Node [ sh:message Literal(\"Does not meet requirement 'Training duration is at least 12 months.'\", lang=en) ; sh:minInclusive Literal(\"12\", datatype=xsd:integer) ; sh:path [ ff:participates ff:monthsTotal ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:message Literal(\"Does not meet requirement 'Training was commissioned by the employment agency.'\", lang=en) ; sh:path [ ff:participates ff:commissionedByEmploymentAgency ] ]\n\tValue Node: Literal(\"true\" = True, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:message Literal(\"Does not meet requirement 'User has a disability.'\", lang=en) ; sh:path ff:hasDisability ]\n\tValue Node: Literal(\"true\" = True, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:message Literal(\"Does not meet requirement 'Training is user's first vocational training.'\", lang=en) ; sh:path [ ff:participates ff:isFirstVocationalTraining ] ]\n\tValue Node: Literal(\"true\" = True, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:message Literal(\"Does not meet requirement 'User cannot cover their personal basic needs.'\", lang=en) ; sh:path ff:canCoverPersonalBasicNeeds ]\n\tValue Node: Literal(\"false\" = False, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 18,
        "validation_results": [
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Node [ ff:participates ff:recognizedByLaw ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Node [ ff:participates ff:intendedFundingPeriod ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Node [ ff:participates ff:subjectToContract ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Node [ ff:participates ff:percentAbroad ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Node [ ff:participates ff:monthsTotal ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Node [ ff:participates ff:commissionedByEmploymentAgency ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Node [ ff:participates ff:isFirstVocationalTraining ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:in ( ff:VocationalTrainingAct ff:MaritimeLabourAct ff:CraftsCode ff:NursingProfessionsAct ) ; sh:message Literal(\"Does not meet requirement 'Training is recognized by the Vocational Training Act, Maritime Labour Act, Crafts Code or Nursing Professions Act.'\", lang=en) ; sh:path [ ff:participates ff:recognizedByLaw ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:message Literal(\"Does not meet requirement 'Training funding period is at least 12 months.'\", lang=en) ; sh:minInclusive Literal(\"12\", datatype=xsd:integer) ; sh:path [ ff:participates ff:intendedFundingPeriod ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:message Literal(\"Does not meet requirement 'Training was commissioned by the employment agency.'\", lang=en) ; sh:path [ ff:participates ff:commissionedByEmploymentAgency ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:maxInclusive Literal(\"50\", datatype=xsd:integer) ; sh:message Literal(\"Does not meet requirement 'Training takes place abroad for 50% or less.'\", lang=en) ; sh:path [ ff:participates ff:percentAbroad ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:message Literal(\"Does not meet requirement 'Training is user's first vocational training.'\", lang=en) ; sh:path [ ff:participates ff:isFirstVocationalTraining ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:equals ff:VocationalTrainingContract ; sh:message Literal(\"Does not meet requirement 'Training is subject to a vocational training contract.'\", lang=en) ; sh:path [ ff:participates ff:subjectToContract ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:message Literal(\"Does not meet requirement 'Training duration is at least 12 months.'\", lang=en) ; sh:minInclusive Literal(\"12\", datatype=xsd:integer) ; sh:path [ ff:participates ff:monthsTotal ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "fewshot_1ex3fcv_1745924000",
        "prompt": "fewshot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "fewshot_llama-3.1-sauerkrautlm-70b-instruct_grundausbildung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745924000/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/fewshot_llama-3.1-sauerkrautlm-70b-instruct_grundausbildung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745924000",
        "prompt": "fewshot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "fewshot_llama-3.1-sauerkrautlm-70b-instruct_arbeitslosengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745924000/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/fewshot_llama-3.1-sauerkrautlm-70b-instruct_arbeitslosengeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745924000",
        "prompt": "fewshot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "fewshot_llama-3.1-sauerkrautlm-70b-instruct_guv-waisenrente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745924000/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/fewshot_llama-3.1-sauerkrautlm-70b-instruct_guv-waisenrente.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (2):\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:message Literal(\"Does not meet requirement 'User is in education and training' or 'User has a disability' or 'User is in a transitional period'\", lang=en) ; sh:path ff:isInTransitionalPeriod ]\n\tValue Node: Literal(\"true\" = True, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:lessThan ]\n\tFocus Node: [ sh:lessThan Literal(\"18\", datatype=xsd:integer) ; sh:path ff:hasAge ]\n\tValue Node: Literal(\"18\", datatype=xsd:integer)\n\tResult Path: sh:lessThan\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 2,
        "validation_results": [
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:lessThan ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "fewshot_1ex3fcv_1745924000",
        "prompt": "fewshot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "fewshot_llama-3.1-sauerkrautlm-70b-instruct_kinderzuschlag.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745924000/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/fewshot_llama-3.1-sauerkrautlm-70b-instruct_kinderzuschlag.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745924000",
        "prompt": "fewshot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "fewshot_llama-3.1-sauerkrautlm-70b-instruct_grundsicherung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745924000/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/fewshot_llama-3.1-sauerkrautlm-70b-instruct_grundsicherung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745924000",
        "prompt": "fewshot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "fewshot_llama-3.1-sauerkrautlm-70b-instruct_guv-verletztengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745924000/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/fewshot_llama-3.1-sauerkrautlm-70b-instruct_guv-verletztengeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745924000",
        "prompt": "fewshot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "fewshot_llama-3.1-sauerkrautlm-70b-instruct_guv-rente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745924000/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/fewshot_llama-3.1-sauerkrautlm-70b-instruct_guv-rente.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (1):\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:message Literal(\"Does not meet requirement 'Treatment is not remunerated.'\", lang=en) ; sh:path ff:isRenumerated ]\n\tValue Node: Literal(\"false\" = False, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 1,
        "validation_results": [
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "fewshot_1ex3fcv_1745924000",
        "prompt": "fewshot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "fewshot_llama-3.1-sauerkrautlm-70b-instruct_guv-witwenrente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745924000/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/fewshot_llama-3.1-sauerkrautlm-70b-instruct_guv-witwenrente.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745924000",
        "prompt": "fewshot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "fewshot_llama-3.1-sauerkrautlm-70b-instruct_insolvenzgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745924000/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/fewshot_llama-3.1-sauerkrautlm-70b-instruct_insolvenzgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745924000",
        "prompt": "fewshot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "fewshot_llama-3.1-sauerkrautlm-70b-instruct_guv-kinderverletztengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745924000/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/fewshot_llama-3.1-sauerkrautlm-70b-instruct_guv-kinderverletztengeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745924000",
        "prompt": "fewshot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "fewshot_llama-3.1-sauerkrautlm-70b-instruct_aktivierung-und-eingliederung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745924000/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/fewshot_llama-3.1-sauerkrautlm-70b-instruct_aktivierung-und-eingliederung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745924000",
        "prompt": "fewshot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "fewshot_llama-3.1-sauerkrautlm-70b-instruct_guv-uebergangsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745924000/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/fewshot_llama-3.1-sauerkrautlm-70b-instruct_guv-uebergangsgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745924000",
        "prompt": "fewshot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "fewshot_llama-3.1-sauerkrautlm-70b-instruct_einstiegsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745924000/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/fewshot_llama-3.1-sauerkrautlm-70b-instruct_einstiegsgeld.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (1):\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:lessThan ]\n\tFocus Node: [ sh:lessThan [ sh:node ff:hasEmployment ; sh:path ff:hasDate ] ; sh:message Literal(\"Does not meet requirement 'Application must be made before taking up the new job'\", lang=en) ; sh:path ff:hasDate ]\n\tValue Node: [ sh:node ff:hasEmployment ; sh:path ff:hasDate ]\n\tResult Path: sh:lessThan\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 1,
        "validation_results": [
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:lessThan ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "fewshot_1ex3fcv_1745924000",
        "prompt": "fewshot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "fewshot_llama-3.1-sauerkrautlm-70b-instruct_krankengeld-begleitperson.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745924000/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/fewshot_llama-3.1-sauerkrautlm-70b-instruct_krankengeld-begleitperson.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (6):\nConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:message Literal(\"Does not meet requirement 'The person with disabilities is inpatient.'\", lang=en) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inversePath ff:needsCare ; sh:path ff:resultsInTreatment ] ]\n\tValue Node: [ sh:inversePath ff:needsCare ; sh:path ff:resultsInTreatment ]\n\tResult Path: sh:path\n\tMessage: Node [ sh:inversePath ff:needsCare ; sh:path ff:resultsInTreatment ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]\nConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:message Literal(\"Does not meet requirement 'The person with disabilities is inpatient.'\", lang=en) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inversePath ff:needsCare ; sh:path ff:hasDate, ff:resultsInTreatment ] ]\n\tValue Node: [ sh:inversePath ff:needsCare ; sh:path ff:hasDate, ff:resultsInTreatment ]\n\tResult Path: sh:path\n\tMessage: Node [ sh:inversePath ff:needsCare ; sh:path ff:hasDate, ff:resultsInTreatment ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]\nConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:hasValue ff:CraftsCode ; sh:message Literal(\"Does not meet requirement 'The person with disabilities receives benefits of the Eingliederungshilfe.'\", lang=en) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inversePath ff:needsCare ; sh:path ff:recognizedByLaw ] ]\n\tValue Node: [ sh:inversePath ff:needsCare ; sh:path ff:recognizedByLaw ]\n\tResult Path: sh:path\n\tMessage: Node [ sh:inversePath ff:needsCare ; sh:path ff:recognizedByLaw ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:hasValue ff:CraftsCode ; sh:message Literal(\"Does not meet requirement 'The person with disabilities receives benefits of the Eingliederungshilfe.'\", lang=en) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inversePath ff:needsCare ; sh:path ff:recognizedByLaw ] ]\n\tValue Node: [ sh:hasValue ff:CraftsCode ; sh:message Literal(\"Does not meet requirement 'The person with disabilities receives benefits of the Eingliederungshilfe.'\", lang=en) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inversePath ff:needsCare ; sh:path ff:recognizedByLaw ] ]\n\tMessage: Node [ sh:hasValue ff:CraftsCode ; sh:message Literal(\"Does not meet requirement 'The person with disabilities receives benefits of the Eingliederungshilfe.'\", lang=en) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inversePath ff:needsCare ; sh:path ff:recognizedByLaw ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:message Literal(\"Does not meet requirement 'The person with disabilities is inpatient.'\", lang=en) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inversePath ff:needsCare ; sh:path ff:resultsInTreatment ] ]\n\tValue Node: [ sh:message Literal(\"Does not meet requirement 'The person with disabilities is inpatient.'\", lang=en) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inversePath ff:needsCare ; sh:path ff:resultsInTreatment ] ]\n\tMessage: Node [ sh:message Literal(\"Does not meet requirement 'The person with disabilities is inpatient.'\", lang=en) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inversePath ff:needsCare ; sh:path ff:resultsInTreatment ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:message Literal(\"Does not meet requirement 'The person with disabilities is inpatient.'\", lang=en) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inversePath ff:needsCare ; sh:path ff:hasDate, ff:resultsInTreatment ] ]\n\tValue Node: [ sh:message Literal(\"Does not meet requirement 'The person with disabilities is inpatient.'\", lang=en) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inversePath ff:needsCare ; sh:path ff:hasDate, ff:resultsInTreatment ] ]\n\tMessage: Node [ sh:message Literal(\"Does not meet requirement 'The person with disabilities is inpatient.'\", lang=en) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inversePath ff:needsCare ; sh:path ff:hasDate, ff:resultsInTreatment ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\n",
        "nof_validation_results": 6,
        "validation_results": [
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Node [ sh:inversePath ff:needsCare ; sh:path ff:resultsInTreatment ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Node [ sh:inversePath ff:needsCare ; sh:path ff:hasDate, ff:resultsInTreatment ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Node [ sh:inversePath ff:needsCare ; sh:path ff:recognizedByLaw ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:hasValue ff:CraftsCode ; sh:message Literal(\"Does not meet requirement 'The person with disabilities receives benefits of the Eingliederungshilfe.'\", lang=en) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inversePath ff:needsCare ; sh:path ff:recognizedByLaw ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:message Literal(\"Does not meet requirement 'The person with disabilities is inpatient.'\", lang=en) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inversePath ff:needsCare ; sh:path ff:resultsInTreatment ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:message Literal(\"Does not meet requirement 'The person with disabilities is inpatient.'\", lang=en) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inversePath ff:needsCare ; sh:path ff:hasDate, ff:resultsInTreatment ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            }
        ]
    },
    {
        "experiment": "fewshot_1ex3fcv_1745924000",
        "prompt": "fewshot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "fewshot_llama-3.1-sauerkrautlm-70b-instruct_buergergeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745924000/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/fewshot_llama-3.1-sauerkrautlm-70b-instruct_buergergeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745924000",
        "prompt": "fewshot",
        "model": "mistral-large-instruct",
        "file": "fewshot_mistral-large-instruct_grundausbildung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745924000/mistral-large-instruct/output/parsed_output/fewshot_mistral-large-instruct_grundausbildung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745924000",
        "prompt": "fewshot",
        "model": "mistral-large-instruct",
        "file": "fewshot_mistral-large-instruct_ausbildungsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745924000/mistral-large-instruct/output/parsed_output/fewshot_mistral-large-instruct_ausbildungsgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745924000",
        "prompt": "fewshot",
        "model": "mistral-large-instruct",
        "file": "fewshot_mistral-large-instruct_guv-rentenabfindung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745924000/mistral-large-instruct/output/parsed_output/fewshot_mistral-large-instruct_guv-rentenabfindung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745924000",
        "prompt": "fewshot",
        "model": "mistral-large-instruct",
        "file": "fewshot_mistral-large-instruct_arbeitslosengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745924000/mistral-large-instruct/output/parsed_output/fewshot_mistral-large-instruct_arbeitslosengeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745924000",
        "prompt": "fewshot",
        "model": "mistral-large-instruct",
        "file": "fewshot_mistral-large-instruct_guv-uebergangsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745924000/mistral-large-instruct/output/parsed_output/fewshot_mistral-large-instruct_guv-uebergangsgeld.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (1):\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:class ]\n\tFocus Node: [ sh:class [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ] ; sh:message Literal(\"Does not meet requirement 'User has experienced a work accident, commuting accident, or occupational disease'.\", lang=en) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasEvent ]\n\tValue Node: [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ]\n\tResult Path: sh:class\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 1,
        "validation_results": [
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:class ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "fewshot_1ex3fcv_1745924000",
        "prompt": "fewshot",
        "model": "mistral-large-instruct",
        "file": "fewshot_mistral-large-instruct_guv-verletztengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745924000/mistral-large-instruct/output/parsed_output/fewshot_mistral-large-instruct_guv-verletztengeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745924000",
        "prompt": "fewshot",
        "model": "mistral-large-instruct",
        "file": "fewshot_mistral-large-instruct_grundsicherung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745924000/mistral-large-instruct/output/parsed_output/fewshot_mistral-large-instruct_grundsicherung.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (4):\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ShapeShape ; sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ]\n\tFocus Node: ( [ sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:message Literal(\"Does not meet disability requirement (dauerhaft voll erwerbsgemindert).\", lang=en) ] [ sh:hasValue ff:ReducedEarningCapacity ; sh:path ff:hasEarningCapacity ] )\n\tValue Node: [ sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:message Literal(\"Does not meet disability requirement (dauerhaft voll erwerbsgemindert).\", lang=en) ]\n\tResult Path: ( [ sh:zeroOrMorePath rdf:rest ] rdf:first )\n\tMessage: Value does not conform to Shape shsh:ShapeShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\t\t\tFocus Node: [ sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:message Literal(\"Does not meet disability requirement (dauerhaft voll erwerbsgemindert).\", lang=en) ]\n\t\t\tValue Node: Literal(\"true\" = True, datatype=xsd:boolean)\n\t\t\tResult Path: sh:equals\n\t\t\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ShapeShape ; sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ]\n\tFocus Node: ( [ sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:message Literal(\"Does not meet age requirement (above SGB XII 41 age limit).\", lang=en) ] [ sh:minInclusive Literal(\"18\", datatype=xsd:integer) ; sh:path ff:hasAge ] )\n\tValue Node: [ sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:message Literal(\"Does not meet age requirement (above SGB XII 41 age limit).\", lang=en) ]\n\tResult Path: ( [ sh:zeroOrMorePath rdf:rest ] rdf:first )\n\tMessage: Value does not conform to Shape shsh:ShapeShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\t\t\tFocus Node: [ sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:message Literal(\"Does not meet age requirement (above SGB XII 41 age limit).\", lang=en) ]\n\t\t\tValue Node: Literal(\"true\" = True, datatype=xsd:boolean)\n\t\t\tResult Path: sh:equals\n\t\t\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:message Literal(\"Does not meet age requirement (above SGB XII 41 age limit).\", lang=en) ]\n\tValue Node: Literal(\"true\" = True, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:message Literal(\"Does not meet disability requirement (dauerhaft voll erwerbsgemindert).\", lang=en) ]\n\tValue Node: Literal(\"true\" = True, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 4,
        "validation_results": [
            {
                "source_shape": "[ sh:node shsh:ShapeShape ; sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ]",
                "message": "Value does not conform to Shape shsh:ShapeShape. See details for more information."
            },
            {
                "source_shape": "[ sh:node shsh:ShapeShape ; sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ]",
                "message": "Value does not conform to Shape shsh:ShapeShape. See details for more information."
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "fewshot_1ex3fcv_1745924000",
        "prompt": "fewshot",
        "model": "mistral-large-instruct",
        "file": "fewshot_mistral-large-instruct_buergergeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745924000/mistral-large-instruct/output/parsed_output/fewshot_mistral-large-instruct_buergergeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745924000",
        "prompt": "fewshot",
        "model": "mistral-large-instruct",
        "file": "fewshot_mistral-large-instruct_guv-witwenrente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745924000/mistral-large-instruct/output/parsed_output/fewshot_mistral-large-instruct_guv-witwenrente.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745924000",
        "prompt": "fewshot",
        "model": "mistral-large-instruct",
        "file": "fewshot_mistral-large-instruct_aktivierung-und-eingliederung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745924000/mistral-large-instruct/output/parsed_output/fewshot_mistral-large-instruct_aktivierung-und-eingliederung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745924000",
        "prompt": "fewshot",
        "model": "mistral-large-instruct",
        "file": "fewshot_mistral-large-instruct_bildung-und-teilhabe.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745924000/mistral-large-instruct/output/parsed_output/fewshot_mistral-large-instruct_bildung-und-teilhabe.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745924000",
        "prompt": "fewshot",
        "model": "mistral-large-instruct",
        "file": "fewshot_mistral-large-instruct_kinderzuschlag.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745924000/mistral-large-instruct/output/parsed_output/fewshot_mistral-large-instruct_kinderzuschlag.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (1):\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:lessThan ]\n\tFocus Node: [ sh:lessThan Literal(\"25\", datatype=xsd:integer) ; sh:path ff:hasAge ]\n\tValue Node: Literal(\"25\", datatype=xsd:integer)\n\tResult Path: sh:lessThan\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 1,
        "validation_results": [
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:lessThan ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "fewshot_1ex3fcv_1745924000",
        "prompt": "fewshot",
        "model": "mistral-large-instruct",
        "file": "fewshot_mistral-large-instruct_berufsausbildungsbeihilfe.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745924000/mistral-large-instruct/output/parsed_output/fewshot_mistral-large-instruct_berufsausbildungsbeihilfe.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745924000",
        "prompt": "fewshot",
        "model": "mistral-large-instruct",
        "file": "fewshot_mistral-large-instruct_guv-waisenrente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745924000/mistral-large-instruct/output/parsed_output/fewshot_mistral-large-instruct_guv-waisenrente.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745924000",
        "prompt": "fewshot",
        "model": "mistral-large-instruct",
        "file": "fewshot_mistral-large-instruct_guv-rente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745924000/mistral-large-instruct/output/parsed_output/fewshot_mistral-large-instruct_guv-rente.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745924000",
        "prompt": "fewshot",
        "model": "mistral-large-instruct",
        "file": "fewshot_mistral-large-instruct_uebergangsgeld-behinderung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745924000/mistral-large-instruct/output/parsed_output/fewshot_mistral-large-instruct_uebergangsgeld-behinderung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745924000",
        "prompt": "fewshot",
        "model": "mistral-large-instruct",
        "file": "fewshot_mistral-large-instruct_einstiegsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745924000/mistral-large-instruct/output/parsed_output/fewshot_mistral-large-instruct_einstiegsgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745924000",
        "prompt": "fewshot",
        "model": "mistral-large-instruct",
        "file": "fewshot_mistral-large-instruct_guv-kinderverletztengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745924000/mistral-large-instruct/output/parsed_output/fewshot_mistral-large-instruct_guv-kinderverletztengeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "deepseek-r1-distill-llama-70b",
        "file": "baseline_deepseek-r1-distill-llama-70b_insolvenzgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/deepseek-r1-distill-llama-70b/output/parsed_output/baseline_deepseek-r1-distill-llama-70b_insolvenzgeld.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (12):\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: ff:isEligibleFor\n\tResult Path: sh:path\n\tMessage: Less than 1 values on ff:isEligibleFor->sh:path\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: ff:hasEmployment\n\tResult Path: sh:path\n\tMessage: Less than 1 values on ff:hasEmployment->sh:path\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:in ( ff:B100019_LB_576848 ) ; sh:property ff:isEligibleFor ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:in ( ff:B100019_LB_576848 ) ; sh:property ff:isEligibleFor ]->sh:path\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: ff:countryOfEmployment\n\tResult Path: sh:path\n\tMessage: Less than 1 values on ff:countryOfEmployment->sh:path\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:in ( ff:Germany ) ; sh:property ff:countryOfEmployment ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:in ( ff:Germany ) ; sh:property ff:countryOfEmployment ]->sh:path\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: ff:socialSecurityCountry\n\tResult Path: sh:path\n\tMessage: Less than 1 values on ff:socialSecurityCountry->sh:path\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: ff:hasEvent\n\tResult Path: sh:path\n\tMessage: Less than 1 values on ff:hasEvent->sh:path\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or [ sh:in ( ff:Germany ) ; sh:property ff:socialSecurityCountry ] ; sh:property [ sh:in ( ff:Germany ) ; sh:property ff:countryOfEmployment ], ff:hasEmployment ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or [ sh:in ( ff:Germany ) ; sh:property ff:socialSecurityCountry ] ; sh:property [ sh:in ( ff:Germany ) ; sh:property ff:countryOfEmployment ], ff:hasEmployment ]->sh:path\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:in ( ff:InsolvencyProceeding ff:DiscontinuationOfBusiness ff:InsolvencyApplication ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:property ff:hasEvent ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:in ( ff:InsolvencyProceeding ff:DiscontinuationOfBusiness ff:InsolvencyApplication ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:property ff:hasEvent ]->sh:path\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or [ sh:in ( ff:Germany ) ; sh:property ff:socialSecurityCountry ] ; sh:property [ sh:in ( ff:Germany ) ; sh:property ff:countryOfEmployment ], ff:hasEmployment ]\n\tValue Node: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or [ sh:in ( ff:Germany ) ; sh:property ff:socialSecurityCountry ] ; sh:property [ sh:in ( ff:Germany ) ; sh:property ff:countryOfEmployment ], ff:hasEmployment ]\n\tMessage: Node [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or [ sh:in ( ff:Germany ) ; sh:property ff:socialSecurityCountry ] ; sh:property [ sh:in ( ff:Germany ) ; sh:property ff:countryOfEmployment ], ff:hasEmployment ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:in ( ff:InsolvencyProceeding ff:DiscontinuationOfBusiness ff:InsolvencyApplication ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:property ff:hasEvent ]\n\tValue Node: [ sh:in ( ff:InsolvencyProceeding ff:DiscontinuationOfBusiness ff:InsolvencyApplication ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:property ff:hasEvent ]\n\tMessage: Node [ sh:in ( ff:InsolvencyProceeding ff:DiscontinuationOfBusiness ff:InsolvencyApplication ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:property ff:hasEvent ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ListShape ; sh:path sh:or ]\n\tFocus Node: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or [ sh:in ( ff:Germany ) ; sh:property ff:socialSecurityCountry ] ; sh:property [ sh:in ( ff:Germany ) ; sh:property ff:countryOfEmployment ], ff:hasEmployment ]\n\tValue Node: [ sh:in ( ff:Germany ) ; sh:property ff:socialSecurityCountry ]\n\tResult Path: sh:or\n\tMessage: Value does not conform to Shape shsh:ListShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in HasValueConstraintComponent (http://www.w3.org/ns/shacl#HasValueConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:in ( ff:Germany ) ; sh:property ff:socialSecurityCountry ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Node [ sh:in ( ff:Germany ) ; sh:property ff:socialSecurityCountry ]->[ sh:zeroOrMorePath rdf:rest ] does not contain a value in the set: ['rdf:nil']\n\t\tConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:in ( ff:Germany ) ; sh:property ff:socialSecurityCountry ]\n\t\t\tValue Node: [ sh:in ( ff:Germany ) ; sh:property ff:socialSecurityCountry ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Value does not conform to Shape shsh:ListNodeShape. See details for more information.\n\t\t\tDetails:\n\t\t\t\tConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\tSource Shape: shsh:ListNodeShape\n\t\t\t\t\tFocus Node: [ sh:in ( ff:Germany ) ; sh:property ff:socialSecurityCountry ]\n\t\t\t\t\tValue Node: [ sh:in ( ff:Germany ) ; sh:property ff:socialSecurityCountry ]\n\t\t\t\t\tMessage: Node [ sh:in ( ff:Germany ) ; sh:property ff:socialSecurityCountry ] must conform to one or more shapes in [ sh:hasValue rdf:nil ; sh:property [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:rest ] ] , [ sh:not [ sh:hasValue rdf:nil ] ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:rest ] ]\n",
        "nof_validation_results": 12,
        "validation_results": [
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on ff:isEligibleFor->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on ff:hasEmployment->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:in ( ff:B100019_LB_576848 ) ; sh:property ff:isEligibleFor ]->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on ff:countryOfEmployment->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:in ( ff:Germany ) ; sh:property ff:countryOfEmployment ]->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on ff:socialSecurityCountry->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on ff:hasEvent->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or [ sh:in ( ff:Germany ) ; sh:property ff:socialSecurityCountry ] ; sh:property [ sh:in ( ff:Germany ) ; sh:property ff:countryOfEmployment ], ff:hasEmployment ]->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:in ( ff:InsolvencyProceeding ff:DiscontinuationOfBusiness ff:InsolvencyApplication ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:property ff:hasEvent ]->sh:path"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or [ sh:in ( ff:Germany ) ; sh:property ff:socialSecurityCountry ] ; sh:property [ sh:in ( ff:Germany ) ; sh:property ff:countryOfEmployment ], ff:hasEmployment ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:in ( ff:InsolvencyProceeding ff:DiscontinuationOfBusiness ff:InsolvencyApplication ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:property ff:hasEvent ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "[ sh:node shsh:ListShape ; sh:path sh:or ]",
                "message": "Value does not conform to Shape shsh:ListShape. See details for more information."
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "deepseek-r1-distill-llama-70b",
        "file": "baseline_deepseek-r1-distill-llama-70b_grundsicherung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/deepseek-r1-distill-llama-70b/output/parsed_output/baseline_deepseek-r1-distill-llama-70b_grundsicherung.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (7):\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ShapeShape ; sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ]\n\tFocus Node: ( [ sh:datatype xsd:boolean ; sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:canCoverBasicNeedsOfBenefitUnit ] [ sh:node ff:L100040_LB_8664880 ; sh:path ff:hasNoPriorityClaimsOver ] )\n\tValue Node: [ sh:datatype xsd:boolean ; sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:canCoverBasicNeedsOfBenefitUnit ]\n\tResult Path: ( [ sh:zeroOrMorePath rdf:rest ] rdf:first )\n\tMessage: Value does not conform to Shape shsh:ShapeShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\t\t\tFocus Node: [ sh:datatype xsd:boolean ; sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:canCoverBasicNeedsOfBenefitUnit ]\n\t\t\tValue Node: Literal(\"false\" = False, datatype=xsd:boolean)\n\t\t\tResult Path: sh:equals\n\t\t\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:nodeKind sh:BlankNode ; sh:path [ sh:inverse ff:hasEarningCapacity ] ; sh:property [ sh:datatype xsd:boolean ; sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:isPermanent ], [ sh:datatype xsd:decimal ; sh:equals Literal(\"1.0\", datatype=xsd:decimal) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:reductionInPercent ] ]\n\tValue Node: [ sh:inverse ff:hasEarningCapacity ]\n\tResult Path: sh:path\n\tMessage: Node [ sh:inverse ff:hasEarningCapacity ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:nodeKind sh:BlankNode ; sh:path [ sh:inverse ff:hasEarningCapacity ] ; sh:property [ sh:datatype xsd:boolean ; sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:isPermanent ], [ sh:datatype xsd:decimal ; sh:equals Literal(\"1.0\", datatype=xsd:decimal) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:reductionInPercent ] ]\n\tValue Node: [ sh:nodeKind sh:BlankNode ; sh:path [ sh:inverse ff:hasEarningCapacity ] ; sh:property [ sh:datatype xsd:boolean ; sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:isPermanent ], [ sh:datatype xsd:decimal ; sh:equals Literal(\"1.0\", datatype=xsd:decimal) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:reductionInPercent ] ]\n\tMessage: Node [ sh:nodeKind sh:BlankNode ; sh:path [ sh:inverse ff:hasEarningCapacity ] ; sh:property [ sh:datatype xsd:boolean ; sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:isPermanent ], [ sh:datatype xsd:decimal ; sh:equals Literal(\"1.0\", datatype=xsd:decimal) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:reductionInPercent ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:datatype xsd:decimal ; sh:equals Literal(\"1.0\", datatype=xsd:decimal) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:reductionInPercent ]\n\tValue Node: Literal(\"1.0\", datatype=xsd:decimal)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:canCoverBasicNeedsOfBenefitUnit ]\n\tValue Node: Literal(\"false\" = False, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:isPermanent ]\n\tValue Node: Literal(\"true\" = True, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:aboveSGBXII41AgeLimit ]\n\tValue Node: Literal(\"true\" = True, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 7,
        "validation_results": [
            {
                "source_shape": "[ sh:node shsh:ShapeShape ; sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ]",
                "message": "Value does not conform to Shape shsh:ShapeShape. See details for more information."
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Node [ sh:inverse ff:hasEarningCapacity ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:nodeKind sh:BlankNode ; sh:path [ sh:inverse ff:hasEarningCapacity ] ; sh:property [ sh:datatype xsd:boolean ; sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:isPermanent ], [ sh:datatype xsd:decimal ; sh:equals Literal(\"1.0\", datatype=xsd:decimal) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:reductionInPercent ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "deepseek-r1-distill-llama-70b",
        "file": "baseline_deepseek-r1-distill-llama-70b_guv-waisenrente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/deepseek-r1-distill-llama-70b/output/parsed_output/baseline_deepseek-r1-distill-llama-70b_guv-waisenrente.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (12):\nConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:condition ff:OccupationalRehabilitation ; sh:path [ sh:inverse ff:resultsInTreatment ] ]\n\tValue Node: [ sh:inverse ff:resultsInTreatment ]\n\tResult Path: sh:path\n\tMessage: Node [ sh:inverse ff:resultsInTreatment ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]\nConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:condition [ rdf:type sh:Shape ; sh:property [ sh:condition [ rdf:type sh:Shape ; sh:property [ sh:condition [ rdf:type sh:Shape ; sh:or <http://recursion.too.deep>, <http://recursion.too.deep> ; sh:property <http://recursion.too.deep> ] ; sh:path ff:triggeringEvent ] ] ; sh:path ff:causeOfDeath ] ] ; sh:path [ sh:inverse ff:closeRelative ] ]\n\tValue Node: [ sh:inverse ff:closeRelative ]\n\tResult Path: sh:path\n\tMessage: Node [ sh:inverse ff:closeRelative ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:condition [ rdf:type sh:Shape ; sh:property [ sh:condition [ rdf:type sh:Shape ; sh:property [ sh:condition [ rdf:type sh:Shape ; sh:or <http://recursion.too.deep>, <http://recursion.too.deep> ; sh:property <http://recursion.too.deep> ] ; sh:path ff:triggeringEvent ] ] ; sh:path ff:causeOfDeath ] ] ; sh:path [ sh:inverse ff:closeRelative ] ]\n\tValue Node: [ sh:condition [ rdf:type sh:Shape ; sh:property [ sh:condition [ rdf:type sh:Shape ; sh:property [ sh:condition [ rdf:type sh:Shape ; sh:or <http://recursion.too.deep>, <http://recursion.too.deep> ; sh:property <http://recursion.too.deep> ] ; sh:path ff:triggeringEvent ] ] ; sh:path ff:causeOfDeath ] ] ; sh:path [ sh:inverse ff:closeRelative ] ]\n\tMessage: Node [ sh:condition [ rdf:type sh:Shape ; sh:property [ sh:condition [ rdf:type sh:Shape ; sh:property [ sh:condition [ rdf:type sh:Shape ; sh:or <http://recursion.too.deep>, <http://recursion.too.deep> ; sh:property <http://recursion.too.deep> ] ; sh:path ff:triggeringEvent ] ] ; sh:path ff:causeOfDeath ] ] ; sh:path [ sh:inverse ff:closeRelative ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:condition ff:OccupationalRehabilitation ; sh:path [ sh:inverse ff:resultsInTreatment ] ]\n\tValue Node: [ sh:condition ff:OccupationalRehabilitation ; sh:path [ sh:inverse ff:resultsInTreatment ] ]\n\tMessage: Node [ sh:condition ff:OccupationalRehabilitation ; sh:path [ sh:inverse ff:resultsInTreatment ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ListShape ; sh:path sh:or ]\n\tFocus Node: [ sh:condition [ sh:property [ sh:condition [ rdf:type sh:Shape ; sh:property [ sh:condition ff:VocationalTrainingAct ; sh:path ff:recognizedByLaw ] ] ; sh:path ff:participates ] ] ; sh:or [ sh:condition [ sh:property [ sh:condition ff:SevereDisability ; sh:path ff:hasDisabilityType ] ] ], [ sh:condition ff:isInTransitionalPeriod ] ]\n\tValue Node: [ sh:condition [ sh:property [ sh:condition ff:SevereDisability ; sh:path ff:hasDisabilityType ] ] ]\n\tResult Path: sh:or\n\tMessage: Value does not conform to Shape shsh:ListShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in HasValueConstraintComponent (http://www.w3.org/ns/shacl#HasValueConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:condition [ sh:property [ sh:condition ff:SevereDisability ; sh:path ff:hasDisabilityType ] ] ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Node [ sh:condition [ sh:property [ sh:condition ff:SevereDisability ; sh:path ff:hasDisabilityType ] ] ]->[ sh:zeroOrMorePath rdf:rest ] does not contain a value in the set: ['rdf:nil']\n\t\tConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:condition [ sh:property [ sh:condition ff:SevereDisability ; sh:path ff:hasDisabilityType ] ] ]\n\t\t\tValue Node: [ sh:condition [ sh:property [ sh:condition ff:SevereDisability ; sh:path ff:hasDisabilityType ] ] ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Value does not conform to Shape shsh:ListNodeShape. See details for more information.\n\t\t\tDetails:\n\t\t\t\tConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\tSource Shape: shsh:ListNodeShape\n\t\t\t\t\tFocus Node: [ sh:condition [ sh:property [ sh:condition ff:SevereDisability ; sh:path ff:hasDisabilityType ] ] ]\n\t\t\t\t\tValue Node: [ sh:condition [ sh:property [ sh:condition ff:SevereDisability ; sh:path ff:hasDisabilityType ] ] ]\n\t\t\t\t\tMessage: Node [ sh:condition [ sh:property [ sh:condition ff:SevereDisability ; sh:path ff:hasDisabilityType ] ] ] must conform to one or more shapes in [ sh:hasValue rdf:nil ; sh:property [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:rest ] ] , [ sh:not [ sh:hasValue rdf:nil ] ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:rest ] ]\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ListShape ; sh:path sh:or ]\n\tFocus Node: [ sh:condition [ sh:property [ sh:condition [ rdf:type sh:Shape ; sh:property [ sh:condition ff:VocationalTrainingAct ; sh:path ff:recognizedByLaw ] ] ; sh:path ff:participates ] ] ; sh:or [ sh:condition [ sh:property [ sh:condition ff:SevereDisability ; sh:path ff:hasDisabilityType ] ] ], [ sh:condition ff:isInTransitionalPeriod ] ]\n\tValue Node: [ sh:condition ff:isInTransitionalPeriod ]\n\tResult Path: sh:or\n\tMessage: Value does not conform to Shape shsh:ListShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in HasValueConstraintComponent (http://www.w3.org/ns/shacl#HasValueConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:condition ff:isInTransitionalPeriod ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Node [ sh:condition ff:isInTransitionalPeriod ]->[ sh:zeroOrMorePath rdf:rest ] does not contain a value in the set: ['rdf:nil']\n\t\tConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:condition ff:isInTransitionalPeriod ]\n\t\t\tValue Node: [ sh:condition ff:isInTransitionalPeriod ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Value does not conform to Shape shsh:ListNodeShape. See details for more information.\n\t\t\tDetails:\n\t\t\t\tConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\tSource Shape: shsh:ListNodeShape\n\t\t\t\t\tFocus Node: [ sh:condition ff:isInTransitionalPeriod ]\n\t\t\t\t\tValue Node: [ sh:condition ff:isInTransitionalPeriod ]\n\t\t\t\t\tMessage: Node [ sh:condition ff:isInTransitionalPeriod ] must conform to one or more shapes in [ sh:hasValue rdf:nil ; sh:property [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:rest ] ] , [ sh:not [ sh:hasValue rdf:nil ] ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:rest ] ]\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ListShape ; sh:path sh:or ]\n\tFocus Node: [ sh:condition [ sh:greaterThanOrEqual Literal(\"18\", datatype=xsd:integer) ; sh:lessThanOrEqual Literal(\"27\", datatype=xsd:integer) ] ; sh:or [ sh:condition [ sh:property [ sh:condition [ rdf:type sh:Shape ; sh:property [ sh:condition ff:VocationalTrainingAct ; sh:path ff:recognizedByLaw ] ] ; sh:path ff:participates ] ] ; sh:or [ sh:condition [ sh:property [ sh:condition ff:SevereDisability ; sh:path ff:hasDisabilityType ] ] ], [ sh:condition ff:isInTransitionalPeriod ] ] ; sh:path ff:hasAge ]\n\tValue Node: [ sh:condition [ sh:property [ sh:condition [ rdf:type sh:Shape ; sh:property [ sh:condition ff:VocationalTrainingAct ; sh:path ff:recognizedByLaw ] ] ; sh:path ff:participates ] ] ; sh:or [ sh:condition [ sh:property [ sh:condition ff:SevereDisability ; sh:path ff:hasDisabilityType ] ] ], [ sh:condition ff:isInTransitionalPeriod ] ]\n\tResult Path: sh:or\n\tMessage: Value does not conform to Shape shsh:ListShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in HasValueConstraintComponent (http://www.w3.org/ns/shacl#HasValueConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:condition [ sh:property [ sh:condition [ rdf:type sh:Shape ; sh:property [ sh:condition ff:VocationalTrainingAct ; sh:path ff:recognizedByLaw ] ] ; sh:path ff:participates ] ] ; sh:or [ sh:condition [ sh:property [ sh:condition ff:SevereDisability ; sh:path ff:hasDisabilityType ] ] ], [ sh:condition ff:isInTransitionalPeriod ] ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Node [ sh:condition [ sh:property [ sh:condition [ rdf:type sh:Shape ; sh:property [ sh:condition ff:VocationalTrainingAct ; sh:path ff:recognizedByLaw ] ] ; sh:path ff:participates ] ] ; sh:or [ sh:condition [ sh:property [ sh:condition ff:SevereDisability ; sh:path ff:hasDisabilityType ] ] ], [ sh:condition ff:isInTransitionalPeriod ] ]->[ sh:zeroOrMorePath rdf:rest ] does not contain a value in the set: ['rdf:nil']\n\t\tConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:condition [ sh:property [ sh:condition [ rdf:type sh:Shape ; sh:property [ sh:condition ff:VocationalTrainingAct ; sh:path ff:recognizedByLaw ] ] ; sh:path ff:participates ] ] ; sh:or [ sh:condition [ sh:property [ sh:condition ff:SevereDisability ; sh:path ff:hasDisabilityType ] ] ], [ sh:condition ff:isInTransitionalPeriod ] ]\n\t\t\tValue Node: [ sh:condition [ sh:property [ sh:condition [ rdf:type sh:Shape ; sh:property [ sh:condition ff:VocationalTrainingAct ; sh:path ff:recognizedByLaw ] ] ; sh:path ff:participates ] ] ; sh:or [ sh:condition [ sh:property [ sh:condition ff:SevereDisability ; sh:path ff:hasDisabilityType ] ] ], [ sh:condition ff:isInTransitionalPeriod ] ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Value does not conform to Shape shsh:ListNodeShape. See details for more information.\n\t\t\tDetails:\n\t\t\t\tConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\tSource Shape: shsh:ListNodeShape\n\t\t\t\t\tFocus Node: [ sh:condition [ sh:property [ sh:condition [ rdf:type sh:Shape ; sh:property [ sh:condition ff:VocationalTrainingAct ; sh:path ff:recognizedByLaw ] ] ; sh:path ff:participates ] ] ; sh:or [ sh:condition [ sh:property [ sh:condition ff:SevereDisability ; sh:path ff:hasDisabilityType ] ] ], [ sh:condition ff:isInTransitionalPeriod ] ]\n\t\t\t\t\tValue Node: [ sh:condition [ sh:property [ sh:condition [ rdf:type sh:Shape ; sh:property [ sh:condition ff:VocationalTrainingAct ; sh:path ff:recognizedByLaw ] ] ; sh:path ff:participates ] ] ; sh:or [ sh:condition [ sh:property [ sh:condition ff:SevereDisability ; sh:path ff:hasDisabilityType ] ] ], [ sh:condition ff:isInTransitionalPeriod ] ]\n\t\t\t\t\tMessage: Node [ sh:condition [ sh:property [ sh:condition [ rdf:type sh:Shape ; sh:property [ sh:condition ff:VocationalTrainingAct ; sh:path ff:recognizedByLaw ] ] ; sh:path ff:participates ] ] ; sh:or [ sh:condition [ sh:property [ sh:condition ff:SevereDisability ; sh:path ff:hasDisabilityType ] ] ], [ sh:condition ff:isInTransitionalPeriod ] ] must conform to one or more shapes in [ sh:hasValue rdf:nil ; sh:property [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:rest ] ] , [ sh:not [ sh:hasValue rdf:nil ] ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:rest ] ]\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ListShape ; sh:path sh:or ]\n\tFocus Node: [ rdf:type sh:Shape ; sh:or [ sh:condition ff:FosterChild ], [ sh:condition ff:Grandchild ], [ sh:condition ff:Sibling ] ; sh:property [ sh:condition [ sh:equals ff:User ] ; sh:path ff:stepChildTo ] ]\n\tValue Node: [ sh:condition ff:Sibling ]\n\tResult Path: sh:or\n\tMessage: Value does not conform to Shape shsh:ListShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in HasValueConstraintComponent (http://www.w3.org/ns/shacl#HasValueConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:condition ff:Sibling ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Node [ sh:condition ff:Sibling ]->[ sh:zeroOrMorePath rdf:rest ] does not contain a value in the set: ['rdf:nil']\n\t\tConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:condition ff:Sibling ]\n\t\t\tValue Node: [ sh:condition ff:Sibling ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Value does not conform to Shape shsh:ListNodeShape. See details for more information.\n\t\t\tDetails:\n\t\t\t\tConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\tSource Shape: shsh:ListNodeShape\n\t\t\t\t\tFocus Node: [ sh:condition ff:Sibling ]\n\t\t\t\t\tValue Node: [ sh:condition ff:Sibling ]\n\t\t\t\t\tMessage: Node [ sh:condition ff:Sibling ] must conform to one or more shapes in [ sh:hasValue rdf:nil ; sh:property [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:rest ] ] , [ sh:not [ sh:hasValue rdf:nil ] ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:rest ] ]\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ListShape ; sh:path sh:or ]\n\tFocus Node: [ rdf:type sh:Shape ; sh:or [ sh:condition ff:FosterChild ], [ sh:condition ff:Grandchild ], [ sh:condition ff:Sibling ] ; sh:property [ sh:condition [ sh:equals ff:User ] ; sh:path ff:stepChildTo ] ]\n\tValue Node: [ sh:condition ff:Grandchild ]\n\tResult Path: sh:or\n\tMessage: Value does not conform to Shape shsh:ListShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in HasValueConstraintComponent (http://www.w3.org/ns/shacl#HasValueConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:condition ff:Grandchild ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Node [ sh:condition ff:Grandchild ]->[ sh:zeroOrMorePath rdf:rest ] does not contain a value in the set: ['rdf:nil']\n\t\tConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:condition ff:Grandchild ]\n\t\t\tValue Node: [ sh:condition ff:Grandchild ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Value does not conform to Shape shsh:ListNodeShape. See details for more information.\n\t\t\tDetails:\n\t\t\t\tConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\tSource Shape: shsh:ListNodeShape\n\t\t\t\t\tFocus Node: [ sh:condition ff:Grandchild ]\n\t\t\t\t\tValue Node: [ sh:condition ff:Grandchild ]\n\t\t\t\t\tMessage: Node [ sh:condition ff:Grandchild ] must conform to one or more shapes in [ sh:hasValue rdf:nil ; sh:property [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:rest ] ] , [ sh:not [ sh:hasValue rdf:nil ] ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:rest ] ]\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ListShape ; sh:path sh:or ]\n\tFocus Node: [ rdf:type sh:Shape ; sh:or [ sh:condition ff:FosterChild ], [ sh:condition ff:Grandchild ], [ sh:condition ff:Sibling ] ; sh:property [ sh:condition [ sh:equals ff:User ] ; sh:path ff:stepChildTo ] ]\n\tValue Node: [ sh:condition ff:FosterChild ]\n\tResult Path: sh:or\n\tMessage: Value does not conform to Shape shsh:ListShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in HasValueConstraintComponent (http://www.w3.org/ns/shacl#HasValueConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:condition ff:FosterChild ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Node [ sh:condition ff:FosterChild ]->[ sh:zeroOrMorePath rdf:rest ] does not contain a value in the set: ['rdf:nil']\n\t\tConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:condition ff:FosterChild ]\n\t\t\tValue Node: [ sh:condition ff:FosterChild ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Value does not conform to Shape shsh:ListNodeShape. See details for more information.\n\t\t\tDetails:\n\t\t\t\tConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\tSource Shape: shsh:ListNodeShape\n\t\t\t\t\tFocus Node: [ sh:condition ff:FosterChild ]\n\t\t\t\t\tValue Node: [ sh:condition ff:FosterChild ]\n\t\t\t\t\tMessage: Node [ sh:condition ff:FosterChild ] must conform to one or more shapes in [ sh:hasValue rdf:nil ; sh:property [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:rest ] ] , [ sh:not [ sh:hasValue rdf:nil ] ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:rest ] ]\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ListShape ; sh:path sh:or ]\n\tFocus Node: [ rdf:type sh:Shape ; sh:or <http://recursion.too.deep>, <http://recursion.too.deep> ; sh:property <http://recursion.too.deep> ]\n\tValue Node: [ sh:condition ff:WorkAccident ]\n\tResult Path: sh:or\n\tMessage: Value does not conform to Shape shsh:ListShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in HasValueConstraintComponent (http://www.w3.org/ns/shacl#HasValueConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:condition ff:WorkAccident ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Node [ sh:condition ff:WorkAccident ]->[ sh:zeroOrMorePath rdf:rest ] does not contain a value in the set: ['rdf:nil']\n\t\tConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:condition ff:WorkAccident ]\n\t\t\tValue Node: [ sh:condition ff:WorkAccident ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Value does not conform to Shape shsh:ListNodeShape. See details for more information.\n\t\t\tDetails:\n\t\t\t\tConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\tSource Shape: shsh:ListNodeShape\n\t\t\t\t\tFocus Node: [ sh:condition ff:WorkAccident ]\n\t\t\t\t\tValue Node: [ sh:condition ff:WorkAccident ]\n\t\t\t\t\tMessage: Node [ sh:condition ff:WorkAccident ] must conform to one or more shapes in [ sh:hasValue rdf:nil ; sh:property [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:rest ] ] , [ sh:not [ sh:hasValue rdf:nil ] ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:rest ] ]\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ListShape ; sh:path sh:or ]\n\tFocus Node: [ rdf:type sh:Shape ; sh:or <http://recursion.too.deep>, <http://recursion.too.deep> ; sh:property <http://recursion.too.deep> ]\n\tValue Node: [ sh:condition ff:CommutingAccident ]\n\tResult Path: sh:or\n\tMessage: Value does not conform to Shape shsh:ListShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in HasValueConstraintComponent (http://www.w3.org/ns/shacl#HasValueConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:condition ff:CommutingAccident ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Node [ sh:condition ff:CommutingAccident ]->[ sh:zeroOrMorePath rdf:rest ] does not contain a value in the set: ['rdf:nil']\n\t\tConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:condition ff:CommutingAccident ]\n\t\t\tValue Node: [ sh:condition ff:CommutingAccident ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Value does not conform to Shape shsh:ListNodeShape. See details for more information.\n\t\t\tDetails:\n\t\t\t\tConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\tSource Shape: shsh:ListNodeShape\n\t\t\t\t\tFocus Node: [ sh:condition ff:CommutingAccident ]\n\t\t\t\t\tValue Node: [ sh:condition ff:CommutingAccident ]\n\t\t\t\t\tMessage: Node [ sh:condition ff:CommutingAccident ] must conform to one or more shapes in [ sh:hasValue rdf:nil ; sh:property [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:rest ] ] , [ sh:not [ sh:hasValue rdf:nil ] ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:rest ] ]\n",
        "nof_validation_results": 12,
        "validation_results": [
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Node [ sh:inverse ff:resultsInTreatment ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Node [ sh:inverse ff:closeRelative ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:condition [ rdf:type sh:Shape ; sh:property [ sh:condition [ rdf:type sh:Shape ; sh:property [ sh:condition [ rdf:type sh:Shape ; sh:or <http://recursion.too.deep>, <http://recursion.too.deep> ; sh:property <http://recursion.too.deep> ] ; sh:path ff:triggeringEvent ] ] ; sh:path ff:causeOfDeath ] ] ; sh:path [ sh:inverse ff:closeRelative ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:condition ff:OccupationalRehabilitation ; sh:path [ sh:inverse ff:resultsInTreatment ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "[ sh:node shsh:ListShape ; sh:path sh:or ]",
                "message": "Value does not conform to Shape shsh:ListShape. See details for more information."
            },
            {
                "source_shape": "[ sh:node shsh:ListShape ; sh:path sh:or ]",
                "message": "Value does not conform to Shape shsh:ListShape. See details for more information."
            },
            {
                "source_shape": "[ sh:node shsh:ListShape ; sh:path sh:or ]",
                "message": "Value does not conform to Shape shsh:ListShape. See details for more information."
            },
            {
                "source_shape": "[ sh:node shsh:ListShape ; sh:path sh:or ]",
                "message": "Value does not conform to Shape shsh:ListShape. See details for more information."
            },
            {
                "source_shape": "[ sh:node shsh:ListShape ; sh:path sh:or ]",
                "message": "Value does not conform to Shape shsh:ListShape. See details for more information."
            },
            {
                "source_shape": "[ sh:node shsh:ListShape ; sh:path sh:or ]",
                "message": "Value does not conform to Shape shsh:ListShape. See details for more information."
            },
            {
                "source_shape": "[ sh:node shsh:ListShape ; sh:path sh:or ]",
                "message": "Value does not conform to Shape shsh:ListShape. See details for more information."
            },
            {
                "source_shape": "[ sh:node shsh:ListShape ; sh:path sh:or ]",
                "message": "Value does not conform to Shape shsh:ListShape. See details for more information."
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "deepseek-r1-distill-llama-70b",
        "file": "baseline_deepseek-r1-distill-llama-70b_arbeitslosengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/deepseek-r1-distill-llama-70b/output/parsed_output/baseline_deepseek-r1-distill-llama-70b_arbeitslosengeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "deepseek-r1-distill-llama-70b",
        "file": "baseline_deepseek-r1-distill-llama-70b_guv-witwenrente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/deepseek-r1-distill-llama-70b/output/parsed_output/baseline_deepseek-r1-distill-llama-70b_guv-witwenrente.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "deepseek-r1-distill-llama-70b",
        "file": "baseline_deepseek-r1-distill-llama-70b_krankengeld-begleitperson.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/deepseek-r1-distill-llama-70b/output/parsed_output/baseline_deepseek-r1-distill-llama-70b_krankengeld-begleitperson.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "deepseek-r1-distill-llama-70b",
        "file": "baseline_deepseek-r1-distill-llama-70b_kinderzuschlag.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/deepseek-r1-distill-llama-70b/output/parsed_output/baseline_deepseek-r1-distill-llama-70b_kinderzuschlag.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (6):\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:canCoverBasicNeedsOfBenefitUnit ]\n\tValue Node: Literal(\"true\" = True, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:hasConsiderableAssets ]\n\tValue Node: Literal(\"false\" = False, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:equals [ sh:or [ sh:left ff:isSingleParent ; sh:minValue Literal(\"600\", datatype=xsd:integer) ; sh:right Literal(\"true\" = True, datatype=xsd:boolean) ], [ sh:left ff:isSingleParent ; sh:right Literal(\"false\" = False, datatype=xsd:boolean) ] ] ; sh:minValue Literal(\"900\", datatype=xsd:integer) ; sh:path ff:familyGrossIncome ]\n\tValue Node: [ sh:or [ sh:left ff:isSingleParent ; sh:minValue Literal(\"600\", datatype=xsd:integer) ; sh:right Literal(\"true\" = True, datatype=xsd:boolean) ], [ sh:left ff:isSingleParent ; sh:right Literal(\"false\" = False, datatype=xsd:boolean) ] ]\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:condition [ sh:equals ff:Married ; sh:inverse Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:hasMaritalStatus ], [ sh:equals ff:User ; sh:path ff:sameHouseholdAs ], [ sh:max Literal(\"24\", datatype=xsd:integer) ; sh:path ff:hasAge ] ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:BlankNodeOr ; sh:path ff:hasChild ]\n\tValue Node: sh:BlankNodeOr\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:BlankNodeOr not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ListShape ; sh:path sh:or ]\n\tFocus Node: [ sh:or [ sh:left ff:isSingleParent ; sh:minValue Literal(\"600\", datatype=xsd:integer) ; sh:right Literal(\"true\" = True, datatype=xsd:boolean) ], [ sh:left ff:isSingleParent ; sh:right Literal(\"false\" = False, datatype=xsd:boolean) ] ]\n\tValue Node: [ sh:left ff:isSingleParent ; sh:right Literal(\"false\" = False, datatype=xsd:boolean) ]\n\tResult Path: sh:or\n\tMessage: Value does not conform to Shape shsh:ListShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in HasValueConstraintComponent (http://www.w3.org/ns/shacl#HasValueConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:left ff:isSingleParent ; sh:right Literal(\"false\" = False, datatype=xsd:boolean) ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Node [ sh:left ff:isSingleParent ; sh:right Literal(\"false\" = False, datatype=xsd:boolean) ]->[ sh:zeroOrMorePath rdf:rest ] does not contain a value in the set: ['rdf:nil']\n\t\tConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:left ff:isSingleParent ; sh:right Literal(\"false\" = False, datatype=xsd:boolean) ]\n\t\t\tValue Node: [ sh:left ff:isSingleParent ; sh:right Literal(\"false\" = False, datatype=xsd:boolean) ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Value does not conform to Shape shsh:ListNodeShape. See details for more information.\n\t\t\tDetails:\n\t\t\t\tConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\tSource Shape: shsh:ListNodeShape\n\t\t\t\t\tFocus Node: [ sh:left ff:isSingleParent ; sh:right Literal(\"false\" = False, datatype=xsd:boolean) ]\n\t\t\t\t\tValue Node: [ sh:left ff:isSingleParent ; sh:right Literal(\"false\" = False, datatype=xsd:boolean) ]\n\t\t\t\t\tMessage: Node [ sh:left ff:isSingleParent ; sh:right Literal(\"false\" = False, datatype=xsd:boolean) ] must conform to one or more shapes in [ sh:hasValue rdf:nil ; sh:property [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:rest ] ] , [ sh:not [ sh:hasValue rdf:nil ] ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:rest ] ]\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ListShape ; sh:path sh:or ]\n\tFocus Node: [ sh:or [ sh:left ff:isSingleParent ; sh:minValue Literal(\"600\", datatype=xsd:integer) ; sh:right Literal(\"true\" = True, datatype=xsd:boolean) ], [ sh:left ff:isSingleParent ; sh:right Literal(\"false\" = False, datatype=xsd:boolean) ] ]\n\tValue Node: [ sh:left ff:isSingleParent ; sh:minValue Literal(\"600\", datatype=xsd:integer) ; sh:right Literal(\"true\" = True, datatype=xsd:boolean) ]\n\tResult Path: sh:or\n\tMessage: Value does not conform to Shape shsh:ListShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in HasValueConstraintComponent (http://www.w3.org/ns/shacl#HasValueConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:left ff:isSingleParent ; sh:minValue Literal(\"600\", datatype=xsd:integer) ; sh:right Literal(\"true\" = True, datatype=xsd:boolean) ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Node [ sh:left ff:isSingleParent ; sh:minValue Literal(\"600\", datatype=xsd:integer) ; sh:right Literal(\"true\" = True, datatype=xsd:boolean) ]->[ sh:zeroOrMorePath rdf:rest ] does not contain a value in the set: ['rdf:nil']\n\t\tConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:left ff:isSingleParent ; sh:minValue Literal(\"600\", datatype=xsd:integer) ; sh:right Literal(\"true\" = True, datatype=xsd:boolean) ]\n\t\t\tValue Node: [ sh:left ff:isSingleParent ; sh:minValue Literal(\"600\", datatype=xsd:integer) ; sh:right Literal(\"true\" = True, datatype=xsd:boolean) ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Value does not conform to Shape shsh:ListNodeShape. See details for more information.\n\t\t\tDetails:\n\t\t\t\tConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\tSource Shape: shsh:ListNodeShape\n\t\t\t\t\tFocus Node: [ sh:left ff:isSingleParent ; sh:minValue Literal(\"600\", datatype=xsd:integer) ; sh:right Literal(\"true\" = True, datatype=xsd:boolean) ]\n\t\t\t\t\tValue Node: [ sh:left ff:isSingleParent ; sh:minValue Literal(\"600\", datatype=xsd:integer) ; sh:right Literal(\"true\" = True, datatype=xsd:boolean) ]\n\t\t\t\t\tMessage: Node [ sh:left ff:isSingleParent ; sh:minValue Literal(\"600\", datatype=xsd:integer) ; sh:right Literal(\"true\" = True, datatype=xsd:boolean) ] must conform to one or more shapes in [ sh:hasValue rdf:nil ; sh:property [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:rest ] ] , [ sh:not [ sh:hasValue rdf:nil ] ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:rest ] ]\n",
        "nof_validation_results": 6,
        "validation_results": [
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:BlankNodeOr not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:node shsh:ListShape ; sh:path sh:or ]",
                "message": "Value does not conform to Shape shsh:ListShape. See details for more information."
            },
            {
                "source_shape": "[ sh:node shsh:ListShape ; sh:path sh:or ]",
                "message": "Value does not conform to Shape shsh:ListShape. See details for more information."
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "deepseek-r1-distill-llama-70b",
        "file": "baseline_deepseek-r1-distill-llama-70b_grundausbildung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/deepseek-r1-distill-llama-70b/output/parsed_output/baseline_deepseek-r1-distill-llama-70b_grundausbildung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "qwq-32b",
        "file": "baseline_qwq-32b_insolvenzgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/qwq-32b/output/parsed_output/baseline_qwq-32b_insolvenzgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "qwq-32b",
        "file": "baseline_qwq-32b_kindergeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/qwq-32b/output/parsed_output/baseline_qwq-32b_kindergeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "qwq-32b",
        "file": "baseline_qwq-32b_ausbildungsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/qwq-32b/output/parsed_output/baseline_qwq-32b_ausbildungsgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "qwq-32b",
        "file": "baseline_qwq-32b_buergergeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/qwq-32b/output/parsed_output/baseline_qwq-32b_buergergeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "qwq-32b",
        "file": "baseline_qwq-32b_aktivierung-und-eingliederung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/qwq-32b/output/parsed_output/baseline_qwq-32b_aktivierung-und-eingliederung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "qwq-32b",
        "file": "baseline_qwq-32b_einstiegsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/qwq-32b/output/parsed_output/baseline_qwq-32b_einstiegsgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "qwq-32b",
        "file": "baseline_qwq-32b_guv-rente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/qwq-32b/output/parsed_output/baseline_qwq-32b_guv-rente.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "qwq-32b",
        "file": "baseline_qwq-32b_guv-waisenrente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/qwq-32b/output/parsed_output/baseline_qwq-32b_guv-waisenrente.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (8):\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ShapeShape ; sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ]\n\tFocus Node: ( [ sh:class [ sh:or ( ff:School ff:VocationalTraining ) ] ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:participates ] [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasDisabilityType ; sh:property [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:reducesWorkProspectsPermanently ] ] [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isInTransitionalPeriod ] )\n\tValue Node: [ sh:class [ sh:or ( ff:School ff:VocationalTraining ) ] ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:participates ]\n\tResult Path: ( [ sh:zeroOrMorePath rdf:rest ] rdf:first )\n\tMessage: Value does not conform to Shape shsh:ShapeShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:class ]\n\t\t\tFocus Node: [ sh:class [ sh:or ( ff:School ff:VocationalTraining ) ] ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:participates ]\n\t\t\tValue Node: [ sh:or ( ff:School ff:VocationalTraining ) ]\n\t\t\tResult Path: sh:class\n\t\t\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:or ( [ sh:property [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inversePath ff:hasChild ] ; sh:property [ sh:class [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ] ; sh:path ff:causeOfDeath ] ] ] [ sh:property [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:stepChildTo ; sh:property [ sh:class [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ] ; sh:path ff:causeOfDeath ] ] ] [ sh:property [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:fosterChildTo ; sh:property [ sh:class [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ] ; sh:path ff:causeOfDeath ] ] ] [ sh:property [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasPrimaryCareTaker ; sh:property [ sh:class [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ] ; sh:path ff:causeOfDeath ], [ sh:hasValue ff:User ; sh:path ff:sameHouseholdAs ] ] ] ) ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:or ( [ sh:property [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inversePath ff:hasChild ] ; sh:property [ sh:class [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ] ; sh:path ff:causeOfDeath ] ] ] [ sh:property [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:stepChildTo ; sh:property [ sh:class [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ] ; sh:path ff:causeOfDeath ] ] ] [ sh:property [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:fosterChildTo ; sh:property [ sh:class [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ] ; sh:path ff:causeOfDeath ] ] ] [ sh:property [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasPrimaryCareTaker ; sh:property [ sh:class [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ] ; sh:path ff:causeOfDeath ], [ sh:hasValue ff:User ; sh:path ff:sameHouseholdAs ] ] ] ) ]->sh:path\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:or ( [ sh:class [ sh:or ( ff:School ff:VocationalTraining ) ] ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:participates ] [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasDisabilityType ; sh:property [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:reducesWorkProspectsPermanently ] ] [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isInTransitionalPeriod ] ) ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:or ( [ sh:class [ sh:or ( ff:School ff:VocationalTraining ) ] ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:participates ] [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasDisabilityType ; sh:property [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:reducesWorkProspectsPermanently ] ] [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isInTransitionalPeriod ] ) ]->sh:path\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:class ]\n\tFocus Node: [ sh:class [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ] ; sh:path ff:causeOfDeath ]\n\tValue Node: [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ]\n\tResult Path: sh:class\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:class ]\n\tFocus Node: [ sh:class [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ] ; sh:path ff:causeOfDeath ]\n\tValue Node: [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ]\n\tResult Path: sh:class\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:class ]\n\tFocus Node: [ sh:class [ sh:or ( ff:School ff:VocationalTraining ) ] ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:participates ]\n\tValue Node: [ sh:or ( ff:School ff:VocationalTraining ) ]\n\tResult Path: sh:class\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:class ]\n\tFocus Node: [ sh:class [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ] ; sh:path ff:causeOfDeath ]\n\tValue Node: [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ]\n\tResult Path: sh:class\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:class ]\n\tFocus Node: [ sh:class [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ] ; sh:path ff:causeOfDeath ]\n\tValue Node: [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ]\n\tResult Path: sh:class\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 8,
        "validation_results": [
            {
                "source_shape": "[ sh:node shsh:ShapeShape ; sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ]",
                "message": "Value does not conform to Shape shsh:ShapeShape. See details for more information."
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:or ( [ sh:property [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inversePath ff:hasChild ] ; sh:property [ sh:class [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ] ; sh:path ff:causeOfDeath ] ] ] [ sh:property [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:stepChildTo ; sh:property [ sh:class [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ] ; sh:path ff:causeOfDeath ] ] ] [ sh:property [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:fosterChildTo ; sh:property [ sh:class [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ] ; sh:path ff:causeOfDeath ] ] ] [ sh:property [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasPrimaryCareTaker ; sh:property [ sh:class [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ] ; sh:path ff:causeOfDeath ], [ sh:hasValue ff:User ; sh:path ff:sameHouseholdAs ] ] ] ) ]->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:or ( [ sh:class [ sh:or ( ff:School ff:VocationalTraining ) ] ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:participates ] [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasDisabilityType ; sh:property [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:reducesWorkProspectsPermanently ] ] [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isInTransitionalPeriod ] ) ]->sh:path"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:class ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:class ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:class ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:class ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:class ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "qwq-32b",
        "file": "baseline_qwq-32b_guv-rentenabfindung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/qwq-32b/output/parsed_output/baseline_qwq-32b_guv-rentenabfindung.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (1):\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:or ( [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:deceasedSpouse ] [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:deceasedCivilPartner ] ) ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:or ( [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:deceasedSpouse ] [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:deceasedCivilPartner ] ) ]->sh:path\n",
        "nof_validation_results": 1,
        "validation_results": [
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:or ( [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:deceasedSpouse ] [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:deceasedCivilPartner ] ) ]->sh:path"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "qwq-32b",
        "file": "baseline_qwq-32b_grundausbildung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/qwq-32b/output/parsed_output/baseline_qwq-32b_grundausbildung.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (1):\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:or ( [ sh:path ff:hasDisabilityType ; sh:qualifiedMinCount Literal(\"1\", datatype=xsd:integer) ; sh:qualifiedValueShape [ rdf:type sh:NodeShape ; sh:property [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:severeDisability ], [ sh:in ( ff:VisualImpairment ff:HearingImpairment ) ; sh:path rdf:type ] ] ] [ sh:path ff:atRiskOfDisabilityType ; sh:qualifiedMinCount Literal(\"1\", datatype=xsd:integer) ; sh:qualifiedValueShape [ rdf:type sh:NodeShape ; sh:property [ sh:in ( ff:VisualImpairment ff:HearingImpairment ) ; sh:path rdf:type ] ] ] ) ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:or ( [ sh:path ff:hasDisabilityType ; sh:qualifiedMinCount Literal(\"1\", datatype=xsd:integer) ; sh:qualifiedValueShape [ rdf:type sh:NodeShape ; sh:property [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:severeDisability ], [ sh:in ( ff:VisualImpairment ff:HearingImpairment ) ; sh:path rdf:type ] ] ] [ sh:path ff:atRiskOfDisabilityType ; sh:qualifiedMinCount Literal(\"1\", datatype=xsd:integer) ; sh:qualifiedValueShape [ rdf:type sh:NodeShape ; sh:property [ sh:in ( ff:VisualImpairment ff:HearingImpairment ) ; sh:path rdf:type ] ] ] ) ]->sh:path\n",
        "nof_validation_results": 1,
        "validation_results": [
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:or ( [ sh:path ff:hasDisabilityType ; sh:qualifiedMinCount Literal(\"1\", datatype=xsd:integer) ; sh:qualifiedValueShape [ rdf:type sh:NodeShape ; sh:property [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:severeDisability ], [ sh:in ( ff:VisualImpairment ff:HearingImpairment ) ; sh:path rdf:type ] ] ] [ sh:path ff:atRiskOfDisabilityType ; sh:qualifiedMinCount Literal(\"1\", datatype=xsd:integer) ; sh:qualifiedValueShape [ rdf:type sh:NodeShape ; sh:property [ sh:in ( ff:VisualImpairment ff:HearingImpairment ) ; sh:path rdf:type ] ] ] ) ]->sh:path"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "baseline_llama-3.1-sauerkrautlm-70b-instruct_guv-rentenabfindung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/baseline_llama-3.1-sauerkrautlm-70b-instruct_guv-rentenabfindung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "baseline_llama-3.1-sauerkrautlm-70b-instruct_ausbildungsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/baseline_llama-3.1-sauerkrautlm-70b-instruct_ausbildungsgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "baseline_llama-3.1-sauerkrautlm-70b-instruct_krankengeld-begleitperson.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/baseline_llama-3.1-sauerkrautlm-70b-instruct_krankengeld-begleitperson.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "baseline_llama-3.1-sauerkrautlm-70b-instruct_grundausbildung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/baseline_llama-3.1-sauerkrautlm-70b-instruct_grundausbildung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "baseline_llama-3.1-sauerkrautlm-70b-instruct_buergergeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/baseline_llama-3.1-sauerkrautlm-70b-instruct_buergergeld.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (3):\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Literal ; sh:path ff:hasEarningCapacity ]\n\tValue Node: Literal(\"true\" = True, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Literal ; sh:path ff:aboveSGBXII41AgeLimit ]\n\tValue Node: Literal(\"false\" = False, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Literal ; sh:path ff:canCoverBasicNeedsOfBenefitUnit ]\n\tValue Node: Literal(\"false\" = False, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 3,
        "validation_results": [
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "baseline_llama-3.1-sauerkrautlm-70b-instruct_berufsausbildungsbeihilfe.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/baseline_llama-3.1-sauerkrautlm-70b-instruct_berufsausbildungsbeihilfe.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "baseline_llama-3.1-sauerkrautlm-70b-instruct_guv-waisenrente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/baseline_llama-3.1-sauerkrautlm-70b-instruct_guv-waisenrente.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (3):\nConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inversePath ff:deceasedCivilPartner, ff:deceasedSpouse ] ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:node [ sh:or ( [ sh:instance ff:WorkAccident ] [ sh:instance ff:CommutingAccident ] [ sh:instance ff:OccupationalDisease ] ) ] ; sh:path ff:causeOfDeath ] ]\n\tValue Node: [ sh:inversePath ff:deceasedCivilPartner, ff:deceasedSpouse ]\n\tResult Path: sh:path\n\tMessage: Node [ sh:inversePath ff:deceasedCivilPartner, ff:deceasedSpouse ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inversePath ff:deceasedCivilPartner, ff:deceasedSpouse ] ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:node [ sh:or ( [ sh:instance ff:WorkAccident ] [ sh:instance ff:CommutingAccident ] [ sh:instance ff:OccupationalDisease ] ) ] ; sh:path ff:causeOfDeath ] ]\n\tValue Node: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inversePath ff:deceasedCivilPartner, ff:deceasedSpouse ] ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:node [ sh:or ( [ sh:instance ff:WorkAccident ] [ sh:instance ff:CommutingAccident ] [ sh:instance ff:OccupationalDisease ] ) ] ; sh:path ff:causeOfDeath ] ]\n\tMessage: Node [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inversePath ff:deceasedCivilPartner, ff:deceasedSpouse ] ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:node [ sh:or ( [ sh:instance ff:WorkAccident ] [ sh:instance ff:CommutingAccident ] [ sh:instance ff:OccupationalDisease ] ) ] ; sh:path ff:causeOfDeath ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:lessThanOrEquals ]\n\tFocus Node: [ sh:lessThanOrEquals Literal(\"27\", datatype=xsd:integer) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:node [ sh:or ( [ sh:property [ sh:datatype xsd:boolean ; sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:isInTransitionalPeriod ], [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:participates ] ] [ sh:property [ sh:datatype xsd:boolean ; sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasDisability ], [ sh:datatype xsd:boolean ; sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:reducesWorkProspectsPermanently ], [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasDisabilityType ] ] ) ] ; sh:path ff:hasAge ]\n\tValue Node: Literal(\"27\", datatype=xsd:integer)\n\tResult Path: sh:lessThanOrEquals\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 3,
        "validation_results": [
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Node [ sh:inversePath ff:deceasedCivilPartner, ff:deceasedSpouse ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inversePath ff:deceasedCivilPartner, ff:deceasedSpouse ] ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:node [ sh:or ( [ sh:instance ff:WorkAccident ] [ sh:instance ff:CommutingAccident ] [ sh:instance ff:OccupationalDisease ] ) ] ; sh:path ff:causeOfDeath ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:lessThanOrEquals ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "baseline_llama-3.1-sauerkrautlm-70b-instruct_guv-uebergangsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/baseline_llama-3.1-sauerkrautlm-70b-instruct_guv-uebergangsgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "baseline_llama-3.1-sauerkrautlm-70b-instruct_guv-rente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/baseline_llama-3.1-sauerkrautlm-70b-instruct_guv-rente.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "baseline_llama-3.1-sauerkrautlm-70b-instruct_arbeitslosengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/baseline_llama-3.1-sauerkrautlm-70b-instruct_arbeitslosengeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "baseline_llama-3.1-sauerkrautlm-70b-instruct_guv-verletztengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/baseline_llama-3.1-sauerkrautlm-70b-instruct_guv-verletztengeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "baseline_llama-3.1-sauerkrautlm-70b-instruct_kinderzuschlag.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/baseline_llama-3.1-sauerkrautlm-70b-instruct_kinderzuschlag.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (2):\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:canCoverBasicNeedsOfBenefitUnit ]\n\tValue Node: Literal(\"true\" = True, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:hasConsiderableAssets ]\n\tValue Node: Literal(\"false\" = False, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 2,
        "validation_results": [
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "baseline_llama-3.1-sauerkrautlm-70b-instruct_aktivierung-und-eingliederung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/baseline_llama-3.1-sauerkrautlm-70b-instruct_aktivierung-und-eingliederung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "baseline_llama-3.1-sauerkrautlm-70b-instruct_insolvenzgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/baseline_llama-3.1-sauerkrautlm-70b-instruct_insolvenzgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "baseline_llama-3.1-sauerkrautlm-70b-instruct_kindergeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/baseline_llama-3.1-sauerkrautlm-70b-instruct_kindergeld.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (1):\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:datatype xsd:string ; sh:equals Literal(\"ff:UnlimitedTaxLiability\") ; sh:nodeKind sh:Literal ]\n\tValue Node: Literal(\"ff:UnlimitedTaxLiability\")\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 1,
        "validation_results": [
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "llama-3.3-70b-instruct",
        "file": "baseline_llama-3.3-70b-instruct_krankengeld-begleitperson.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/llama-3.3-70b-instruct/output/parsed_output/baseline_llama-3.3-70b-instruct_krankengeld-begleitperson.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "llama-3.3-70b-instruct",
        "file": "baseline_llama-3.3-70b-instruct_einstiegsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/llama-3.3-70b-instruct/output/parsed_output/baseline_llama-3.3-70b-instruct_einstiegsgeld.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (3):\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:positiveJobcenterEvaluation ]\n\tValue Node: Literal(\"true\" = True, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:economicViability ]\n\tValue Node: Literal(\"true\" = True, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:personalSuitability ]\n\tValue Node: Literal(\"true\" = True, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 3,
        "validation_results": [
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "llama-3.3-70b-instruct",
        "file": "baseline_llama-3.3-70b-instruct_buergergeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/llama-3.3-70b-instruct/output/parsed_output/baseline_llama-3.3-70b-instruct_buergergeld.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (10):\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:object ff:B100019_LB_576842 ; sh:predicate ff:hasNoPriorityClaimsOver ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:object ff:B100019_LB_576842 ; sh:predicate ff:hasNoPriorityClaimsOver ]->sh:path\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:datatype xsd:int ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:maxExclusive Literal(\"67\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:minInclusive Literal(\"15\", datatype=xsd:integer) ; sh:predicate ff:hasAge ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:datatype xsd:int ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:maxExclusive Literal(\"67\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:minInclusive Literal(\"15\", datatype=xsd:integer) ; sh:predicate ff:hasAge ]->sh:path\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:object ff:Germany ; sh:predicate ff:countryOfResidence ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:object ff:Germany ; sh:predicate ff:countryOfResidence ]->sh:path\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:hasValue ff:FullEarningCapacity ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasEarningCapacity ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:datatype xsd:boolean ; sh:hasValue ff:FullEarningCapacity ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasEarningCapacity ]->sh:path\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:canCoverPersonalBasicNeeds ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:datatype xsd:boolean ; sh:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:canCoverPersonalBasicNeeds ]->sh:path\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:object ff:B100019_LB_576842 ; sh:predicate ff:hasNoPriorityClaimsOver ]\n\tValue Node: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:object ff:B100019_LB_576842 ; sh:predicate ff:hasNoPriorityClaimsOver ]\n\tMessage: Node [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:object ff:B100019_LB_576842 ; sh:predicate ff:hasNoPriorityClaimsOver ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:datatype xsd:int ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:maxExclusive Literal(\"67\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:minInclusive Literal(\"15\", datatype=xsd:integer) ; sh:predicate ff:hasAge ]\n\tValue Node: [ sh:datatype xsd:int ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:maxExclusive Literal(\"67\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:minInclusive Literal(\"15\", datatype=xsd:integer) ; sh:predicate ff:hasAge ]\n\tMessage: Node [ sh:datatype xsd:int ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:maxExclusive Literal(\"67\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:minInclusive Literal(\"15\", datatype=xsd:integer) ; sh:predicate ff:hasAge ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:object ff:Germany ; sh:predicate ff:countryOfResidence ]\n\tValue Node: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:object ff:Germany ; sh:predicate ff:countryOfResidence ]\n\tMessage: Node [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:object ff:Germany ; sh:predicate ff:countryOfResidence ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:hasValue ff:FullEarningCapacity ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasEarningCapacity ]\n\tValue Node: [ sh:datatype xsd:boolean ; sh:hasValue ff:FullEarningCapacity ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasEarningCapacity ]\n\tMessage: Node [ sh:datatype xsd:boolean ; sh:hasValue ff:FullEarningCapacity ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasEarningCapacity ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:canCoverPersonalBasicNeeds ]\n\tValue Node: [ sh:datatype xsd:boolean ; sh:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:canCoverPersonalBasicNeeds ]\n\tMessage: Node [ sh:datatype xsd:boolean ; sh:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:canCoverPersonalBasicNeeds ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\n",
        "nof_validation_results": 10,
        "validation_results": [
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:object ff:B100019_LB_576842 ; sh:predicate ff:hasNoPriorityClaimsOver ]->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:datatype xsd:int ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:maxExclusive Literal(\"67\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:minInclusive Literal(\"15\", datatype=xsd:integer) ; sh:predicate ff:hasAge ]->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:object ff:Germany ; sh:predicate ff:countryOfResidence ]->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:datatype xsd:boolean ; sh:hasValue ff:FullEarningCapacity ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasEarningCapacity ]->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:datatype xsd:boolean ; sh:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:canCoverPersonalBasicNeeds ]->sh:path"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:object ff:B100019_LB_576842 ; sh:predicate ff:hasNoPriorityClaimsOver ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:datatype xsd:int ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:maxExclusive Literal(\"67\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:minInclusive Literal(\"15\", datatype=xsd:integer) ; sh:predicate ff:hasAge ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:object ff:Germany ; sh:predicate ff:countryOfResidence ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:datatype xsd:boolean ; sh:hasValue ff:FullEarningCapacity ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasEarningCapacity ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:datatype xsd:boolean ; sh:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:canCoverPersonalBasicNeeds ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "llama-3.3-70b-instruct",
        "file": "baseline_llama-3.3-70b-instruct_guv-kinderverletztengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/llama-3.3-70b-instruct/output/parsed_output/baseline_llama-3.3-70b-instruct_guv-kinderverletztengeld.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (11):\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:datatype xsd:int ; sh:maxExclusive Literal(\"12\", datatype=xsd:integer) ; sh:minInclusive Literal(\"0\", datatype=xsd:integer) ; sh:predicate ff:hasAge ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:datatype xsd:int ; sh:maxExclusive Literal(\"12\", datatype=xsd:integer) ; sh:minInclusive Literal(\"0\", datatype=xsd:integer) ; sh:predicate ff:hasAge ]->sh:path\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:class ff:CareNeed ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:needsCare ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:class ff:CareNeed ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:needsCare ]->sh:path\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:class ff:Person ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasChild ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:class ff:Person ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasChild ]->sh:path\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:class ff:SocialBenefit ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:receivesBenefit ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:class ff:SocialBenefit ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:receivesBenefit ]->sh:path\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:class ff:Person ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:sameHouseholdAs ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:class ff:Person ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:sameHouseholdAs ]->sh:path\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:class ff:EmploymentStatus ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasEmploymentStatus ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:class ff:EmploymentStatus ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasEmploymentStatus ]->sh:path\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:class ff:CareNeed ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:needsCare ]\n\tValue Node: [ sh:class ff:CareNeed ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:needsCare ]\n\tMessage: Node [ sh:class ff:CareNeed ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:needsCare ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:class ff:SocialBenefit ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:receivesBenefit ]\n\tValue Node: [ sh:class ff:SocialBenefit ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:receivesBenefit ]\n\tMessage: Node [ sh:class ff:SocialBenefit ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:receivesBenefit ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:class ff:EmploymentStatus ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasEmploymentStatus ]\n\tValue Node: [ sh:class ff:EmploymentStatus ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasEmploymentStatus ]\n\tMessage: Node [ sh:class ff:EmploymentStatus ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasEmploymentStatus ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:class ff:Person ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasChild ]\n\tValue Node: [ sh:class ff:Person ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasChild ]\n\tMessage: Node [ sh:class ff:Person ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasChild ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:class ff:Person ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:sameHouseholdAs ]\n\tValue Node: [ sh:class ff:Person ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:sameHouseholdAs ]\n\tMessage: Node [ sh:class ff:Person ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:sameHouseholdAs ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\n",
        "nof_validation_results": 11,
        "validation_results": [
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:datatype xsd:int ; sh:maxExclusive Literal(\"12\", datatype=xsd:integer) ; sh:minInclusive Literal(\"0\", datatype=xsd:integer) ; sh:predicate ff:hasAge ]->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:class ff:CareNeed ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:needsCare ]->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:class ff:Person ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasChild ]->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:class ff:SocialBenefit ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:receivesBenefit ]->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:class ff:Person ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:sameHouseholdAs ]->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:class ff:EmploymentStatus ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasEmploymentStatus ]->sh:path"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:class ff:CareNeed ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:needsCare ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:class ff:SocialBenefit ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:receivesBenefit ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:class ff:EmploymentStatus ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasEmploymentStatus ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:class ff:Person ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasChild ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:class ff:Person ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:sameHouseholdAs ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "llama-3.3-70b-instruct",
        "file": "baseline_llama-3.3-70b-instruct_grundausbildung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/llama-3.3-70b-instruct/output/parsed_output/baseline_llama-3.3-70b-instruct_grundausbildung.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (7):\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:hasValue ff:FederalEmploymentAgency ; sh:predicate ff:hasRehabilitationProvider ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:hasValue ff:FederalEmploymentAgency ; sh:predicate ff:hasRehabilitationProvider ]->sh:path\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:class ff:HearingImpairment, ff:VisualImpairment ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasDisabilityType ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:class ff:HearingImpairment, ff:VisualImpairment ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasDisabilityType ]->sh:path\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:class ff:Disability ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:workforceIntegrationProblemBecause ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:class ff:Disability ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:workforceIntegrationProblemBecause ]->sh:path\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:minCount Literal(\"0\", datatype=xsd:integer) ; sh:predicate ff:receivesBenefit ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:minCount Literal(\"0\", datatype=xsd:integer) ; sh:predicate ff:receivesBenefit ]->sh:path\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:class ff:HearingImpairment, ff:VisualImpairment ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasDisabilityType ]\n\tValue Node: [ sh:class ff:HearingImpairment, ff:VisualImpairment ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasDisabilityType ]\n\tMessage: Node [ sh:class ff:HearingImpairment, ff:VisualImpairment ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasDisabilityType ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:class ff:Disability ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:workforceIntegrationProblemBecause ]\n\tValue Node: [ sh:class ff:Disability ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:workforceIntegrationProblemBecause ]\n\tMessage: Node [ sh:class ff:Disability ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:workforceIntegrationProblemBecause ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:minCount Literal(\"0\", datatype=xsd:integer) ; sh:predicate ff:receivesBenefit ]\n\tValue Node: [ sh:minCount Literal(\"0\", datatype=xsd:integer) ; sh:predicate ff:receivesBenefit ]\n\tMessage: Node [ sh:minCount Literal(\"0\", datatype=xsd:integer) ; sh:predicate ff:receivesBenefit ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\n",
        "nof_validation_results": 7,
        "validation_results": [
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:hasValue ff:FederalEmploymentAgency ; sh:predicate ff:hasRehabilitationProvider ]->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:class ff:HearingImpairment, ff:VisualImpairment ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasDisabilityType ]->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:class ff:Disability ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:workforceIntegrationProblemBecause ]->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:minCount Literal(\"0\", datatype=xsd:integer) ; sh:predicate ff:receivesBenefit ]->sh:path"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:class ff:HearingImpairment, ff:VisualImpairment ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasDisabilityType ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:class ff:Disability ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:workforceIntegrationProblemBecause ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:minCount Literal(\"0\", datatype=xsd:integer) ; sh:predicate ff:receivesBenefit ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "llama-3.3-70b-instruct",
        "file": "baseline_llama-3.3-70b-instruct_grundsicherung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/llama-3.3-70b-instruct/output/parsed_output/baseline_llama-3.3-70b-instruct_grundsicherung.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (12):\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:in ( ff:Unemployed ff:RegisteredUnemployed ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasEmploymentStatus ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:in ( ff:Unemployed ff:RegisteredUnemployed ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasEmploymentStatus ]->sh:path\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:canCoverPersonalBasicNeeds ; sh:value Literal(\"false\" = False, datatype=xsd:boolean) ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:datatype xsd:boolean ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:canCoverPersonalBasicNeeds ; sh:value Literal(\"false\" = False, datatype=xsd:boolean) ]->sh:path\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:in ( ff:AsylumSeekerBenefits ff:SocialAssistance ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasNoPriorityClaimsOver ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:in ( ff:AsylumSeekerBenefits ff:SocialAssistance ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasNoPriorityClaimsOver ]->sh:path\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:datatype xsd:int ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:minInclusive Literal(\"65\", datatype=xsd:integer) ; sh:predicate ff:hasAge ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:datatype xsd:int ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:minInclusive Literal(\"65\", datatype=xsd:integer) ; sh:predicate ff:hasAge ]->sh:path\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasDisability ; sh:value Literal(\"true\" = True, datatype=xsd:boolean) ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:datatype xsd:boolean ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasDisability ; sh:value Literal(\"true\" = True, datatype=xsd:boolean) ]->sh:path\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:in ( ff:EntryProcedureAndVocationalTrainingArea ff:VocationalTraining ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:participates ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:in ( ff:EntryProcedureAndVocationalTrainingArea ff:VocationalTraining ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:participates ]->sh:path\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:in ( ff:Unemployed ff:RegisteredUnemployed ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasEmploymentStatus ]\n\tValue Node: [ sh:in ( ff:Unemployed ff:RegisteredUnemployed ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasEmploymentStatus ]\n\tMessage: Node [ sh:in ( ff:Unemployed ff:RegisteredUnemployed ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasEmploymentStatus ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:in ( ff:AsylumSeekerBenefits ff:SocialAssistance ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasNoPriorityClaimsOver ]\n\tValue Node: [ sh:in ( ff:AsylumSeekerBenefits ff:SocialAssistance ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasNoPriorityClaimsOver ]\n\tMessage: Node [ sh:in ( ff:AsylumSeekerBenefits ff:SocialAssistance ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasNoPriorityClaimsOver ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasDisability ; sh:value Literal(\"true\" = True, datatype=xsd:boolean) ]\n\tValue Node: [ sh:datatype xsd:boolean ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasDisability ; sh:value Literal(\"true\" = True, datatype=xsd:boolean) ]\n\tMessage: Node [ sh:datatype xsd:boolean ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasDisability ; sh:value Literal(\"true\" = True, datatype=xsd:boolean) ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:in ( ff:EntryProcedureAndVocationalTrainingArea ff:VocationalTraining ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:participates ]\n\tValue Node: [ sh:in ( ff:EntryProcedureAndVocationalTrainingArea ff:VocationalTraining ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:participates ]\n\tMessage: Node [ sh:in ( ff:EntryProcedureAndVocationalTrainingArea ff:VocationalTraining ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:participates ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:canCoverPersonalBasicNeeds ; sh:value Literal(\"false\" = False, datatype=xsd:boolean) ]\n\tValue Node: [ sh:datatype xsd:boolean ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:canCoverPersonalBasicNeeds ; sh:value Literal(\"false\" = False, datatype=xsd:boolean) ]\n\tMessage: Node [ sh:datatype xsd:boolean ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:canCoverPersonalBasicNeeds ; sh:value Literal(\"false\" = False, datatype=xsd:boolean) ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:datatype xsd:int ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:minInclusive Literal(\"65\", datatype=xsd:integer) ; sh:predicate ff:hasAge ]\n\tValue Node: [ sh:datatype xsd:int ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:minInclusive Literal(\"65\", datatype=xsd:integer) ; sh:predicate ff:hasAge ]\n\tMessage: Node [ sh:datatype xsd:int ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:minInclusive Literal(\"65\", datatype=xsd:integer) ; sh:predicate ff:hasAge ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\n",
        "nof_validation_results": 12,
        "validation_results": [
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:in ( ff:Unemployed ff:RegisteredUnemployed ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasEmploymentStatus ]->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:datatype xsd:boolean ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:canCoverPersonalBasicNeeds ; sh:value Literal(\"false\" = False, datatype=xsd:boolean) ]->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:in ( ff:AsylumSeekerBenefits ff:SocialAssistance ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasNoPriorityClaimsOver ]->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:datatype xsd:int ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:minInclusive Literal(\"65\", datatype=xsd:integer) ; sh:predicate ff:hasAge ]->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:datatype xsd:boolean ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasDisability ; sh:value Literal(\"true\" = True, datatype=xsd:boolean) ]->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:in ( ff:EntryProcedureAndVocationalTrainingArea ff:VocationalTraining ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:participates ]->sh:path"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:in ( ff:Unemployed ff:RegisteredUnemployed ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasEmploymentStatus ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:in ( ff:AsylumSeekerBenefits ff:SocialAssistance ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasNoPriorityClaimsOver ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:datatype xsd:boolean ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasDisability ; sh:value Literal(\"true\" = True, datatype=xsd:boolean) ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:in ( ff:EntryProcedureAndVocationalTrainingArea ff:VocationalTraining ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:participates ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:datatype xsd:boolean ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:canCoverPersonalBasicNeeds ; sh:value Literal(\"false\" = False, datatype=xsd:boolean) ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:datatype xsd:int ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:minInclusive Literal(\"65\", datatype=xsd:integer) ; sh:predicate ff:hasAge ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "llama-3.3-70b-instruct",
        "file": "baseline_llama-3.3-70b-instruct_guv-uebergangsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/llama-3.3-70b-instruct/output/parsed_output/baseline_llama-3.3-70b-instruct_guv-uebergangsgeld.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (4):\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:class ff:CommutingAccident, ff:OccupationalDisease, ff:WorkAccident ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasEvent ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:class ff:CommutingAccident, ff:OccupationalDisease, ff:WorkAccident ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasEvent ]->sh:path\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:class ff:EntryProcedureAndVocationalTrainingArea ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:participates ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:class ff:EntryProcedureAndVocationalTrainingArea ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:participates ]->sh:path\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:class ff:CommutingAccident, ff:OccupationalDisease, ff:WorkAccident ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasEvent ]\n\tValue Node: [ sh:class ff:CommutingAccident, ff:OccupationalDisease, ff:WorkAccident ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasEvent ]\n\tMessage: Node [ sh:class ff:CommutingAccident, ff:OccupationalDisease, ff:WorkAccident ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasEvent ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:class ff:EntryProcedureAndVocationalTrainingArea ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:participates ]\n\tValue Node: [ sh:class ff:EntryProcedureAndVocationalTrainingArea ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:participates ]\n\tMessage: Node [ sh:class ff:EntryProcedureAndVocationalTrainingArea ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:participates ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\n",
        "nof_validation_results": 4,
        "validation_results": [
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:class ff:CommutingAccident, ff:OccupationalDisease, ff:WorkAccident ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasEvent ]->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:class ff:EntryProcedureAndVocationalTrainingArea ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:participates ]->sh:path"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:class ff:CommutingAccident, ff:OccupationalDisease, ff:WorkAccident ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasEvent ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:class ff:EntryProcedureAndVocationalTrainingArea ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:participates ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "llama-3.3-70b-instruct",
        "file": "baseline_llama-3.3-70b-instruct_guv-waisenrente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/llama-3.3-70b-instruct/output/parsed_output/baseline_llama-3.3-70b-instruct_guv-waisenrente.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (8):\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:class ff:WorkAccident ; sh:message Literal(\"The person must have died due to a work accident or occupational disease.\") ; sh:predicate ff:hasEvent ; sh:severity sh:Warning ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:class ff:WorkAccident ; sh:message Literal(\"The person must have died due to a work accident or occupational disease.\") ; sh:predicate ff:hasEvent ; sh:severity sh:Warning ]->sh:path\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:datatype xsd:int ; sh:maxExclusive Literal(\"27\", datatype=xsd:integer) ; sh:message Literal(\"The applicant must be between 18 and 27 years old.\") ; sh:minInclusive Literal(\"18\", datatype=xsd:integer) ; sh:predicate ff:hasAge ; sh:severity sh:Warning ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:datatype xsd:int ; sh:maxExclusive Literal(\"27\", datatype=xsd:integer) ; sh:message Literal(\"The applicant must be between 18 and 27 years old.\") ; sh:minInclusive Literal(\"18\", datatype=xsd:integer) ; sh:predicate ff:hasAge ; sh:severity sh:Warning ]->sh:path\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:class ff:Person ; sh:message Literal(\"The applicant must be the natural child of the deceased person.\") ; sh:predicate ff:naturalChildTo ; sh:severity sh:Warning ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:class ff:Person ; sh:message Literal(\"The applicant must be the natural child of the deceased person.\") ; sh:predicate ff:naturalChildTo ; sh:severity sh:Warning ]->sh:path\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:class ff:Training ; sh:message Literal(\"The applicant must be in school or vocational training.\") ; sh:predicate ff:participates ; sh:severity sh:Warning ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:class ff:Training ; sh:message Literal(\"The applicant must be in school or vocational training.\") ; sh:predicate ff:participates ; sh:severity sh:Warning ]->sh:path\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:message Literal(\"The applicant must be in a transitional period of up to 4 months.\") ; sh:predicate ff:isInTransitionalPeriod ; sh:severity sh:Warning ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:datatype xsd:boolean ; sh:message Literal(\"The applicant must be in a transitional period of up to 4 months.\") ; sh:predicate ff:isInTransitionalPeriod ; sh:severity sh:Warning ]->sh:path\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:class ff:Person ; sh:message Literal(\"The applicant must be the stepchild of the deceased person and lived in the same household.\") ; sh:predicate ff:stepChildTo ; sh:severity sh:Warning ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:class ff:Person ; sh:message Literal(\"The applicant must be the stepchild of the deceased person and lived in the same household.\") ; sh:predicate ff:stepChildTo ; sh:severity sh:Warning ]->sh:path\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:message Literal(\"The applicant must have a disability that prevents them from supporting themselves.\") ; sh:predicate ff:hasDisability ; sh:severity sh:Warning ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:datatype xsd:boolean ; sh:message Literal(\"The applicant must have a disability that prevents them from supporting themselves.\") ; sh:predicate ff:hasDisability ; sh:severity sh:Warning ]->sh:path\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:class ff:Person ; sh:message Literal(\"The applicant must have lived in the same household as the deceased person.\") ; sh:predicate ff:sameHouseholdAs ; sh:severity sh:Warning ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:class ff:Person ; sh:message Literal(\"The applicant must have lived in the same household as the deceased person.\") ; sh:predicate ff:sameHouseholdAs ; sh:severity sh:Warning ]->sh:path\n",
        "nof_validation_results": 8,
        "validation_results": [
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:class ff:WorkAccident ; sh:message Literal(\"The person must have died due to a work accident or occupational disease.\") ; sh:predicate ff:hasEvent ; sh:severity sh:Warning ]->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:datatype xsd:int ; sh:maxExclusive Literal(\"27\", datatype=xsd:integer) ; sh:message Literal(\"The applicant must be between 18 and 27 years old.\") ; sh:minInclusive Literal(\"18\", datatype=xsd:integer) ; sh:predicate ff:hasAge ; sh:severity sh:Warning ]->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:class ff:Person ; sh:message Literal(\"The applicant must be the natural child of the deceased person.\") ; sh:predicate ff:naturalChildTo ; sh:severity sh:Warning ]->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:class ff:Training ; sh:message Literal(\"The applicant must be in school or vocational training.\") ; sh:predicate ff:participates ; sh:severity sh:Warning ]->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:datatype xsd:boolean ; sh:message Literal(\"The applicant must be in a transitional period of up to 4 months.\") ; sh:predicate ff:isInTransitionalPeriod ; sh:severity sh:Warning ]->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:class ff:Person ; sh:message Literal(\"The applicant must be the stepchild of the deceased person and lived in the same household.\") ; sh:predicate ff:stepChildTo ; sh:severity sh:Warning ]->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:datatype xsd:boolean ; sh:message Literal(\"The applicant must have a disability that prevents them from supporting themselves.\") ; sh:predicate ff:hasDisability ; sh:severity sh:Warning ]->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:class ff:Person ; sh:message Literal(\"The applicant must have lived in the same household as the deceased person.\") ; sh:predicate ff:sameHouseholdAs ; sh:severity sh:Warning ]->sh:path"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "llama-3.3-70b-instruct",
        "file": "baseline_llama-3.3-70b-instruct_kindergeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/llama-3.3-70b-instruct/output/parsed_output/baseline_llama-3.3-70b-instruct_kindergeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "llama-3.3-70b-instruct",
        "file": "baseline_llama-3.3-70b-instruct_arbeitslosengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/llama-3.3-70b-instruct/output/parsed_output/baseline_llama-3.3-70b-instruct_arbeitslosengeld.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (13):\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:compulsoryInsuranceFor12In30 ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:datatype xsd:boolean ; sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:compulsoryInsuranceFor12In30 ]->sh:path\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:datatype xsd:decimal ; sh:lessThan Literal(\"15\", datatype=xsd:integer) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:workHoursPerWeek ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:datatype xsd:decimal ; sh:lessThan Literal(\"15\", datatype=xsd:integer) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:workHoursPerWeek ]->sh:path\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:availableForPlacement ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:datatype xsd:boolean ; sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:availableForPlacement ]->sh:path\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:class ff:Unemployed ; sh:predicate ff:hasEmploymentStatus ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:class ff:Unemployed ; sh:predicate ff:hasEmploymentStatus ]->sh:path\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:inEmployment ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:datatype xsd:boolean ; sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:inEmployment ]->sh:path\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:availableForPlacement ]\n\tValue Node: [ sh:datatype xsd:boolean ; sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:availableForPlacement ]\n\tMessage: Node [ sh:datatype xsd:boolean ; sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:availableForPlacement ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:inEmployment ]\n\tValue Node: [ sh:datatype xsd:boolean ; sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:inEmployment ]\n\tMessage: Node [ sh:datatype xsd:boolean ; sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:inEmployment ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:compulsoryInsuranceFor12In30 ]\n\tValue Node: [ sh:datatype xsd:boolean ; sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:compulsoryInsuranceFor12In30 ]\n\tMessage: Node [ sh:datatype xsd:boolean ; sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:compulsoryInsuranceFor12In30 ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:datatype xsd:decimal ; sh:lessThan Literal(\"15\", datatype=xsd:integer) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:workHoursPerWeek ]\n\tValue Node: [ sh:datatype xsd:decimal ; sh:lessThan Literal(\"15\", datatype=xsd:integer) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:workHoursPerWeek ]\n\tMessage: Node [ sh:datatype xsd:decimal ; sh:lessThan Literal(\"15\", datatype=xsd:integer) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:workHoursPerWeek ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:availableForPlacement ]\n\tValue Node: Literal(\"true\" = True, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:inEmployment ]\n\tValue Node: Literal(\"false\" = False, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:compulsoryInsuranceFor12In30 ]\n\tValue Node: Literal(\"true\" = True, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:lessThan ]\n\tFocus Node: [ sh:datatype xsd:decimal ; sh:lessThan Literal(\"15\", datatype=xsd:integer) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:workHoursPerWeek ]\n\tValue Node: Literal(\"15\", datatype=xsd:integer)\n\tResult Path: sh:lessThan\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 13,
        "validation_results": [
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:datatype xsd:boolean ; sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:compulsoryInsuranceFor12In30 ]->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:datatype xsd:decimal ; sh:lessThan Literal(\"15\", datatype=xsd:integer) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:workHoursPerWeek ]->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:datatype xsd:boolean ; sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:availableForPlacement ]->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:class ff:Unemployed ; sh:predicate ff:hasEmploymentStatus ]->sh:path"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:datatype xsd:boolean ; sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:inEmployment ]->sh:path"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:datatype xsd:boolean ; sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:availableForPlacement ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:datatype xsd:boolean ; sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:inEmployment ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:datatype xsd:boolean ; sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:compulsoryInsuranceFor12In30 ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:datatype xsd:decimal ; sh:lessThan Literal(\"15\", datatype=xsd:integer) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:workHoursPerWeek ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:lessThan ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "llama-3.3-70b-instruct",
        "file": "baseline_llama-3.3-70b-instruct_bildung-und-teilhabe.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/llama-3.3-70b-instruct/output/parsed_output/baseline_llama-3.3-70b-instruct_bildung-und-teilhabe.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (3):\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ListShape ; sh:path sh:or ]\n\tFocus Node: [ sh:hasValue ff:SocialAssistance ; sh:or [ sh:hasValue ff:AsylSeekerBenefits ; sh:path ff:receivesBenefit ] ; sh:path ff:receivesBenefit ]\n\tValue Node: [ sh:hasValue ff:AsylSeekerBenefits ; sh:path ff:receivesBenefit ]\n\tResult Path: sh:or\n\tMessage: Value does not conform to Shape shsh:ListShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in HasValueConstraintComponent (http://www.w3.org/ns/shacl#HasValueConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:hasValue ff:AsylSeekerBenefits ; sh:path ff:receivesBenefit ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Node [ sh:hasValue ff:AsylSeekerBenefits ; sh:path ff:receivesBenefit ]->[ sh:zeroOrMorePath rdf:rest ] does not contain a value in the set: ['rdf:nil']\n\t\tConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:hasValue ff:AsylSeekerBenefits ; sh:path ff:receivesBenefit ]\n\t\t\tValue Node: [ sh:hasValue ff:AsylSeekerBenefits ; sh:path ff:receivesBenefit ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Value does not conform to Shape shsh:ListNodeShape. See details for more information.\n\t\t\tDetails:\n\t\t\t\tConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\tSource Shape: shsh:ListNodeShape\n\t\t\t\t\tFocus Node: [ sh:hasValue ff:AsylSeekerBenefits ; sh:path ff:receivesBenefit ]\n\t\t\t\t\tValue Node: [ sh:hasValue ff:AsylSeekerBenefits ; sh:path ff:receivesBenefit ]\n\t\t\t\t\tMessage: Node [ sh:hasValue ff:AsylSeekerBenefits ; sh:path ff:receivesBenefit ] must conform to one or more shapes in [ sh:hasValue rdf:nil ; sh:property [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:rest ] ] , [ sh:not [ sh:hasValue rdf:nil ] ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:rest ] ]\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ListShape ; sh:path sh:or ]\n\tFocus Node: [ sh:hasValue ff:L100040_LB_8665924 ; sh:or [ sh:hasValue ff:SocialAssistance ; sh:or [ sh:hasValue ff:AsylSeekerBenefits ; sh:path ff:receivesBenefit ] ; sh:path ff:receivesBenefit ] ; sh:path ff:receivesBenefit ]\n\tValue Node: [ sh:hasValue ff:SocialAssistance ; sh:or [ sh:hasValue ff:AsylSeekerBenefits ; sh:path ff:receivesBenefit ] ; sh:path ff:receivesBenefit ]\n\tResult Path: sh:or\n\tMessage: Value does not conform to Shape shsh:ListShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in HasValueConstraintComponent (http://www.w3.org/ns/shacl#HasValueConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:hasValue ff:SocialAssistance ; sh:or [ sh:hasValue ff:AsylSeekerBenefits ; sh:path ff:receivesBenefit ] ; sh:path ff:receivesBenefit ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Node [ sh:hasValue ff:SocialAssistance ; sh:or [ sh:hasValue ff:AsylSeekerBenefits ; sh:path ff:receivesBenefit ] ; sh:path ff:receivesBenefit ]->[ sh:zeroOrMorePath rdf:rest ] does not contain a value in the set: ['rdf:nil']\n\t\tConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:hasValue ff:SocialAssistance ; sh:or [ sh:hasValue ff:AsylSeekerBenefits ; sh:path ff:receivesBenefit ] ; sh:path ff:receivesBenefit ]\n\t\t\tValue Node: [ sh:hasValue ff:SocialAssistance ; sh:or [ sh:hasValue ff:AsylSeekerBenefits ; sh:path ff:receivesBenefit ] ; sh:path ff:receivesBenefit ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Value does not conform to Shape shsh:ListNodeShape. See details for more information.\n\t\t\tDetails:\n\t\t\t\tConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\tSource Shape: shsh:ListNodeShape\n\t\t\t\t\tFocus Node: [ sh:hasValue ff:SocialAssistance ; sh:or [ sh:hasValue ff:AsylSeekerBenefits ; sh:path ff:receivesBenefit ] ; sh:path ff:receivesBenefit ]\n\t\t\t\t\tValue Node: [ sh:hasValue ff:SocialAssistance ; sh:or [ sh:hasValue ff:AsylSeekerBenefits ; sh:path ff:receivesBenefit ] ; sh:path ff:receivesBenefit ]\n\t\t\t\t\tMessage: Node [ sh:hasValue ff:SocialAssistance ; sh:or [ sh:hasValue ff:AsylSeekerBenefits ; sh:path ff:receivesBenefit ] ; sh:path ff:receivesBenefit ] must conform to one or more shapes in [ sh:hasValue rdf:nil ; sh:property [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:rest ] ] , [ sh:not [ sh:hasValue rdf:nil ] ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:rest ] ]\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ListShape ; sh:path sh:or ]\n\tFocus Node: [ sh:hasValue ff:B100019_LB_106311931 ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or [ sh:hasValue ff:L100040_LB_8665924 ; sh:or [ sh:hasValue ff:SocialAssistance ; sh:or [ sh:hasValue ff:AsylSeekerBenefits ; sh:path ff:receivesBenefit ] ; sh:path ff:receivesBenefit ] ; sh:path ff:receivesBenefit ] ; sh:path ff:receivesBenefit ]\n\tValue Node: [ sh:hasValue ff:L100040_LB_8665924 ; sh:or [ sh:hasValue ff:SocialAssistance ; sh:or [ sh:hasValue ff:AsylSeekerBenefits ; sh:path ff:receivesBenefit ] ; sh:path ff:receivesBenefit ] ; sh:path ff:receivesBenefit ]\n\tResult Path: sh:or\n\tMessage: Value does not conform to Shape shsh:ListShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in HasValueConstraintComponent (http://www.w3.org/ns/shacl#HasValueConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:hasValue ff:L100040_LB_8665924 ; sh:or [ sh:hasValue ff:SocialAssistance ; sh:or [ sh:hasValue ff:AsylSeekerBenefits ; sh:path ff:receivesBenefit ] ; sh:path ff:receivesBenefit ] ; sh:path ff:receivesBenefit ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Node [ sh:hasValue ff:L100040_LB_8665924 ; sh:or [ sh:hasValue ff:SocialAssistance ; sh:or [ sh:hasValue ff:AsylSeekerBenefits ; sh:path ff:receivesBenefit ] ; sh:path ff:receivesBenefit ] ; sh:path ff:receivesBenefit ]->[ sh:zeroOrMorePath rdf:rest ] does not contain a value in the set: ['rdf:nil']\n\t\tConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:hasValue ff:L100040_LB_8665924 ; sh:or [ sh:hasValue ff:SocialAssistance ; sh:or [ sh:hasValue ff:AsylSeekerBenefits ; sh:path ff:receivesBenefit ] ; sh:path ff:receivesBenefit ] ; sh:path ff:receivesBenefit ]\n\t\t\tValue Node: [ sh:hasValue ff:L100040_LB_8665924 ; sh:or [ sh:hasValue ff:SocialAssistance ; sh:or [ sh:hasValue ff:AsylSeekerBenefits ; sh:path ff:receivesBenefit ] ; sh:path ff:receivesBenefit ] ; sh:path ff:receivesBenefit ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Value does not conform to Shape shsh:ListNodeShape. See details for more information.\n\t\t\tDetails:\n\t\t\t\tConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\tSource Shape: shsh:ListNodeShape\n\t\t\t\t\tFocus Node: [ sh:hasValue ff:L100040_LB_8665924 ; sh:or [ sh:hasValue ff:SocialAssistance ; sh:or [ sh:hasValue ff:AsylSeekerBenefits ; sh:path ff:receivesBenefit ] ; sh:path ff:receivesBenefit ] ; sh:path ff:receivesBenefit ]\n\t\t\t\t\tValue Node: [ sh:hasValue ff:L100040_LB_8665924 ; sh:or [ sh:hasValue ff:SocialAssistance ; sh:or [ sh:hasValue ff:AsylSeekerBenefits ; sh:path ff:receivesBenefit ] ; sh:path ff:receivesBenefit ] ; sh:path ff:receivesBenefit ]\n\t\t\t\t\tMessage: Node [ sh:hasValue ff:L100040_LB_8665924 ; sh:or [ sh:hasValue ff:SocialAssistance ; sh:or [ sh:hasValue ff:AsylSeekerBenefits ; sh:path ff:receivesBenefit ] ; sh:path ff:receivesBenefit ] ; sh:path ff:receivesBenefit ] must conform to one or more shapes in [ sh:hasValue rdf:nil ; sh:property [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:rest ] ] , [ sh:not [ sh:hasValue rdf:nil ] ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:rest ] ]\n",
        "nof_validation_results": 3,
        "validation_results": [
            {
                "source_shape": "[ sh:node shsh:ListShape ; sh:path sh:or ]",
                "message": "Value does not conform to Shape shsh:ListShape. See details for more information."
            },
            {
                "source_shape": "[ sh:node shsh:ListShape ; sh:path sh:or ]",
                "message": "Value does not conform to Shape shsh:ListShape. See details for more information."
            },
            {
                "source_shape": "[ sh:node shsh:ListShape ; sh:path sh:or ]",
                "message": "Value does not conform to Shape shsh:ListShape. See details for more information."
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "llama-3.3-70b-instruct",
        "file": "baseline_llama-3.3-70b-instruct_ausbildungsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/llama-3.3-70b-instruct/output/parsed_output/baseline_llama-3.3-70b-instruct_ausbildungsgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "mistral-large-instruct",
        "file": "baseline_mistral-large-instruct_guv-kinderverletztengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/mistral-large-instruct/output/parsed_output/baseline_mistral-large-instruct_guv-kinderverletztengeld.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (1):\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:lessThan ]\n\tFocus Node: [ sh:lessThan Literal(\"12\", datatype=xsd:integer) ; sh:path ff:hasAge ]\n\tValue Node: Literal(\"12\", datatype=xsd:integer)\n\tResult Path: sh:lessThan\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 1,
        "validation_results": [
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:lessThan ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "mistral-large-instruct",
        "file": "baseline_mistral-large-instruct_buergergeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/mistral-large-instruct/output/parsed_output/baseline_mistral-large-instruct_buergergeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "mistral-large-instruct",
        "file": "baseline_mistral-large-instruct_guv-witwenrente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/mistral-large-instruct/output/parsed_output/baseline_mistral-large-instruct_guv-witwenrente.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "mistral-large-instruct",
        "file": "baseline_mistral-large-instruct_guv-waisenrente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/mistral-large-instruct/output/parsed_output/baseline_mistral-large-instruct_guv-waisenrente.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "mistral-large-instruct",
        "file": "baseline_mistral-large-instruct_bildung-und-teilhabe.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/mistral-large-instruct/output/parsed_output/baseline_mistral-large-instruct_bildung-und-teilhabe.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (2):\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:lessThanOrEquals ]\n\tFocus Node: [ sh:lessThanOrEquals Literal(\"18\", datatype=xsd:integer) ; sh:path ff:hasAge ]\n\tValue Node: Literal(\"18\", datatype=xsd:integer)\n\tResult Path: sh:lessThanOrEquals\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:lessThanOrEquals ]\n\tFocus Node: [ sh:lessThanOrEquals Literal(\"25\", datatype=xsd:integer) ; sh:path ff:hasAge ]\n\tValue Node: Literal(\"25\", datatype=xsd:integer)\n\tResult Path: sh:lessThanOrEquals\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 2,
        "validation_results": [
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:lessThanOrEquals ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:lessThanOrEquals ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "mistral-large-instruct",
        "file": "baseline_mistral-large-instruct_guv-rentenabfindung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/mistral-large-instruct/output/parsed_output/baseline_mistral-large-instruct_guv-rentenabfindung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "mistral-large-instruct",
        "file": "baseline_mistral-large-instruct_ausbildungsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/mistral-large-instruct/output/parsed_output/baseline_mistral-large-instruct_ausbildungsgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "mistral-large-instruct",
        "file": "baseline_mistral-large-instruct_berufsausbildungsbeihilfe.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/mistral-large-instruct/output/parsed_output/baseline_mistral-large-instruct_berufsausbildungsbeihilfe.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "mistral-large-instruct",
        "file": "baseline_mistral-large-instruct_grundausbildung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/mistral-large-instruct/output/parsed_output/baseline_mistral-large-instruct_grundausbildung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "mistral-large-instruct",
        "file": "baseline_mistral-large-instruct_guv-verletztengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/mistral-large-instruct/output/parsed_output/baseline_mistral-large-instruct_guv-verletztengeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "mistral-large-instruct",
        "file": "baseline_mistral-large-instruct_insolvenzgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/mistral-large-instruct/output/parsed_output/baseline_mistral-large-instruct_insolvenzgeld.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (2):\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:lessThan ]\n\tFocus Node: [ sh:datatype xsd:dateTime ; sh:lessThan [ sh:datatype xsd:dateTime ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasDate ] ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasDate ]\n\tValue Node: [ sh:datatype xsd:dateTime ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasDate ]\n\tResult Path: sh:lessThan\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:lessThan ]\n\tFocus Node: [ sh:datatype xsd:dateTime ; sh:lessThan [ sh:datatype xsd:dateTime ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:node [ sh:property [ sh:class ff:DiscontinuationOfBusiness ; sh:node [ sh:property <http://recursion.too.deep> ] ; sh:path ff:hasEvent ] ] ; sh:path ff:hasDate ] ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasDate ]\n\tValue Node: [ sh:datatype xsd:dateTime ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:node [ sh:property [ sh:class ff:DiscontinuationOfBusiness ; sh:node [ sh:property <http://recursion.too.deep> ] ; sh:path ff:hasEvent ] ] ; sh:path ff:hasDate ]\n\tResult Path: sh:lessThan\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 2,
        "validation_results": [
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:lessThan ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:lessThan ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "mistral-large-instruct",
        "file": "baseline_mistral-large-instruct_arbeitslosengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/mistral-large-instruct/output/parsed_output/baseline_mistral-large-instruct_arbeitslosengeld.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (1):\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:lessThan ]\n\tFocus Node: [ sh:lessThan Literal(\"15\", datatype=xsd:integer) ; sh:path ff:workHoursPerWeek ]\n\tValue Node: Literal(\"15\", datatype=xsd:integer)\n\tResult Path: sh:lessThan\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 1,
        "validation_results": [
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:lessThan ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "mistral-large-instruct",
        "file": "baseline_mistral-large-instruct_guv-uebergangsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/mistral-large-instruct/output/parsed_output/baseline_mistral-large-instruct_guv-uebergangsgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "mistral-large-instruct",
        "file": "baseline_mistral-large-instruct_kinderzuschlag.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/mistral-large-instruct/output/parsed_output/baseline_mistral-large-instruct_kinderzuschlag.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "mistral-large-instruct",
        "file": "baseline_mistral-large-instruct_guv-rente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/mistral-large-instruct/output/parsed_output/baseline_mistral-large-instruct_guv-rente.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "mistral-large-instruct",
        "file": "baseline_mistral-large-instruct_krankengeld-begleitperson.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/mistral-large-instruct/output/parsed_output/baseline_mistral-large-instruct_krankengeld-begleitperson.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (1):\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:lessThanOrEquals ]\n\tFocus Node: [ sh:lessThanOrEquals Literal(\"0\", datatype=xsd:integer) ; sh:path ff:personalGrossIncome ]\n\tValue Node: Literal(\"0\", datatype=xsd:integer)\n\tResult Path: sh:lessThanOrEquals\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 1,
        "validation_results": [
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:lessThanOrEquals ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "mistral-large-instruct",
        "file": "baseline_mistral-large-instruct_aktivierung-und-eingliederung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/mistral-large-instruct/output/parsed_output/baseline_mistral-large-instruct_aktivierung-und-eingliederung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "mistral-large-instruct",
        "file": "baseline_mistral-large-instruct_kindergeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/mistral-large-instruct/output/parsed_output/baseline_mistral-large-instruct_kindergeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "meta-llama-3.1-8b-instruct",
        "file": "baseline_meta-llama-3.1-8b-instruct_krankengeld-begleitperson.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/meta-llama-3.1-8b-instruct/output/parsed_output/baseline_meta-llama-3.1-8b-instruct_krankengeld-begleitperson.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (8):\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasEmploymentStatus ; sh:qualifiedValueShape [ sh:values ff:Employee, ff:JobSeeker, ff:SelfEmployed, ff:Unemployed ] ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasIncome ; sh:qualifiedValueShape [ sh:property [ sh:datatype xsd:decimal ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Literal ; sh:path ff:familyGrossIncome ], [ sh:datatype xsd:decimal ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Literal ; sh:path ff:personalGrossIncome ] ] ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasDisabilityType ; sh:qualifiedValueShape [ sh:values ff:HearingImpairment, ff:VisualImpairment ] ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasMaritalStatus ; sh:qualifiedValueShape [ sh:values ff:CivilUnion, ff:Divorced, ff:Married, ff:Widowed ] ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasEvent ; sh:qualifiedValueShape [ sh:property [ sh:datatype xsd:boolean ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Literal ; sh:path ff:fullDayAccompaniment ], [ sh:datatype xsd:dateTime ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Literal ; sh:path ff:hasDate ] ] ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasResidenceStatus ; sh:qualifiedValueShape [ sh:values ff:Tolerated ] ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasResidencePermit ; sh:qualifiedValueShape [ sh:values ff:Tolerated ] ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasEmployment ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\n",
        "nof_validation_results": 8,
        "validation_results": [
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "meta-llama-3.1-8b-instruct",
        "file": "baseline_meta-llama-3.1-8b-instruct_guv-rente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/meta-llama-3.1-8b-instruct/output/parsed_output/baseline_meta-llama-3.1-8b-instruct_guv-rente.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (53):\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype ff:ResidencePermit ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasResidencePermit ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype ff:Insurance ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasInsurance ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasDisability ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasDisability ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype ff:RehabilitationProvider ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasRehabilitationProvider ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasDisability ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype ff:Disability ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasDisabilityType ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype ff:EmploymentStatus ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasEmploymentStatus ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype ff:Disability ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasDisabilityType ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype ff:MaritalStatus ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasMaritalStatus ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype ff:ResidenceStatus ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasResidenceStatus ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasDisability ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasDisability ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype xsd:integer ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasAge ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype ff:MaritalStatus ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasMaritalStatus ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype ff:EmploymentStatus ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasEmploymentStatus ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype ff:Income ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasIncome ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype xsd:integer ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasAge ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype ff:Income ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasIncome ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype ff:ResidencePermit ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasResidencePermit ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype ff:Person ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasPrimaryCareTaker ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype ff:Employment ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasEmployment ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype ff:Disability ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasDisabilityType ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype xsd:integer ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasAge ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasDisability ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype ff:ResidencePermit ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasResidencePermit ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype xsd:integer ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasAge ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype ff:Insurance ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasInsurance ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype ff:Insurance ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasInsurance ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasDisability ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasDisability ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasDisability ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype xsd:integer ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasAge ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype ff:EmploymentStatus ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasEmploymentStatus ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype ff:SocialBenefit ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasNoPriorityClaimsOver ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype ff:Disability ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasDisabilityType ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype ff:Disability ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasDisabilityType ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype ff:MaritalStatus ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasMaritalStatus ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasDisability ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasEarningCapacity ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype ff:Income ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasIncome ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype ff:Insurance ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasInsurance ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype xsd:integer ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasAge ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype xsd:integer ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasAge ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype ff:Disability ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:cannotSupportThemselvesBecause ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype xsd:integer ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasAge ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasDisability ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype ff:Disability ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasDisabilityType ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype ff:Disability ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasDisabilityType ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype ff:Person ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:receivesChildBenefitFor ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype ff:ResidenceStatus ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasResidenceStatus ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype ff:Income ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasIncome ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype xsd:integer ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasAge ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\n",
        "nof_validation_results": 53,
        "validation_results": [
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "meta-llama-3.1-8b-instruct",
        "file": "baseline_meta-llama-3.1-8b-instruct_guv-rentenabfindung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/meta-llama-3.1-8b-instruct/output/parsed_output/baseline_meta-llama-3.1-8b-instruct_guv-rentenabfindung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "meta-llama-3.1-8b-instruct",
        "file": "baseline_meta-llama-3.1-8b-instruct_insolvenzgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/meta-llama-3.1-8b-instruct/output/parsed_output/baseline_meta-llama-3.1-8b-instruct_insolvenzgeld.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (5):\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ShapeShape ; sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ]\n\tFocus Node: ( [ sh:datatype xsd:integer ; sh:greaterThan Literal(\"0\", datatype=xsd:integer) ; sh:lessThan Literal(\"100000\", datatype=xsd:integer) ; sh:path ff:personalGrossIncome ] [ sh:datatype xsd:integer ; sh:greaterThan Literal(\"0\", datatype=xsd:integer) ; sh:lessThan Literal(\"150000\", datatype=xsd:integer) ; sh:path ff:familyGrossIncome ] )\n\tValue Node: [ sh:datatype xsd:integer ; sh:greaterThan Literal(\"0\", datatype=xsd:integer) ; sh:lessThan Literal(\"100000\", datatype=xsd:integer) ; sh:path ff:personalGrossIncome ]\n\tResult Path: ( [ sh:zeroOrMorePath rdf:rest ] rdf:first )\n\tMessage: Value does not conform to Shape shsh:ShapeShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:lessThan ]\n\t\t\tFocus Node: [ sh:datatype xsd:integer ; sh:greaterThan Literal(\"0\", datatype=xsd:integer) ; sh:lessThan Literal(\"100000\", datatype=xsd:integer) ; sh:path ff:personalGrossIncome ]\n\t\t\tValue Node: Literal(\"100000\", datatype=xsd:integer)\n\t\t\tResult Path: sh:lessThan\n\t\t\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ShapeShape ; sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ]\n\tFocus Node: ( [ sh:datatype xsd:integer ; sh:greaterThan Literal(\"0\", datatype=xsd:integer) ; sh:lessThan Literal(\"100000\", datatype=xsd:integer) ; sh:path ff:personalGrossIncome ] [ sh:datatype xsd:integer ; sh:greaterThan Literal(\"0\", datatype=xsd:integer) ; sh:lessThan Literal(\"150000\", datatype=xsd:integer) ; sh:path ff:familyGrossIncome ] )\n\tValue Node: [ sh:datatype xsd:integer ; sh:greaterThan Literal(\"0\", datatype=xsd:integer) ; sh:lessThan Literal(\"150000\", datatype=xsd:integer) ; sh:path ff:familyGrossIncome ]\n\tResult Path: ( [ sh:zeroOrMorePath rdf:rest ] rdf:first )\n\tMessage: Value does not conform to Shape shsh:ShapeShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:lessThan ]\n\t\t\tFocus Node: [ sh:datatype xsd:integer ; sh:greaterThan Literal(\"0\", datatype=xsd:integer) ; sh:lessThan Literal(\"150000\", datatype=xsd:integer) ; sh:path ff:familyGrossIncome ]\n\t\t\tValue Node: Literal(\"150000\", datatype=xsd:integer)\n\t\t\tResult Path: sh:lessThan\n\t\t\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:lessThan ]\n\tFocus Node: [ sh:lessThan ( Literal(\"2022-12-31T23:59:59+00:00\" = 2022-12-31 23:59:59+00:00, datatype=xsd:dateTime) ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:node ff:Event ; sh:path ff:hasDate ]\n\tValue Node: ( Literal(\"2022-12-31T23:59:59+00:00\" = 2022-12-31 23:59:59+00:00, datatype=xsd:dateTime) )\n\tResult Path: sh:lessThan\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:lessThan ]\n\tFocus Node: [ sh:datatype xsd:integer ; sh:greaterThan Literal(\"0\", datatype=xsd:integer) ; sh:lessThan Literal(\"100000\", datatype=xsd:integer) ; sh:path ff:personalGrossIncome ]\n\tValue Node: Literal(\"100000\", datatype=xsd:integer)\n\tResult Path: sh:lessThan\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:lessThan ]\n\tFocus Node: [ sh:datatype xsd:integer ; sh:greaterThan Literal(\"0\", datatype=xsd:integer) ; sh:lessThan Literal(\"150000\", datatype=xsd:integer) ; sh:path ff:familyGrossIncome ]\n\tValue Node: Literal(\"150000\", datatype=xsd:integer)\n\tResult Path: sh:lessThan\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 5,
        "validation_results": [
            {
                "source_shape": "[ sh:node shsh:ShapeShape ; sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ]",
                "message": "Value does not conform to Shape shsh:ShapeShape. See details for more information."
            },
            {
                "source_shape": "[ sh:node shsh:ShapeShape ; sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ]",
                "message": "Value does not conform to Shape shsh:ShapeShape. See details for more information."
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:lessThan ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:lessThan ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:lessThan ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "meta-llama-3.1-8b-instruct",
        "file": "baseline_meta-llama-3.1-8b-instruct_aktivierung-und-eingliederung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/meta-llama-3.1-8b-instruct/output/parsed_output/baseline_meta-llama-3.1-8b-instruct_aktivierung-und-eingliederung.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (10):\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype ff:Employment ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasEmployment ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype ff:Employment ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasEmployment ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype ff:SocialBenefit ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:receivesBenefit ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype ff:Income ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasIncome ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype xsd:boolean ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:receivesBenefit ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype ff:SocialBenefit ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:receivesBenefit ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype ff:Income ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasIncome ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype ff:EmploymentStatus ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasEmploymentStatus ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype ff:EmploymentStatus ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasEmploymentStatus ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\nConstraint Violation in InConstraintComponent (http://www.w3.org/ns/shacl#InConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]\n\tFocus Node: [ sh:datatype ff:Income ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Resource ; sh:path ff:hasIncome ]\n\tValue Node: sh:Resource\n\tResult Path: sh:nodeKind\n\tMessage: Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']\n",
        "nof_validation_results": 10,
        "validation_results": [
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            },
            {
                "source_shape": "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]",
                "message": "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
            }
        ]
    },
    {
        "experiment": "baseline_0ex0fcv_1745664019",
        "prompt": "baseline",
        "model": "meta-llama-3.1-8b-instruct",
        "file": "baseline_meta-llama-3.1-8b-instruct_guv-verletztengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/baseline_0ex0fcv_1745664019/meta-llama-3.1-8b-instruct/output/parsed_output/baseline_meta-llama-3.1-8b-instruct_guv-verletztengeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1745958629",
        "prompt": "cot",
        "model": "qwq-32b",
        "file": "cot_qwq-32b_guv-witwenrente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1745958629/qwq-32b/output/parsed_output/cot_qwq-32b_guv-witwenrente.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1745958629",
        "prompt": "cot",
        "model": "qwq-32b",
        "file": "cot_qwq-32b_buergergeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1745958629/qwq-32b/output/parsed_output/cot_qwq-32b_buergergeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1745958629",
        "prompt": "cot",
        "model": "qwq-32b",
        "file": "cot_qwq-32b_grundausbildung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1745958629/qwq-32b/output/parsed_output/cot_qwq-32b_grundausbildung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1745958629",
        "prompt": "cot",
        "model": "qwq-32b",
        "file": "cot_qwq-32b_guv-rentenabfindung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1745958629/qwq-32b/output/parsed_output/cot_qwq-32b_guv-rentenabfindung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1745958629",
        "prompt": "cot",
        "model": "qwq-32b",
        "file": "cot_qwq-32b_einstiegsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1745958629/qwq-32b/output/parsed_output/cot_qwq-32b_einstiegsgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1745958629",
        "prompt": "cot",
        "model": "qwq-32b",
        "file": "cot_qwq-32b_guv-kinderverletztengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1745958629/qwq-32b/output/parsed_output/cot_qwq-32b_guv-kinderverletztengeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1745958629",
        "prompt": "cot",
        "model": "qwq-32b",
        "file": "cot_qwq-32b_guv-verletztengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1745958629/qwq-32b/output/parsed_output/cot_qwq-32b_guv-verletztengeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1745958629",
        "prompt": "cot",
        "model": "qwq-32b",
        "file": "cot_qwq-32b_insolvenzgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1745958629/qwq-32b/output/parsed_output/cot_qwq-32b_insolvenzgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1745958629",
        "prompt": "cot",
        "model": "qwq-32b",
        "file": "cot_qwq-32b_guv-uebergangsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1745958629/qwq-32b/output/parsed_output/cot_qwq-32b_guv-uebergangsgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1745958629",
        "prompt": "cot",
        "model": "qwq-32b",
        "file": "cot_qwq-32b_kinderzuschlag.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1745958629/qwq-32b/output/parsed_output/cot_qwq-32b_kinderzuschlag.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1745958629",
        "prompt": "cot",
        "model": "qwq-32b",
        "file": "cot_qwq-32b_krankengeld-begleitperson.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1745958629/qwq-32b/output/parsed_output/cot_qwq-32b_krankengeld-begleitperson.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1745958629",
        "prompt": "cot",
        "model": "qwq-32b",
        "file": "cot_qwq-32b_kindergeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1745958629/qwq-32b/output/parsed_output/cot_qwq-32b_kindergeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1745958629",
        "prompt": "cot",
        "model": "qwq-32b",
        "file": "cot_qwq-32b_aktivierung-und-eingliederung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1745958629/qwq-32b/output/parsed_output/cot_qwq-32b_aktivierung-und-eingliederung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1745958629",
        "prompt": "cot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "cot_llama-3.1-sauerkrautlm-70b-instruct_grundsicherung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1745958629/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/cot_llama-3.1-sauerkrautlm-70b-instruct_grundsicherung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1745958629",
        "prompt": "cot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "cot_llama-3.1-sauerkrautlm-70b-instruct_grundausbildung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1745958629/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/cot_llama-3.1-sauerkrautlm-70b-instruct_grundausbildung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1745958629",
        "prompt": "cot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "cot_llama-3.1-sauerkrautlm-70b-instruct_aktivierung-und-eingliederung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1745958629/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/cot_llama-3.1-sauerkrautlm-70b-instruct_aktivierung-und-eingliederung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1745958629",
        "prompt": "cot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "cot_llama-3.1-sauerkrautlm-70b-instruct_insolvenzgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1745958629/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/cot_llama-3.1-sauerkrautlm-70b-instruct_insolvenzgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1745958629",
        "prompt": "cot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "cot_llama-3.1-sauerkrautlm-70b-instruct_guv-verletztengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1745958629/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/cot_llama-3.1-sauerkrautlm-70b-instruct_guv-verletztengeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1745958629",
        "prompt": "cot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "cot_llama-3.1-sauerkrautlm-70b-instruct_guv-kinderverletztengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1745958629/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/cot_llama-3.1-sauerkrautlm-70b-instruct_guv-kinderverletztengeld.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (1):\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:hasValue ff:OccupationalRehabilitation ; sh:not [ sh:hasValue ff:CommutingAccident, ff:DiscontinuationOfBusiness, ff:InsolvencyApplication, ff:InsolvencyProceeding, ff:KindergartenAccident, ff:MedicalAccompaniment, ff:MoveToGermany, ff:OccupationalDisease, ff:SchoolAccident, ff:WorkAccident ] ; sh:path ff:causeOfDeath, ff:resultsInTreatment ]\n\tValue Node: [ sh:hasValue ff:OccupationalRehabilitation ; sh:not [ sh:hasValue ff:CommutingAccident, ff:DiscontinuationOfBusiness, ff:InsolvencyApplication, ff:InsolvencyProceeding, ff:KindergartenAccident, ff:MedicalAccompaniment, ff:MoveToGermany, ff:OccupationalDisease, ff:SchoolAccident, ff:WorkAccident ] ; sh:path ff:causeOfDeath, ff:resultsInTreatment ]\n\tMessage: Node [ sh:hasValue ff:OccupationalRehabilitation ; sh:not [ sh:hasValue ff:CommutingAccident, ff:DiscontinuationOfBusiness, ff:InsolvencyApplication, ff:InsolvencyProceeding, ff:KindergartenAccident, ff:MedicalAccompaniment, ff:MoveToGermany, ff:OccupationalDisease, ff:SchoolAccident, ff:WorkAccident ] ; sh:path ff:causeOfDeath, ff:resultsInTreatment ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\n",
        "nof_validation_results": 1,
        "validation_results": [
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:hasValue ff:OccupationalRehabilitation ; sh:not [ sh:hasValue ff:CommutingAccident, ff:DiscontinuationOfBusiness, ff:InsolvencyApplication, ff:InsolvencyProceeding, ff:KindergartenAccident, ff:MedicalAccompaniment, ff:MoveToGermany, ff:OccupationalDisease, ff:SchoolAccident, ff:WorkAccident ] ; sh:path ff:causeOfDeath, ff:resultsInTreatment ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            }
        ]
    },
    {
        "experiment": "cot_1ex3fcv_1745958629",
        "prompt": "cot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "cot_llama-3.1-sauerkrautlm-70b-instruct_guv-waisenrente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1745958629/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/cot_llama-3.1-sauerkrautlm-70b-instruct_guv-waisenrente.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1745958629",
        "prompt": "cot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "cot_llama-3.1-sauerkrautlm-70b-instruct_guv-witwenrente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1745958629/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/cot_llama-3.1-sauerkrautlm-70b-instruct_guv-witwenrente.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1745958629",
        "prompt": "cot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "cot_llama-3.1-sauerkrautlm-70b-instruct_uebergangsgeld-behinderung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1745958629/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/cot_llama-3.1-sauerkrautlm-70b-instruct_uebergangsgeld-behinderung.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (1):\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:or ( [ sh:property [ sh:path ff:participates ; sh:qualifiedMinCount Literal(\"1\", datatype=xsd:integer) ; sh:qualifiedValueShape ff:TrainingWithEquivalentCertificationShape ] ] [ sh:property [ sh:path ff:participates ; sh:qualifiedMinCount Literal(\"1\", datatype=xsd:integer) ; sh:qualifiedValueShape ff:TrainingWithEquivalentAbschlussShape ] ] ) ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:or ( [ sh:property [ sh:path ff:participates ; sh:qualifiedMinCount Literal(\"1\", datatype=xsd:integer) ; sh:qualifiedValueShape ff:TrainingWithEquivalentCertificationShape ] ] [ sh:property [ sh:path ff:participates ; sh:qualifiedMinCount Literal(\"1\", datatype=xsd:integer) ; sh:qualifiedValueShape ff:TrainingWithEquivalentAbschlussShape ] ] ) ]->sh:path\n",
        "nof_validation_results": 1,
        "validation_results": [
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:or ( [ sh:property [ sh:path ff:participates ; sh:qualifiedMinCount Literal(\"1\", datatype=xsd:integer) ; sh:qualifiedValueShape ff:TrainingWithEquivalentCertificationShape ] ] [ sh:property [ sh:path ff:participates ; sh:qualifiedMinCount Literal(\"1\", datatype=xsd:integer) ; sh:qualifiedValueShape ff:TrainingWithEquivalentAbschlussShape ] ] ) ]->sh:path"
            }
        ]
    },
    {
        "experiment": "cot_1ex3fcv_1745958629",
        "prompt": "cot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "cot_llama-3.1-sauerkrautlm-70b-instruct_guv-rente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1745958629/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/cot_llama-3.1-sauerkrautlm-70b-instruct_guv-rente.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1745958629",
        "prompt": "cot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "cot_llama-3.1-sauerkrautlm-70b-instruct_berufsausbildungsbeihilfe.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1745958629/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/cot_llama-3.1-sauerkrautlm-70b-instruct_berufsausbildungsbeihilfe.ttl",
        "valid_shacl": 0,
        "syntax_error": 0,
        "unexpected_error": 1,
        "validation_report": "QualifiedValueShapeConstraintComponent must have at lease one sh:qualifiedMinCount or sh:qualifiedMaxCount\nFor reference, see https://www.w3.org/TR/shacl/#QualifiedValueShapeConstraintComponent",
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1745958629",
        "prompt": "cot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "cot_llama-3.1-sauerkrautlm-70b-instruct_guv-rentenabfindung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1745958629/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/cot_llama-3.1-sauerkrautlm-70b-instruct_guv-rentenabfindung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1745958629",
        "prompt": "cot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "cot_llama-3.1-sauerkrautlm-70b-instruct_kinderzuschlag.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1745958629/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/cot_llama-3.1-sauerkrautlm-70b-instruct_kinderzuschlag.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1745958629",
        "prompt": "cot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "cot_llama-3.1-sauerkrautlm-70b-instruct_guv-uebergangsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1745958629/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/cot_llama-3.1-sauerkrautlm-70b-instruct_guv-uebergangsgeld.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (2):\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ShapeShape ; sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ]\n\tFocus Node: ( ff:WorkOrCommutingAccidentShape ff:OccupationalDiseaseShape )\n\tValue Node: ff:WorkOrCommutingAccidentShape\n\tResult Path: ( [ sh:zeroOrMorePath rdf:rest ] rdf:first )\n\tMessage: Value does not conform to Shape shsh:ShapeShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ sh:node shsh:ListShape ; sh:path sh:or ]\n\t\t\tFocus Node: ff:WorkOrCommutingAccidentShape\n\t\t\tValue Node: [ sh:class ff:CommutingAccident ; sh:path ff:hasEvent ]\n\t\t\tResult Path: sh:or\n\t\t\tMessage: Value does not conform to Shape shsh:ListShape. See details for more information.\n\t\t\tDetails:\n\t\t\t\tConstraint Violation in HasValueConstraintComponent (http://www.w3.org/ns/shacl#HasValueConstraintComponent):\n\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\t\t\tFocus Node: [ sh:class ff:CommutingAccident ; sh:path ff:hasEvent ]\n\t\t\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\t\t\tMessage: Node [ sh:class ff:CommutingAccident ; sh:path ff:hasEvent ]->[ sh:zeroOrMorePath rdf:rest ] does not contain a value in the set: ['rdf:nil']\n\t\t\t\tConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\t\t\tFocus Node: [ sh:class ff:CommutingAccident ; sh:path ff:hasEvent ]\n\t\t\t\t\tValue Node: [ sh:class ff:CommutingAccident ; sh:path ff:hasEvent ]\n\t\t\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\t\t\tMessage: Value does not conform to Shape shsh:ListNodeShape. See details for more information.\n\t\t\t\t\tDetails:\n\t\t\t\t\t\tConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\t\t\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\t\t\tSource Shape: shsh:ListNodeShape\n\t\t\t\t\t\t\tFocus Node: [ sh:class ff:CommutingAccident ; sh:path ff:hasEvent ]\n\t\t\t\t\t\t\tValue Node: [ sh:class ff:CommutingAccident ; sh:path ff:hasEvent ]\n\t\t\t\t\t\t\tMessage: Node [ sh:class ff:CommutingAccident ; sh:path ff:hasEvent ] must conform to one or more shapes in [ sh:hasValue rdf:nil ; sh:property [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:rest ] ] , [ sh:not [ sh:hasValue rdf:nil ] ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:rest ] ]\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ListShape ; sh:path sh:or ]\n\tFocus Node: ff:WorkOrCommutingAccidentShape\n\tValue Node: [ sh:class ff:CommutingAccident ; sh:path ff:hasEvent ]\n\tResult Path: sh:or\n\tMessage: Value does not conform to Shape shsh:ListShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in HasValueConstraintComponent (http://www.w3.org/ns/shacl#HasValueConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:class ff:CommutingAccident ; sh:path ff:hasEvent ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Node [ sh:class ff:CommutingAccident ; sh:path ff:hasEvent ]->[ sh:zeroOrMorePath rdf:rest ] does not contain a value in the set: ['rdf:nil']\n\t\tConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:class ff:CommutingAccident ; sh:path ff:hasEvent ]\n\t\t\tValue Node: [ sh:class ff:CommutingAccident ; sh:path ff:hasEvent ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Value does not conform to Shape shsh:ListNodeShape. See details for more information.\n\t\t\tDetails:\n\t\t\t\tConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\tSource Shape: shsh:ListNodeShape\n\t\t\t\t\tFocus Node: [ sh:class ff:CommutingAccident ; sh:path ff:hasEvent ]\n\t\t\t\t\tValue Node: [ sh:class ff:CommutingAccident ; sh:path ff:hasEvent ]\n\t\t\t\t\tMessage: Node [ sh:class ff:CommutingAccident ; sh:path ff:hasEvent ] must conform to one or more shapes in [ sh:hasValue rdf:nil ; sh:property [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:rest ] ] , [ sh:not [ sh:hasValue rdf:nil ] ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:rest ] ]\n",
        "nof_validation_results": 2,
        "validation_results": [
            {
                "source_shape": "[ sh:node shsh:ShapeShape ; sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ]",
                "message": "Value does not conform to Shape shsh:ShapeShape. See details for more information."
            },
            {
                "source_shape": "[ sh:node shsh:ListShape ; sh:path sh:or ]",
                "message": "Value does not conform to Shape shsh:ListShape. See details for more information."
            }
        ]
    },
    {
        "experiment": "cot_1ex3fcv_1745958629",
        "prompt": "cot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "cot_llama-3.1-sauerkrautlm-70b-instruct_einstiegsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1745958629/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/cot_llama-3.1-sauerkrautlm-70b-instruct_einstiegsgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1745958629",
        "prompt": "cot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "cot_llama-3.1-sauerkrautlm-70b-instruct_krankengeld-begleitperson.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1745958629/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/cot_llama-3.1-sauerkrautlm-70b-instruct_krankengeld-begleitperson.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1745958629",
        "prompt": "cot",
        "model": "mistral-large-instruct",
        "file": "cot_mistral-large-instruct_buergergeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1745958629/mistral-large-instruct/output/parsed_output/cot_mistral-large-instruct_buergergeld.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (2):\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:message Literal(\"Does not meet requirement 'User is in need of assistance.'\", lang=en) ; sh:path ff:canCoverPersonalBasicNeeds ]\n\tValue Node: Literal(\"false\" = False, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:message Literal(\"Does not meet requirement 'User has not reached the legal retirement age.'\", lang=en) ; sh:path ff:isPensionable ]\n\tValue Node: Literal(\"false\" = False, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 2,
        "validation_results": [
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "cot_1ex3fcv_1745958629",
        "prompt": "cot",
        "model": "mistral-large-instruct",
        "file": "cot_mistral-large-instruct_einstiegsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1745958629/mistral-large-instruct/output/parsed_output/cot_mistral-large-instruct_einstiegsgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1745958629",
        "prompt": "cot",
        "model": "mistral-large-instruct",
        "file": "cot_mistral-large-instruct_guv-rente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1745958629/mistral-large-instruct/output/parsed_output/cot_mistral-large-instruct_guv-rente.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1745958629",
        "prompt": "cot",
        "model": "mistral-large-instruct",
        "file": "cot_mistral-large-instruct_insolvenzgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1745958629/mistral-large-instruct/output/parsed_output/cot_mistral-large-instruct_insolvenzgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1745958629",
        "prompt": "cot",
        "model": "mistral-large-instruct",
        "file": "cot_mistral-large-instruct_krankengeld-begleitperson.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1745958629/mistral-large-instruct/output/parsed_output/cot_mistral-large-instruct_krankengeld-begleitperson.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1745958629",
        "prompt": "cot",
        "model": "mistral-large-instruct",
        "file": "cot_mistral-large-instruct_berufsausbildungsbeihilfe.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1745958629/mistral-large-instruct/output/parsed_output/cot_mistral-large-instruct_berufsausbildungsbeihilfe.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (4):\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:message Literal(\"User must have a disability to be eligible for additional benefits.\", lang=en) ; sh:path ff:hasDisability ]\n\tValue Node: Literal(\"true\" = True, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:message Literal(\"User must have been in Germany for at least 15 months without interruption on a permitted, authorized or tolerated basis.\", lang=en) ; sh:path ff:uninterruptedLegalStayForLessThan15Months ]\n\tValue Node: Literal(\"false\" = False, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:message Literal(\"User must not be able to cover their personal basic needs with their income, assets, and priority benefits.\", lang=en) ; sh:path ff:canCoverPersonalBasicNeeds ]\n\tValue Node: Literal(\"false\" = False, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:message Literal(\"The vocational training must be the user's first vocational training.\", lang=en) ; sh:path ff:isFirstVocationalTraining ]\n\tValue Node: Literal(\"true\" = True, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 4,
        "validation_results": [
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "cot_1ex3fcv_1745958629",
        "prompt": "cot",
        "model": "mistral-large-instruct",
        "file": "cot_mistral-large-instruct_guv-verletztengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1745958629/mistral-large-instruct/output/parsed_output/cot_mistral-large-instruct_guv-verletztengeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1745958629",
        "prompt": "cot",
        "model": "mistral-large-instruct",
        "file": "cot_mistral-large-instruct_uebergangsgeld-behinderung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1745958629/mistral-large-instruct/output/parsed_output/cot_mistral-large-instruct_uebergangsgeld-behinderung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1745958629",
        "prompt": "cot",
        "model": "mistral-large-instruct",
        "file": "cot_mistral-large-instruct_bildung-und-teilhabe.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1745958629/mistral-large-instruct/output/parsed_output/cot_mistral-large-instruct_bildung-und-teilhabe.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (3):\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:lessThanOrEquals ]\n\tFocus Node: [ sh:lessThanOrEquals Literal(\"18\", datatype=xsd:integer) ; sh:message Literal(\"Must be under 18 years old for participation benefits.\", lang=en) ; sh:path ff:hasAge ]\n\tValue Node: Literal(\"18\", datatype=xsd:integer)\n\tResult Path: sh:lessThanOrEquals\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:lessThanOrEquals ]\n\tFocus Node: [ sh:lessThanOrEquals Literal(\"25\", datatype=xsd:integer) ; sh:message Literal(\"Must be under 25 years old.\", lang=en) ; sh:path ff:hasAge ]\n\tValue Node: Literal(\"25\", datatype=xsd:integer)\n\tResult Path: sh:lessThanOrEquals\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:lessThanOrEquals ]\n\tFocus Node: [ sh:lessThanOrEquals Literal(\"2000\", datatype=xsd:integer) ; sh:message Literal(\"Family gross income must be low.\", lang=en) ; sh:path ff:familyGrossIncome ]\n\tValue Node: Literal(\"2000\", datatype=xsd:integer)\n\tResult Path: sh:lessThanOrEquals\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 3,
        "validation_results": [
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:lessThanOrEquals ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:lessThanOrEquals ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:lessThanOrEquals ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "cot_1ex3fcv_1745958629",
        "prompt": "cot",
        "model": "mistral-large-instruct",
        "file": "cot_mistral-large-instruct_grundausbildung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1745958629/mistral-large-instruct/output/parsed_output/cot_mistral-large-instruct_grundausbildung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1745958629",
        "prompt": "cot",
        "model": "mistral-large-instruct",
        "file": "cot_mistral-large-instruct_guv-kinderverletztengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1745958629/mistral-large-instruct/output/parsed_output/cot_mistral-large-instruct_guv-kinderverletztengeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1745958629",
        "prompt": "cot",
        "model": "mistral-large-instruct",
        "file": "cot_mistral-large-instruct_guv-rentenabfindung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1745958629/mistral-large-instruct/output/parsed_output/cot_mistral-large-instruct_guv-rentenabfindung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1745958629",
        "prompt": "cot",
        "model": "mistral-large-instruct",
        "file": "cot_mistral-large-instruct_kindergeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1745958629/mistral-large-instruct/output/parsed_output/cot_mistral-large-instruct_kindergeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1745958629",
        "prompt": "cot",
        "model": "mistral-large-instruct",
        "file": "cot_mistral-large-instruct_aktivierung-und-eingliederung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1745958629/mistral-large-instruct/output/parsed_output/cot_mistral-large-instruct_aktivierung-und-eingliederung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1745958629",
        "prompt": "cot",
        "model": "mistral-large-instruct",
        "file": "cot_mistral-large-instruct_grundsicherung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1745958629/mistral-large-instruct/output/parsed_output/cot_mistral-large-instruct_grundsicherung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1745958629",
        "prompt": "cot",
        "model": "mistral-large-instruct",
        "file": "cot_mistral-large-instruct_guv-witwenrente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1745958629/mistral-large-instruct/output/parsed_output/cot_mistral-large-instruct_guv-witwenrente.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1745958629",
        "prompt": "cot",
        "model": "mistral-large-instruct",
        "file": "cot_mistral-large-instruct_kinderzuschlag.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1745958629/mistral-large-instruct/output/parsed_output/cot_mistral-large-instruct_kinderzuschlag.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1745958629",
        "prompt": "cot",
        "model": "mistral-large-instruct",
        "file": "cot_mistral-large-instruct_guv-uebergangsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1745958629/mistral-large-instruct/output/parsed_output/cot_mistral-large-instruct_guv-uebergangsgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745934134",
        "prompt": "fewshot",
        "model": "qwq-32b",
        "file": "fewshot_qwq-32b_ausbildungsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745934134/qwq-32b/output/parsed_output/fewshot_qwq-32b_ausbildungsgeld.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (1):\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:class ]\n\tFocus Node: [ sh:class [ sh:or ( ff:VocationalTraining ff:EntryProcedureAndVocationalTrainingArea ) ] ; sh:message Literal(\"Not participating in required training program.\", lang=en) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:participates ]\n\tValue Node: [ sh:or ( ff:VocationalTraining ff:EntryProcedureAndVocationalTrainingArea ) ]\n\tResult Path: sh:class\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 1,
        "validation_results": [
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:class ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "fewshot_1ex3fcv_1745934134",
        "prompt": "fewshot",
        "model": "qwq-32b",
        "file": "fewshot_qwq-32b_insolvenzgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745934134/qwq-32b/output/parsed_output/fewshot_qwq-32b_insolvenzgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745934134",
        "prompt": "fewshot",
        "model": "qwq-32b",
        "file": "fewshot_qwq-32b_kindergeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745934134/qwq-32b/output/parsed_output/fewshot_qwq-32b_kindergeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745934134",
        "prompt": "fewshot",
        "model": "qwq-32b",
        "file": "fewshot_qwq-32b_kinderzuschlag.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745934134/qwq-32b/output/parsed_output/fewshot_qwq-32b_kinderzuschlag.ttl",
        "valid_shacl": 0,
        "syntax_error": 0,
        "unexpected_error": 1,
        "validation_report": "QualifiedValueShapeConstraintComponent must have at lease one sh:qualifiedMinCount or sh:qualifiedMaxCount\nFor reference, see https://www.w3.org/TR/shacl/#QualifiedValueShapeConstraintComponent",
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745934134",
        "prompt": "fewshot",
        "model": "qwq-32b",
        "file": "fewshot_qwq-32b_guv-waisenrente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745934134/qwq-32b/output/parsed_output/fewshot_qwq-32b_guv-waisenrente.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (2):\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ShapeShape ; sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ]\n\tFocus Node: ( [ sh:class [ sh:or ( ff:School ff:VocationalTraining ) ] ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:participates ] [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:cannotSupportThemselvesBecause ; sh:qualifiedValueShape [ sh:property [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:reducesWorkProspectsPermanently ] ] ] [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isInTransitionalPeriod ] )\n\tValue Node: [ sh:class [ sh:or ( ff:School ff:VocationalTraining ) ] ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:participates ]\n\tResult Path: ( [ sh:zeroOrMorePath rdf:rest ] rdf:first )\n\tMessage: Value does not conform to Shape shsh:ShapeShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:class ]\n\t\t\tFocus Node: [ sh:class [ sh:or ( ff:School ff:VocationalTraining ) ] ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:participates ]\n\t\t\tValue Node: [ sh:or ( ff:School ff:VocationalTraining ) ]\n\t\t\tResult Path: sh:class\n\t\t\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:class ]\n\tFocus Node: [ sh:class [ sh:or ( ff:School ff:VocationalTraining ) ] ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:participates ]\n\tValue Node: [ sh:or ( ff:School ff:VocationalTraining ) ]\n\tResult Path: sh:class\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 2,
        "validation_results": [
            {
                "source_shape": "[ sh:node shsh:ShapeShape ; sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ]",
                "message": "Value does not conform to Shape shsh:ShapeShape. See details for more information."
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:class ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "fewshot_1ex3fcv_1745934134",
        "prompt": "fewshot",
        "model": "qwq-32b",
        "file": "fewshot_qwq-32b_guv-verletztengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745934134/qwq-32b/output/parsed_output/fewshot_qwq-32b_guv-verletztengeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745934134",
        "prompt": "fewshot",
        "model": "qwq-32b",
        "file": "fewshot_qwq-32b_guv-rentenabfindung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745934134/qwq-32b/output/parsed_output/fewshot_qwq-32b_guv-rentenabfindung.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (2):\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:message Literal(\"No deceased spouse/civil partner detected.\", lang=en) ; sh:or ( [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:deceasedSpouse ] [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:deceasedCivilPartner ] ) ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:message Literal(\"No deceased spouse/civil partner detected.\", lang=en) ; sh:or ( [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:deceasedSpouse ] [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:deceasedCivilPartner ] ) ]->sh:path\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:class ]\n\tFocus Node: [ sh:class [ sh:in ( ff:Married ff:CivilUnion ) ] ; sh:property [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:newUnionAfterWidowhood ] ]\n\tValue Node: [ sh:in ( ff:Married ff:CivilUnion ) ]\n\tResult Path: sh:class\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 2,
        "validation_results": [
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:message Literal(\"No deceased spouse/civil partner detected.\", lang=en) ; sh:or ( [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:deceasedSpouse ] [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:deceasedCivilPartner ] ) ]->sh:path"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:class ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "fewshot_1ex3fcv_1745934134",
        "prompt": "fewshot",
        "model": "qwq-32b",
        "file": "fewshot_qwq-32b_guv-witwenrente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745934134/qwq-32b/output/parsed_output/fewshot_qwq-32b_guv-witwenrente.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745934134",
        "prompt": "fewshot",
        "model": "qwq-32b",
        "file": "fewshot_qwq-32b_aktivierung-und-eingliederung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745934134/qwq-32b/output/parsed_output/fewshot_qwq-32b_aktivierung-und-eingliederung.ttl",
        "valid_shacl": 0,
        "syntax_error": 0,
        "unexpected_error": 1,
        "validation_report": "QualifiedValueShapeConstraintComponent must have at least one sh:qualifiedValueShape predicate.\nFor reference, see https://www.w3.org/TR/shacl/#QualifiedValueShapeConstraintComponent",
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745934134",
        "prompt": "fewshot",
        "model": "qwq-32b",
        "file": "fewshot_qwq-32b_guv-uebergangsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745934134/qwq-32b/output/parsed_output/fewshot_qwq-32b_guv-uebergangsgeld.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (1):\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:class ]\n\tFocus Node: [ sh:class [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ] ; sh:message Literal(\"Does not meet requirement 'Work/commuting accident or occupational disease required'.\", lang=en) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasEvent ]\n\tValue Node: [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ]\n\tResult Path: sh:class\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 1,
        "validation_results": [
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:class ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "fewshot_1ex3fcv_1745934134",
        "prompt": "fewshot",
        "model": "qwq-32b",
        "file": "fewshot_qwq-32b_grundausbildung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745934134/qwq-32b/output/parsed_output/fewshot_qwq-32b_grundausbildung.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (1):\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:or ( [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasDisabilityType ; sh:qualifiedMinCount Literal(\"1\", datatype=xsd:integer) ; sh:qualifiedValueShape ff:DisabilityShape ] [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:atRiskOfDisabilityType ; sh:qualifiedMinCount Literal(\"1\", datatype=xsd:integer) ; sh:qualifiedValueShape ff:DisabilityShape ] ) ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:or ( [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasDisabilityType ; sh:qualifiedMinCount Literal(\"1\", datatype=xsd:integer) ; sh:qualifiedValueShape ff:DisabilityShape ] [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:atRiskOfDisabilityType ; sh:qualifiedMinCount Literal(\"1\", datatype=xsd:integer) ; sh:qualifiedValueShape ff:DisabilityShape ] ) ]->sh:path\n",
        "nof_validation_results": 1,
        "validation_results": [
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:or ( [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasDisabilityType ; sh:qualifiedMinCount Literal(\"1\", datatype=xsd:integer) ; sh:qualifiedValueShape ff:DisabilityShape ] [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:atRiskOfDisabilityType ; sh:qualifiedMinCount Literal(\"1\", datatype=xsd:integer) ; sh:qualifiedValueShape ff:DisabilityShape ] ) ]->sh:path"
            }
        ]
    },
    {
        "experiment": "fewshot_1ex3fcv_1745934134",
        "prompt": "fewshot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "fewshot_llama-3.1-sauerkrautlm-70b-instruct_kindergeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745934134/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/fewshot_llama-3.1-sauerkrautlm-70b-instruct_kindergeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745934134",
        "prompt": "fewshot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "fewshot_llama-3.1-sauerkrautlm-70b-instruct_grundausbildung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745934134/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/fewshot_llama-3.1-sauerkrautlm-70b-instruct_grundausbildung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745934134",
        "prompt": "fewshot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "fewshot_llama-3.1-sauerkrautlm-70b-instruct_arbeitslosengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745934134/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/fewshot_llama-3.1-sauerkrautlm-70b-instruct_arbeitslosengeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745934134",
        "prompt": "fewshot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "fewshot_llama-3.1-sauerkrautlm-70b-instruct_guv-waisenrente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745934134/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/fewshot_llama-3.1-sauerkrautlm-70b-instruct_guv-waisenrente.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745934134",
        "prompt": "fewshot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "fewshot_llama-3.1-sauerkrautlm-70b-instruct_kinderzuschlag.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745934134/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/fewshot_llama-3.1-sauerkrautlm-70b-instruct_kinderzuschlag.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745934134",
        "prompt": "fewshot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "fewshot_llama-3.1-sauerkrautlm-70b-instruct_grundsicherung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745934134/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/fewshot_llama-3.1-sauerkrautlm-70b-instruct_grundsicherung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745934134",
        "prompt": "fewshot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "fewshot_llama-3.1-sauerkrautlm-70b-instruct_guv-rentenabfindung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745934134/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/fewshot_llama-3.1-sauerkrautlm-70b-instruct_guv-rentenabfindung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745934134",
        "prompt": "fewshot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "fewshot_llama-3.1-sauerkrautlm-70b-instruct_guv-verletztengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745934134/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/fewshot_llama-3.1-sauerkrautlm-70b-instruct_guv-verletztengeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745934134",
        "prompt": "fewshot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "fewshot_llama-3.1-sauerkrautlm-70b-instruct_guv-rente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745934134/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/fewshot_llama-3.1-sauerkrautlm-70b-instruct_guv-rente.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (2):\nConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:message Literal(\"Does not meet requirement 'User's earning capacity is reduced due to a work accident.'\", lang=en) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:BlankNode ; sh:path [ sh:inversePath ff:resultsInTreatment ; sh:path ff:hasEarningCapacity ; sh:zeroOrMorePath ff:triggeringEvent ] ; sh:property [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:message Literal(\"Does not meet requirement 'Earning capacity reduction is permanent.'\", lang=en) ; sh:path ff:isPermanent ], [ sh:message Literal(\"Does not meet requirement 'Earning capacity is reduced by at least 20 percent.'\", lang=en) ; sh:minInclusive Literal(\"20\", datatype=xsd:integer) ; sh:path ff:reductionInPercent ] ]\n\tValue Node: [ sh:inversePath ff:resultsInTreatment ; sh:path ff:hasEarningCapacity ; sh:zeroOrMorePath ff:triggeringEvent ]\n\tResult Path: sh:path\n\tMessage: Node [ sh:inversePath ff:resultsInTreatment ; sh:path ff:hasEarningCapacity ; sh:zeroOrMorePath ff:triggeringEvent ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:message Literal(\"Does not meet requirement 'User's earning capacity is reduced due to a work accident.'\", lang=en) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:BlankNode ; sh:path [ sh:inversePath ff:resultsInTreatment ; sh:path ff:hasEarningCapacity ; sh:zeroOrMorePath ff:triggeringEvent ] ; sh:property [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:message Literal(\"Does not meet requirement 'Earning capacity reduction is permanent.'\", lang=en) ; sh:path ff:isPermanent ], [ sh:message Literal(\"Does not meet requirement 'Earning capacity is reduced by at least 20 percent.'\", lang=en) ; sh:minInclusive Literal(\"20\", datatype=xsd:integer) ; sh:path ff:reductionInPercent ] ]\n\tValue Node: [ sh:message Literal(\"Does not meet requirement 'User's earning capacity is reduced due to a work accident.'\", lang=en) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:BlankNode ; sh:path [ sh:inversePath ff:resultsInTreatment ; sh:path ff:hasEarningCapacity ; sh:zeroOrMorePath ff:triggeringEvent ] ; sh:property [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:message Literal(\"Does not meet requirement 'Earning capacity reduction is permanent.'\", lang=en) ; sh:path ff:isPermanent ], [ sh:message Literal(\"Does not meet requirement 'Earning capacity is reduced by at least 20 percent.'\", lang=en) ; sh:minInclusive Literal(\"20\", datatype=xsd:integer) ; sh:path ff:reductionInPercent ] ]\n\tMessage: Node [ sh:message Literal(\"Does not meet requirement 'User's earning capacity is reduced due to a work accident.'\", lang=en) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:BlankNode ; sh:path [ sh:inversePath ff:resultsInTreatment ; sh:path ff:hasEarningCapacity ; sh:zeroOrMorePath ff:triggeringEvent ] ; sh:property [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:message Literal(\"Does not meet requirement 'Earning capacity reduction is permanent.'\", lang=en) ; sh:path ff:isPermanent ], [ sh:message Literal(\"Does not meet requirement 'Earning capacity is reduced by at least 20 percent.'\", lang=en) ; sh:minInclusive Literal(\"20\", datatype=xsd:integer) ; sh:path ff:reductionInPercent ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\n",
        "nof_validation_results": 2,
        "validation_results": [
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Node [ sh:inversePath ff:resultsInTreatment ; sh:path ff:hasEarningCapacity ; sh:zeroOrMorePath ff:triggeringEvent ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:message Literal(\"Does not meet requirement 'User's earning capacity is reduced due to a work accident.'\", lang=en) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:BlankNode ; sh:path [ sh:inversePath ff:resultsInTreatment ; sh:path ff:hasEarningCapacity ; sh:zeroOrMorePath ff:triggeringEvent ] ; sh:property [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:message Literal(\"Does not meet requirement 'Earning capacity reduction is permanent.'\", lang=en) ; sh:path ff:isPermanent ], [ sh:message Literal(\"Does not meet requirement 'Earning capacity is reduced by at least 20 percent.'\", lang=en) ; sh:minInclusive Literal(\"20\", datatype=xsd:integer) ; sh:path ff:reductionInPercent ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            }
        ]
    },
    {
        "experiment": "fewshot_1ex3fcv_1745934134",
        "prompt": "fewshot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "fewshot_llama-3.1-sauerkrautlm-70b-instruct_guv-witwenrente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745934134/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/fewshot_llama-3.1-sauerkrautlm-70b-instruct_guv-witwenrente.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (1):\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:lessThan ]\n\tFocus Node: [ sh:lessThan [ sh:node ff:MarriageOrCivilPartnershipShape ; sh:path ff:hasDate ] ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:message Literal(\"Does not meet requirement 'Couple did not get married or form civil partnership after the insurance event and death within the first year of marriage or partnership'\", lang=en) ; sh:path ff:hasDate ]\n\tValue Node: [ sh:node ff:MarriageOrCivilPartnershipShape ; sh:path ff:hasDate ]\n\tResult Path: sh:lessThan\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 1,
        "validation_results": [
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:lessThan ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "fewshot_1ex3fcv_1745934134",
        "prompt": "fewshot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "fewshot_llama-3.1-sauerkrautlm-70b-instruct_insolvenzgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745934134/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/fewshot_llama-3.1-sauerkrautlm-70b-instruct_insolvenzgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745934134",
        "prompt": "fewshot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "fewshot_llama-3.1-sauerkrautlm-70b-instruct_aktivierung-und-eingliederung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745934134/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/fewshot_llama-3.1-sauerkrautlm-70b-instruct_aktivierung-und-eingliederung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745934134",
        "prompt": "fewshot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "fewshot_llama-3.1-sauerkrautlm-70b-instruct_guv-uebergangsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745934134/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/fewshot_llama-3.1-sauerkrautlm-70b-instruct_guv-uebergangsgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745934134",
        "prompt": "fewshot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "fewshot_llama-3.1-sauerkrautlm-70b-instruct_krankengeld-begleitperson.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745934134/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/fewshot_llama-3.1-sauerkrautlm-70b-instruct_krankengeld-begleitperson.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745934134",
        "prompt": "fewshot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "fewshot_llama-3.1-sauerkrautlm-70b-instruct_buergergeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745934134/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/fewshot_llama-3.1-sauerkrautlm-70b-instruct_buergergeld.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (1):\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:message Literal(\"Is not in need of assistance to meet their basic needs.\", lang=en) ; sh:path ff:canCoverPersonalBasicNeeds ]\n\tValue Node: Literal(\"false\" = False, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 1,
        "validation_results": [
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "fewshot_1ex3fcv_1745934134",
        "prompt": "fewshot",
        "model": "mistral-large-instruct",
        "file": "fewshot_mistral-large-instruct_grundausbildung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745934134/mistral-large-instruct/output/parsed_output/fewshot_mistral-large-instruct_grundausbildung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745934134",
        "prompt": "fewshot",
        "model": "mistral-large-instruct",
        "file": "fewshot_mistral-large-instruct_kindergeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745934134/mistral-large-instruct/output/parsed_output/fewshot_mistral-large-instruct_kindergeld.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (1):\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:lessThan ]\n\tFocus Node: [ sh:lessThan [ sh:datatype xsd:dateTime ; sh:value Literal(\"2019-08-01T00:00:00+00:00\" = 2019-08-01 00:00:00+00:00, datatype=xsd:dateTime) ] ; sh:message Literal(\"User must meet the requirements of the Freedom of Movement Act if they moved to Germany after August 2019.\", lang=en) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasDate ]\n\tValue Node: [ sh:datatype xsd:dateTime ; sh:value Literal(\"2019-08-01T00:00:00+00:00\" = 2019-08-01 00:00:00+00:00, datatype=xsd:dateTime) ]\n\tResult Path: sh:lessThan\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 1,
        "validation_results": [
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:lessThan ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "fewshot_1ex3fcv_1745934134",
        "prompt": "fewshot",
        "model": "mistral-large-instruct",
        "file": "fewshot_mistral-large-instruct_ausbildungsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745934134/mistral-large-instruct/output/parsed_output/fewshot_mistral-large-instruct_ausbildungsgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745934134",
        "prompt": "fewshot",
        "model": "mistral-large-instruct",
        "file": "fewshot_mistral-large-instruct_guv-rentenabfindung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745934134/mistral-large-instruct/output/parsed_output/fewshot_mistral-large-instruct_guv-rentenabfindung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745934134",
        "prompt": "fewshot",
        "model": "mistral-large-instruct",
        "file": "fewshot_mistral-large-instruct_arbeitslosengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745934134/mistral-large-instruct/output/parsed_output/fewshot_mistral-large-instruct_arbeitslosengeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745934134",
        "prompt": "fewshot",
        "model": "mistral-large-instruct",
        "file": "fewshot_mistral-large-instruct_guv-uebergangsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745934134/mistral-large-instruct/output/parsed_output/fewshot_mistral-large-instruct_guv-uebergangsgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745934134",
        "prompt": "fewshot",
        "model": "mistral-large-instruct",
        "file": "fewshot_mistral-large-instruct_guv-verletztengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745934134/mistral-large-instruct/output/parsed_output/fewshot_mistral-large-instruct_guv-verletztengeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745934134",
        "prompt": "fewshot",
        "model": "mistral-large-instruct",
        "file": "fewshot_mistral-large-instruct_grundsicherung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745934134/mistral-large-instruct/output/parsed_output/fewshot_mistral-large-instruct_grundsicherung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745934134",
        "prompt": "fewshot",
        "model": "mistral-large-instruct",
        "file": "fewshot_mistral-large-instruct_buergergeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745934134/mistral-large-instruct/output/parsed_output/fewshot_mistral-large-instruct_buergergeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745934134",
        "prompt": "fewshot",
        "model": "mistral-large-instruct",
        "file": "fewshot_mistral-large-instruct_guv-witwenrente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745934134/mistral-large-instruct/output/parsed_output/fewshot_mistral-large-instruct_guv-witwenrente.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745934134",
        "prompt": "fewshot",
        "model": "mistral-large-instruct",
        "file": "fewshot_mistral-large-instruct_aktivierung-und-eingliederung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745934134/mistral-large-instruct/output/parsed_output/fewshot_mistral-large-instruct_aktivierung-und-eingliederung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745934134",
        "prompt": "fewshot",
        "model": "mistral-large-instruct",
        "file": "fewshot_mistral-large-instruct_bildung-und-teilhabe.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745934134/mistral-large-instruct/output/parsed_output/fewshot_mistral-large-instruct_bildung-und-teilhabe.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (1):\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:lessThanOrEquals ]\n\tFocus Node: [ sh:lessThanOrEquals Literal(\"1000\", datatype=xsd:integer) ; sh:message Literal(\"Does not meet requirement 'Family gross income must be below a certain threshold.'\", lang=en) ; sh:path ff:familyGrossIncome ]\n\tValue Node: Literal(\"1000\", datatype=xsd:integer)\n\tResult Path: sh:lessThanOrEquals\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 1,
        "validation_results": [
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:lessThanOrEquals ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "fewshot_1ex3fcv_1745934134",
        "prompt": "fewshot",
        "model": "mistral-large-instruct",
        "file": "fewshot_mistral-large-instruct_kinderzuschlag.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745934134/mistral-large-instruct/output/parsed_output/fewshot_mistral-large-instruct_kinderzuschlag.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745934134",
        "prompt": "fewshot",
        "model": "mistral-large-instruct",
        "file": "fewshot_mistral-large-instruct_berufsausbildungsbeihilfe.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745934134/mistral-large-instruct/output/parsed_output/fewshot_mistral-large-instruct_berufsausbildungsbeihilfe.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745934134",
        "prompt": "fewshot",
        "model": "mistral-large-instruct",
        "file": "fewshot_mistral-large-instruct_krankengeld-begleitperson.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745934134/mistral-large-instruct/output/parsed_output/fewshot_mistral-large-instruct_krankengeld-begleitperson.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745934134",
        "prompt": "fewshot",
        "model": "mistral-large-instruct",
        "file": "fewshot_mistral-large-instruct_guv-waisenrente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745934134/mistral-large-instruct/output/parsed_output/fewshot_mistral-large-instruct_guv-waisenrente.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745934134",
        "prompt": "fewshot",
        "model": "mistral-large-instruct",
        "file": "fewshot_mistral-large-instruct_guv-rente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745934134/mistral-large-instruct/output/parsed_output/fewshot_mistral-large-instruct_guv-rente.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745934134",
        "prompt": "fewshot",
        "model": "mistral-large-instruct",
        "file": "fewshot_mistral-large-instruct_uebergangsgeld-behinderung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745934134/mistral-large-instruct/output/parsed_output/fewshot_mistral-large-instruct_uebergangsgeld-behinderung.ttl",
        "valid_shacl": 0,
        "syntax_error": 0,
        "unexpected_error": 1,
        "validation_report": "QualifiedValueShapeConstraintComponent must have at lease one sh:qualifiedMinCount or sh:qualifiedMaxCount\nFor reference, see https://www.w3.org/TR/shacl/#QualifiedValueShapeConstraintComponent",
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745934134",
        "prompt": "fewshot",
        "model": "mistral-large-instruct",
        "file": "fewshot_mistral-large-instruct_einstiegsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745934134/mistral-large-instruct/output/parsed_output/fewshot_mistral-large-instruct_einstiegsgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745934134",
        "prompt": "fewshot",
        "model": "mistral-large-instruct",
        "file": "fewshot_mistral-large-instruct_guv-kinderverletztengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745934134/mistral-large-instruct/output/parsed_output/fewshot_mistral-large-instruct_guv-kinderverletztengeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746031470",
        "prompt": "cot",
        "model": "qwq-32b",
        "file": "cot_qwq-32b_guv-witwenrente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746031470/qwq-32b/output/parsed_output/cot_qwq-32b_guv-witwenrente.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746031470",
        "prompt": "cot",
        "model": "qwq-32b",
        "file": "cot_qwq-32b_bildung-und-teilhabe.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746031470/qwq-32b/output/parsed_output/cot_qwq-32b_bildung-und-teilhabe.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746031470",
        "prompt": "cot",
        "model": "qwq-32b",
        "file": "cot_qwq-32b_einstiegsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746031470/qwq-32b/output/parsed_output/cot_qwq-32b_einstiegsgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746031470",
        "prompt": "cot",
        "model": "qwq-32b",
        "file": "cot_qwq-32b_guv-kinderverletztengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746031470/qwq-32b/output/parsed_output/cot_qwq-32b_guv-kinderverletztengeld.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (1):\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:class ]\n\tFocus Node: [ sh:class ( ff:SchoolAccident ff:KindergartenAccident ) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasEvent ]\n\tValue Node: ( ff:SchoolAccident ff:KindergartenAccident )\n\tResult Path: sh:class\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 1,
        "validation_results": [
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:class ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "cot_1ex3fcv_1746031470",
        "prompt": "cot",
        "model": "qwq-32b",
        "file": "cot_qwq-32b_guv-verletztengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746031470/qwq-32b/output/parsed_output/cot_qwq-32b_guv-verletztengeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746031470",
        "prompt": "cot",
        "model": "qwq-32b",
        "file": "cot_qwq-32b_arbeitslosengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746031470/qwq-32b/output/parsed_output/cot_qwq-32b_arbeitslosengeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746031470",
        "prompt": "cot",
        "model": "qwq-32b",
        "file": "cot_qwq-32b_insolvenzgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746031470/qwq-32b/output/parsed_output/cot_qwq-32b_insolvenzgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746031470",
        "prompt": "cot",
        "model": "qwq-32b",
        "file": "cot_qwq-32b_guv-uebergangsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746031470/qwq-32b/output/parsed_output/cot_qwq-32b_guv-uebergangsgeld.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (1):\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:class ]\n\tFocus Node: [ sh:class ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ; sh:message Literal(\"Does not meet requirement 'Approved accident or occupational disease event required'.\", lang=en) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasEvent ]\n\tValue Node: ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease )\n\tResult Path: sh:class\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 1,
        "validation_results": [
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:class ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "cot_1ex3fcv_1746031470",
        "prompt": "cot",
        "model": "qwq-32b",
        "file": "cot_qwq-32b_kinderzuschlag.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746031470/qwq-32b/output/parsed_output/cot_qwq-32b_kinderzuschlag.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746031470",
        "prompt": "cot",
        "model": "qwq-32b",
        "file": "cot_qwq-32b_guv-waisenrente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746031470/qwq-32b/output/parsed_output/cot_qwq-32b_guv-waisenrente.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746031470",
        "prompt": "cot",
        "model": "qwq-32b",
        "file": "cot_qwq-32b_krankengeld-begleitperson.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746031470/qwq-32b/output/parsed_output/cot_qwq-32b_krankengeld-begleitperson.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746031470",
        "prompt": "cot",
        "model": "qwq-32b",
        "file": "cot_qwq-32b_kindergeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746031470/qwq-32b/output/parsed_output/cot_qwq-32b_kindergeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746031470",
        "prompt": "cot",
        "model": "qwq-32b",
        "file": "cot_qwq-32b_aktivierung-und-eingliederung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746031470/qwq-32b/output/parsed_output/cot_qwq-32b_aktivierung-und-eingliederung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746031470",
        "prompt": "cot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "cot_llama-3.1-sauerkrautlm-70b-instruct_grundsicherung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746031470/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/cot_llama-3.1-sauerkrautlm-70b-instruct_grundsicherung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746031470",
        "prompt": "cot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "cot_llama-3.1-sauerkrautlm-70b-instruct_grundausbildung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746031470/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/cot_llama-3.1-sauerkrautlm-70b-instruct_grundausbildung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746031470",
        "prompt": "cot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "cot_llama-3.1-sauerkrautlm-70b-instruct_aktivierung-und-eingliederung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746031470/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/cot_llama-3.1-sauerkrautlm-70b-instruct_aktivierung-und-eingliederung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746031470",
        "prompt": "cot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "cot_llama-3.1-sauerkrautlm-70b-instruct_insolvenzgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746031470/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/cot_llama-3.1-sauerkrautlm-70b-instruct_insolvenzgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746031470",
        "prompt": "cot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "cot_llama-3.1-sauerkrautlm-70b-instruct_guv-verletztengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746031470/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/cot_llama-3.1-sauerkrautlm-70b-instruct_guv-verletztengeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746031470",
        "prompt": "cot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "cot_llama-3.1-sauerkrautlm-70b-instruct_guv-kinderverletztengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746031470/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/cot_llama-3.1-sauerkrautlm-70b-instruct_guv-kinderverletztengeld.ttl",
        "valid_shacl": 0,
        "syntax_error": 0,
        "unexpected_error": 1,
        "validation_report": "QualifiedValueShapeConstraintComponent must have at least one sh:qualifiedValueShape predicate.\nFor reference, see https://www.w3.org/TR/shacl/#QualifiedValueShapeConstraintComponent",
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746031470",
        "prompt": "cot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "cot_llama-3.1-sauerkrautlm-70b-instruct_ausbildungsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746031470/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/cot_llama-3.1-sauerkrautlm-70b-instruct_ausbildungsgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746031470",
        "prompt": "cot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "cot_llama-3.1-sauerkrautlm-70b-instruct_guv-waisenrente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746031470/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/cot_llama-3.1-sauerkrautlm-70b-instruct_guv-waisenrente.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746031470",
        "prompt": "cot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "cot_llama-3.1-sauerkrautlm-70b-instruct_guv-witwenrente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746031470/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/cot_llama-3.1-sauerkrautlm-70b-instruct_guv-witwenrente.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746031470",
        "prompt": "cot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "cot_llama-3.1-sauerkrautlm-70b-instruct_guv-rente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746031470/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/cot_llama-3.1-sauerkrautlm-70b-instruct_guv-rente.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (4):\nConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:message Literal(\"Does not meet requirement 'Reduction in earning capacity persists beyond the 26th week.'\", lang=en) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:minInclusive Literal(\"26\", datatype=xsd:integer) ; sh:path [ sh:inversePath ff:hasEvent, ff:triggeringEvent ; sh:path ff:WorkAccident, ff:reductionDurationInWeeks ] ]\n\tValue Node: [ sh:inversePath ff:hasEvent, ff:triggeringEvent ; sh:path ff:WorkAccident, ff:reductionDurationInWeeks ]\n\tResult Path: sh:path\n\tMessage: Node [ sh:inversePath ff:hasEvent, ff:triggeringEvent ; sh:path ff:WorkAccident, ff:reductionDurationInWeeks ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]\nConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:message Literal(\"Does not meet requirement 'User experienced a work accident.'\", lang=en) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inversePath ff:resultsInTreatment ; sh:path ff:WorkAccident ] ]\n\tValue Node: [ sh:inversePath ff:resultsInTreatment ; sh:path ff:WorkAccident ]\n\tResult Path: sh:path\n\tMessage: Node [ sh:inversePath ff:resultsInTreatment ; sh:path ff:WorkAccident ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:message Literal(\"Does not meet requirement 'Reduction in earning capacity persists beyond the 26th week.'\", lang=en) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:minInclusive Literal(\"26\", datatype=xsd:integer) ; sh:path [ sh:inversePath ff:hasEvent, ff:triggeringEvent ; sh:path ff:WorkAccident, ff:reductionDurationInWeeks ] ]\n\tValue Node: [ sh:message Literal(\"Does not meet requirement 'Reduction in earning capacity persists beyond the 26th week.'\", lang=en) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:minInclusive Literal(\"26\", datatype=xsd:integer) ; sh:path [ sh:inversePath ff:hasEvent, ff:triggeringEvent ; sh:path ff:WorkAccident, ff:reductionDurationInWeeks ] ]\n\tMessage: Node [ sh:message Literal(\"Does not meet requirement 'Reduction in earning capacity persists beyond the 26th week.'\", lang=en) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:minInclusive Literal(\"26\", datatype=xsd:integer) ; sh:path [ sh:inversePath ff:hasEvent, ff:triggeringEvent ; sh:path ff:WorkAccident, ff:reductionDurationInWeeks ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:message Literal(\"Does not meet requirement 'User experienced a work accident.'\", lang=en) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inversePath ff:resultsInTreatment ; sh:path ff:WorkAccident ] ]\n\tValue Node: [ sh:message Literal(\"Does not meet requirement 'User experienced a work accident.'\", lang=en) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inversePath ff:resultsInTreatment ; sh:path ff:WorkAccident ] ]\n\tMessage: Node [ sh:message Literal(\"Does not meet requirement 'User experienced a work accident.'\", lang=en) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inversePath ff:resultsInTreatment ; sh:path ff:WorkAccident ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\n",
        "nof_validation_results": 4,
        "validation_results": [
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Node [ sh:inversePath ff:hasEvent, ff:triggeringEvent ; sh:path ff:WorkAccident, ff:reductionDurationInWeeks ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Node [ sh:inversePath ff:resultsInTreatment ; sh:path ff:WorkAccident ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:message Literal(\"Does not meet requirement 'Reduction in earning capacity persists beyond the 26th week.'\", lang=en) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:minInclusive Literal(\"26\", datatype=xsd:integer) ; sh:path [ sh:inversePath ff:hasEvent, ff:triggeringEvent ; sh:path ff:WorkAccident, ff:reductionDurationInWeeks ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:message Literal(\"Does not meet requirement 'User experienced a work accident.'\", lang=en) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inversePath ff:resultsInTreatment ; sh:path ff:WorkAccident ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            }
        ]
    },
    {
        "experiment": "cot_1ex3fcv_1746031470",
        "prompt": "cot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "cot_llama-3.1-sauerkrautlm-70b-instruct_berufsausbildungsbeihilfe.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746031470/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/cot_llama-3.1-sauerkrautlm-70b-instruct_berufsausbildungsbeihilfe.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (2):\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ListShape ; sh:path sh:or ]\n\tFocus Node: ff:Berufsausbildungsbeihilfe\n\tValue Node: [ sh:property [ sh:hasValue ff:Married ; sh:message Literal(\"Does not meet requirement 'User is or was married.'\", lang=en) ; sh:path ff:hasMaritalStatus ], [ sh:message Literal(\"Does not meet requirement 'User has at least one child living with them.'\", lang=en) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasChild ] ]\n\tResult Path: sh:or\n\tMessage: Value does not conform to Shape shsh:ListShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in HasValueConstraintComponent (http://www.w3.org/ns/shacl#HasValueConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:property [ sh:hasValue ff:Married ; sh:message Literal(\"Does not meet requirement 'User is or was married.'\", lang=en) ; sh:path ff:hasMaritalStatus ], [ sh:message Literal(\"Does not meet requirement 'User has at least one child living with them.'\", lang=en) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasChild ] ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Node [ sh:property [ sh:hasValue ff:Married ; sh:message Literal(\"Does not meet requirement 'User is or was married.'\", lang=en) ; sh:path ff:hasMaritalStatus ], [ sh:message Literal(\"Does not meet requirement 'User has at least one child living with them.'\", lang=en) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasChild ] ]->[ sh:zeroOrMorePath rdf:rest ] does not contain a value in the set: ['rdf:nil']\n\t\tConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:property [ sh:hasValue ff:Married ; sh:message Literal(\"Does not meet requirement 'User is or was married.'\", lang=en) ; sh:path ff:hasMaritalStatus ], [ sh:message Literal(\"Does not meet requirement 'User has at least one child living with them.'\", lang=en) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasChild ] ]\n\t\t\tValue Node: [ sh:property [ sh:hasValue ff:Married ; sh:message Literal(\"Does not meet requirement 'User is or was married.'\", lang=en) ; sh:path ff:hasMaritalStatus ], [ sh:message Literal(\"Does not meet requirement 'User has at least one child living with them.'\", lang=en) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasChild ] ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Value does not conform to Shape shsh:ListNodeShape. See details for more information.\n\t\t\tDetails:\n\t\t\t\tConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\tSource Shape: shsh:ListNodeShape\n\t\t\t\t\tFocus Node: [ sh:property [ sh:hasValue ff:Married ; sh:message Literal(\"Does not meet requirement 'User is or was married.'\", lang=en) ; sh:path ff:hasMaritalStatus ], [ sh:message Literal(\"Does not meet requirement 'User has at least one child living with them.'\", lang=en) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasChild ] ]\n\t\t\t\t\tValue Node: [ sh:property [ sh:hasValue ff:Married ; sh:message Literal(\"Does not meet requirement 'User is or was married.'\", lang=en) ; sh:path ff:hasMaritalStatus ], [ sh:message Literal(\"Does not meet requirement 'User has at least one child living with them.'\", lang=en) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasChild ] ]\n\t\t\t\t\tMessage: Node [ sh:property [ sh:hasValue ff:Married ; sh:message Literal(\"Does not meet requirement 'User is or was married.'\", lang=en) ; sh:path ff:hasMaritalStatus ], [ sh:message Literal(\"Does not meet requirement 'User has at least one child living with them.'\", lang=en) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasChild ] ] must conform to one or more shapes in [ sh:hasValue rdf:nil ; sh:property [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:rest ] ] , [ sh:not [ sh:hasValue rdf:nil ] ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:rest ] ]\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ListShape ; sh:path sh:or ]\n\tFocus Node: [ sh:or [ sh:property [ sh:hasValue ff:AsylumSeekerBenefits ; sh:message Literal(\"Does not meet requirement 'User is not a German national with a residence permit under the Asylum Act.'\", lang=en) ; sh:path ff:hasResidencePermit ], [ sh:hasValue ff:Tolerated ; sh:path ff:hasResidenceStatus ; sh:property [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:message Literal(\"Does not meet requirement 'User is not a tolerated foreigner who has been staying in Germany for less than 15 months without interruption.'\", lang=en) ; sh:path ff:uninterruptedLegalStayForLessThan15Months ] ] ] ; sh:property [ sh:hasValue ff:Germany ; sh:message Literal(\"Does not meet requirement 'User is not a German national.'\", lang=en) ; sh:path ff:isNationalOf ] ]\n\tValue Node: [ sh:property [ sh:hasValue ff:AsylumSeekerBenefits ; sh:message Literal(\"Does not meet requirement 'User is not a German national with a residence permit under the Asylum Act.'\", lang=en) ; sh:path ff:hasResidencePermit ], [ sh:hasValue ff:Tolerated ; sh:path ff:hasResidenceStatus ; sh:property [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:message Literal(\"Does not meet requirement 'User is not a tolerated foreigner who has been staying in Germany for less than 15 months without interruption.'\", lang=en) ; sh:path ff:uninterruptedLegalStayForLessThan15Months ] ] ]\n\tResult Path: sh:or\n\tMessage: Value does not conform to Shape shsh:ListShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in HasValueConstraintComponent (http://www.w3.org/ns/shacl#HasValueConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:property [ sh:hasValue ff:AsylumSeekerBenefits ; sh:message Literal(\"Does not meet requirement 'User is not a German national with a residence permit under the Asylum Act.'\", lang=en) ; sh:path ff:hasResidencePermit ], [ sh:hasValue ff:Tolerated ; sh:path ff:hasResidenceStatus ; sh:property [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:message Literal(\"Does not meet requirement 'User is not a tolerated foreigner who has been staying in Germany for less than 15 months without interruption.'\", lang=en) ; sh:path ff:uninterruptedLegalStayForLessThan15Months ] ] ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Node [ sh:property [ sh:hasValue ff:AsylumSeekerBenefits ; sh:message Literal(\"Does not meet requirement 'User is not a German national with a residence permit under the Asylum Act.'\", lang=en) ; sh:path ff:hasResidencePermit ], [ sh:hasValue ff:Tolerated ; sh:path ff:hasResidenceStatus ; sh:property [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:message Literal(\"Does not meet requirement 'User is not a tolerated foreigner who has been staying in Germany for less than 15 months without interruption.'\", lang=en) ; sh:path ff:uninterruptedLegalStayForLessThan15Months ] ] ]->[ sh:zeroOrMorePath rdf:rest ] does not contain a value in the set: ['rdf:nil']\n\t\tConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ sh:property [ sh:hasValue ff:AsylumSeekerBenefits ; sh:message Literal(\"Does not meet requirement 'User is not a German national with a residence permit under the Asylum Act.'\", lang=en) ; sh:path ff:hasResidencePermit ], [ sh:hasValue ff:Tolerated ; sh:path ff:hasResidenceStatus ; sh:property [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:message Literal(\"Does not meet requirement 'User is not a tolerated foreigner who has been staying in Germany for less than 15 months without interruption.'\", lang=en) ; sh:path ff:uninterruptedLegalStayForLessThan15Months ] ] ]\n\t\t\tValue Node: [ sh:property [ sh:hasValue ff:AsylumSeekerBenefits ; sh:message Literal(\"Does not meet requirement 'User is not a German national with a residence permit under the Asylum Act.'\", lang=en) ; sh:path ff:hasResidencePermit ], [ sh:hasValue ff:Tolerated ; sh:path ff:hasResidenceStatus ; sh:property [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:message Literal(\"Does not meet requirement 'User is not a tolerated foreigner who has been staying in Germany for less than 15 months without interruption.'\", lang=en) ; sh:path ff:uninterruptedLegalStayForLessThan15Months ] ] ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Value does not conform to Shape shsh:ListNodeShape. See details for more information.\n\t\t\tDetails:\n\t\t\t\tConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\tSource Shape: shsh:ListNodeShape\n\t\t\t\t\tFocus Node: [ sh:property [ sh:hasValue ff:AsylumSeekerBenefits ; sh:message Literal(\"Does not meet requirement 'User is not a German national with a residence permit under the Asylum Act.'\", lang=en) ; sh:path ff:hasResidencePermit ], [ sh:hasValue ff:Tolerated ; sh:path ff:hasResidenceStatus ; sh:property [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:message Literal(\"Does not meet requirement 'User is not a tolerated foreigner who has been staying in Germany for less than 15 months without interruption.'\", lang=en) ; sh:path ff:uninterruptedLegalStayForLessThan15Months ] ] ]\n\t\t\t\t\tValue Node: [ sh:property [ sh:hasValue ff:AsylumSeekerBenefits ; sh:message Literal(\"Does not meet requirement 'User is not a German national with a residence permit under the Asylum Act.'\", lang=en) ; sh:path ff:hasResidencePermit ], [ sh:hasValue ff:Tolerated ; sh:path ff:hasResidenceStatus ; sh:property [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:message Literal(\"Does not meet requirement 'User is not a tolerated foreigner who has been staying in Germany for less than 15 months without interruption.'\", lang=en) ; sh:path ff:uninterruptedLegalStayForLessThan15Months ] ] ]\n\t\t\t\t\tMessage: Node [ sh:property [ sh:hasValue ff:AsylumSeekerBenefits ; sh:message Literal(\"Does not meet requirement 'User is not a German national with a residence permit under the Asylum Act.'\", lang=en) ; sh:path ff:hasResidencePermit ], [ sh:hasValue ff:Tolerated ; sh:path ff:hasResidenceStatus ; sh:property [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:message Literal(\"Does not meet requirement 'User is not a tolerated foreigner who has been staying in Germany for less than 15 months without interruption.'\", lang=en) ; sh:path ff:uninterruptedLegalStayForLessThan15Months ] ] ] must conform to one or more shapes in [ sh:hasValue rdf:nil ; sh:property [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:rest ] ] , [ sh:not [ sh:hasValue rdf:nil ] ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:rest ] ]\n",
        "nof_validation_results": 2,
        "validation_results": [
            {
                "source_shape": "[ sh:node shsh:ListShape ; sh:path sh:or ]",
                "message": "Value does not conform to Shape shsh:ListShape. See details for more information."
            },
            {
                "source_shape": "[ sh:node shsh:ListShape ; sh:path sh:or ]",
                "message": "Value does not conform to Shape shsh:ListShape. See details for more information."
            }
        ]
    },
    {
        "experiment": "cot_1ex3fcv_1746031470",
        "prompt": "cot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "cot_llama-3.1-sauerkrautlm-70b-instruct_guv-rentenabfindung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746031470/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/cot_llama-3.1-sauerkrautlm-70b-instruct_guv-rentenabfindung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746031470",
        "prompt": "cot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "cot_llama-3.1-sauerkrautlm-70b-instruct_kinderzuschlag.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746031470/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/cot_llama-3.1-sauerkrautlm-70b-instruct_kinderzuschlag.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746031470",
        "prompt": "cot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "cot_llama-3.1-sauerkrautlm-70b-instruct_einstiegsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746031470/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/cot_llama-3.1-sauerkrautlm-70b-instruct_einstiegsgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746031470",
        "prompt": "cot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "cot_llama-3.1-sauerkrautlm-70b-instruct_krankengeld-begleitperson.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746031470/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/cot_llama-3.1-sauerkrautlm-70b-instruct_krankengeld-begleitperson.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746031470",
        "prompt": "cot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "cot_llama-3.1-sauerkrautlm-70b-instruct_arbeitslosengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746031470/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/cot_llama-3.1-sauerkrautlm-70b-instruct_arbeitslosengeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746031470",
        "prompt": "cot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "cot_llama-3.1-sauerkrautlm-70b-instruct_bildung-und-teilhabe.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746031470/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/cot_llama-3.1-sauerkrautlm-70b-instruct_bildung-und-teilhabe.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (2):\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:canCoverBasicNeedsOfBenefitUnit ]\n\tValue Node: Literal(\"false\" = False, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:canCoverPersonalBasicNeeds ]\n\tValue Node: Literal(\"false\" = False, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 2,
        "validation_results": [
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "cot_1ex3fcv_1746031470",
        "prompt": "cot",
        "model": "mistral-large-instruct",
        "file": "cot_mistral-large-instruct_buergergeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746031470/mistral-large-instruct/output/parsed_output/cot_mistral-large-instruct_buergergeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746031470",
        "prompt": "cot",
        "model": "mistral-large-instruct",
        "file": "cot_mistral-large-instruct_einstiegsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746031470/mistral-large-instruct/output/parsed_output/cot_mistral-large-instruct_einstiegsgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746031470",
        "prompt": "cot",
        "model": "mistral-large-instruct",
        "file": "cot_mistral-large-instruct_guv-rente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746031470/mistral-large-instruct/output/parsed_output/cot_mistral-large-instruct_guv-rente.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746031470",
        "prompt": "cot",
        "model": "mistral-large-instruct",
        "file": "cot_mistral-large-instruct_insolvenzgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746031470/mistral-large-instruct/output/parsed_output/cot_mistral-large-instruct_insolvenzgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746031470",
        "prompt": "cot",
        "model": "mistral-large-instruct",
        "file": "cot_mistral-large-instruct_krankengeld-begleitperson.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746031470/mistral-large-instruct/output/parsed_output/cot_mistral-large-instruct_krankengeld-begleitperson.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746031470",
        "prompt": "cot",
        "model": "mistral-large-instruct",
        "file": "cot_mistral-large-instruct_berufsausbildungsbeihilfe.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746031470/mistral-large-instruct/output/parsed_output/cot_mistral-large-instruct_berufsausbildungsbeihilfe.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746031470",
        "prompt": "cot",
        "model": "mistral-large-instruct",
        "file": "cot_mistral-large-instruct_guv-verletztengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746031470/mistral-large-instruct/output/parsed_output/cot_mistral-large-instruct_guv-verletztengeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746031470",
        "prompt": "cot",
        "model": "mistral-large-instruct",
        "file": "cot_mistral-large-instruct_uebergangsgeld-behinderung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746031470/mistral-large-instruct/output/parsed_output/cot_mistral-large-instruct_uebergangsgeld-behinderung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746031470",
        "prompt": "cot",
        "model": "mistral-large-instruct",
        "file": "cot_mistral-large-instruct_bildung-und-teilhabe.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746031470/mistral-large-instruct/output/parsed_output/cot_mistral-large-instruct_bildung-und-teilhabe.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746031470",
        "prompt": "cot",
        "model": "mistral-large-instruct",
        "file": "cot_mistral-large-instruct_grundausbildung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746031470/mistral-large-instruct/output/parsed_output/cot_mistral-large-instruct_grundausbildung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746031470",
        "prompt": "cot",
        "model": "mistral-large-instruct",
        "file": "cot_mistral-large-instruct_guv-kinderverletztengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746031470/mistral-large-instruct/output/parsed_output/cot_mistral-large-instruct_guv-kinderverletztengeld.ttl",
        "valid_shacl": 0,
        "syntax_error": 0,
        "unexpected_error": 1,
        "validation_report": "QualifiedValueShapeConstraintComponent must have at least one sh:qualifiedValueShape predicate.\nFor reference, see https://www.w3.org/TR/shacl/#QualifiedValueShapeConstraintComponent",
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746031470",
        "prompt": "cot",
        "model": "mistral-large-instruct",
        "file": "cot_mistral-large-instruct_guv-waisenrente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746031470/mistral-large-instruct/output/parsed_output/cot_mistral-large-instruct_guv-waisenrente.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (1):\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:lessThanOrEquals ]\n\tFocus Node: [ sh:greaterThanOrEquals Literal(\"18\", datatype=xsd:integer) ; sh:lessThanOrEquals Literal(\"27\", datatype=xsd:integer) ; sh:message Literal(\"Does not meet age requirement '18 to under 27 years old'\", lang=en) ; sh:path ff:hasAge ]\n\tValue Node: Literal(\"27\", datatype=xsd:integer)\n\tResult Path: sh:lessThanOrEquals\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 1,
        "validation_results": [
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:lessThanOrEquals ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "cot_1ex3fcv_1746031470",
        "prompt": "cot",
        "model": "mistral-large-instruct",
        "file": "cot_mistral-large-instruct_guv-rentenabfindung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746031470/mistral-large-instruct/output/parsed_output/cot_mistral-large-instruct_guv-rentenabfindung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746031470",
        "prompt": "cot",
        "model": "mistral-large-instruct",
        "file": "cot_mistral-large-instruct_kindergeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746031470/mistral-large-instruct/output/parsed_output/cot_mistral-large-instruct_kindergeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746031470",
        "prompt": "cot",
        "model": "mistral-large-instruct",
        "file": "cot_mistral-large-instruct_aktivierung-und-eingliederung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746031470/mistral-large-instruct/output/parsed_output/cot_mistral-large-instruct_aktivierung-und-eingliederung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746031470",
        "prompt": "cot",
        "model": "mistral-large-instruct",
        "file": "cot_mistral-large-instruct_grundsicherung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746031470/mistral-large-instruct/output/parsed_output/cot_mistral-large-instruct_grundsicherung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746031470",
        "prompt": "cot",
        "model": "mistral-large-instruct",
        "file": "cot_mistral-large-instruct_guv-witwenrente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746031470/mistral-large-instruct/output/parsed_output/cot_mistral-large-instruct_guv-witwenrente.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746031470",
        "prompt": "cot",
        "model": "mistral-large-instruct",
        "file": "cot_mistral-large-instruct_kinderzuschlag.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746031470/mistral-large-instruct/output/parsed_output/cot_mistral-large-instruct_kinderzuschlag.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746031470",
        "prompt": "cot",
        "model": "mistral-large-instruct",
        "file": "cot_mistral-large-instruct_guv-uebergangsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746031470/mistral-large-instruct/output/parsed_output/cot_mistral-large-instruct_guv-uebergangsgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745913822",
        "prompt": "fewshot",
        "model": "qwq-32b",
        "file": "fewshot_qwq-32b_guv-kinderverletztengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745913822/qwq-32b/output/parsed_output/fewshot_qwq-32b_guv-kinderverletztengeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745913822",
        "prompt": "fewshot",
        "model": "qwq-32b",
        "file": "fewshot_qwq-32b_insolvenzgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745913822/qwq-32b/output/parsed_output/fewshot_qwq-32b_insolvenzgeld.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (6):\nConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:class ff:InsolvencyProceeding ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ( ff:hasEvent ) ]\n\tValue Node: ( ff:hasEvent )\n\tResult Path: sh:path\n\tMessage: Node ( ff:hasEvent ) must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]\nConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:class ff:InsolvencyApplication ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ( ff:hasEvent ) ]\n\tValue Node: ( ff:hasEvent )\n\tResult Path: sh:path\n\tMessage: Node ( ff:hasEvent ) must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]\nConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:class ff:DiscontinuationOfBusiness ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ( ff:hasEvent ) ]\n\tValue Node: ( ff:hasEvent )\n\tResult Path: sh:path\n\tMessage: Node ( ff:hasEvent ) must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:class ff:InsolvencyProceeding ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ( ff:hasEvent ) ]\n\tValue Node: [ sh:class ff:InsolvencyProceeding ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ( ff:hasEvent ) ]\n\tMessage: Node [ sh:class ff:InsolvencyProceeding ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ( ff:hasEvent ) ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:class ff:DiscontinuationOfBusiness ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ( ff:hasEvent ) ]\n\tValue Node: [ sh:class ff:DiscontinuationOfBusiness ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ( ff:hasEvent ) ]\n\tMessage: Node [ sh:class ff:DiscontinuationOfBusiness ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ( ff:hasEvent ) ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:class ff:InsolvencyApplication ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ( ff:hasEvent ) ]\n\tValue Node: [ sh:class ff:InsolvencyApplication ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ( ff:hasEvent ) ]\n\tMessage: Node [ sh:class ff:InsolvencyApplication ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ( ff:hasEvent ) ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\n",
        "nof_validation_results": 6,
        "validation_results": [
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Node ( ff:hasEvent ) must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Node ( ff:hasEvent ) must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Node ( ff:hasEvent ) must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:class ff:InsolvencyProceeding ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ( ff:hasEvent ) ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:class ff:DiscontinuationOfBusiness ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ( ff:hasEvent ) ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:class ff:InsolvencyApplication ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ( ff:hasEvent ) ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            }
        ]
    },
    {
        "experiment": "fewshot_1ex3fcv_1745913822",
        "prompt": "fewshot",
        "model": "qwq-32b",
        "file": "fewshot_qwq-32b_kindergeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745913822/qwq-32b/output/parsed_output/fewshot_qwq-32b_kindergeld.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (1):\nConstraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:or ( [ sh:or ( [ sh:hasValue ff:Germany ] [ sh:class ff:EEAplusCH ] ) ; sh:path ff:isNationalOf ] [ sh:and ( [ sh:not [ sh:or ( [ sh:hasValue ff:Germany ] [ sh:class ff:EEAplusCH ] ) ; sh:path ff:isNationalOf ] ] [ sh:or ( [ sh:path ff:hasResidencePermit ; sh:property [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:entitlesToEmployment ] ] [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:recognizedRefugee ] [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:entitledToAsylum ] ) ] ) ] ) ]\n\tResult Path: sh:path\n\tMessage: Less than 1 values on [ sh:or ( [ sh:or ( [ sh:hasValue ff:Germany ] [ sh:class ff:EEAplusCH ] ) ; sh:path ff:isNationalOf ] [ sh:and ( [ sh:not [ sh:or ( [ sh:hasValue ff:Germany ] [ sh:class ff:EEAplusCH ] ) ; sh:path ff:isNationalOf ] ] [ sh:or ( [ sh:path ff:hasResidencePermit ; sh:property [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:entitlesToEmployment ] ] [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:recognizedRefugee ] [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:entitledToAsylum ] ) ] ) ] ) ]->sh:path\n",
        "nof_validation_results": 1,
        "validation_results": [
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Less than 1 values on [ sh:or ( [ sh:or ( [ sh:hasValue ff:Germany ] [ sh:class ff:EEAplusCH ] ) ; sh:path ff:isNationalOf ] [ sh:and ( [ sh:not [ sh:or ( [ sh:hasValue ff:Germany ] [ sh:class ff:EEAplusCH ] ) ; sh:path ff:isNationalOf ] ] [ sh:or ( [ sh:path ff:hasResidencePermit ; sh:property [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:entitlesToEmployment ] ] [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:recognizedRefugee ] [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:entitledToAsylum ] ) ] ) ] ) ]->sh:path"
            }
        ]
    },
    {
        "experiment": "fewshot_1ex3fcv_1745913822",
        "prompt": "fewshot",
        "model": "qwq-32b",
        "file": "fewshot_qwq-32b_kinderzuschlag.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745913822/qwq-32b/output/parsed_output/fewshot_qwq-32b_kinderzuschlag.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745913822",
        "prompt": "fewshot",
        "model": "qwq-32b",
        "file": "fewshot_qwq-32b_guv-waisenrente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745913822/qwq-32b/output/parsed_output/fewshot_qwq-32b_guv-waisenrente.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (4):\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ShapeShape ; sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ]\n\tFocus Node: ( [ sh:class [ sh:or ( ff:School ff:VocationalTraining ) ] ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:participates ] [ sh:and ( [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:cannotSupportThemselvesBecause ; sh:qualifiedValueShape [ sh:property [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:reducesWorkProspectsPermanently ] ] ] [ sh:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:canCoverPersonalBasicNeeds ] ) ] [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isInTransitionalPeriod ] )\n\tValue Node: [ sh:class [ sh:or ( ff:School ff:VocationalTraining ) ] ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:participates ]\n\tResult Path: ( [ sh:zeroOrMorePath rdf:rest ] rdf:first )\n\tMessage: Value does not conform to Shape shsh:ShapeShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:class ]\n\t\t\tFocus Node: [ sh:class [ sh:or ( ff:School ff:VocationalTraining ) ] ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:participates ]\n\t\t\tValue Node: [ sh:or ( ff:School ff:VocationalTraining ) ]\n\t\t\tResult Path: sh:class\n\t\t\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:class ]\n\tFocus Node: [ sh:class [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ] ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:causeOfDeath ]\n\tValue Node: [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ]\n\tResult Path: sh:class\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:class ]\n\tFocus Node: [ sh:class [ sh:or ( ff:School ff:VocationalTraining ) ] ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:participates ]\n\tValue Node: [ sh:or ( ff:School ff:VocationalTraining ) ]\n\tResult Path: sh:class\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:class ]\n\tFocus Node: [ sh:class [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ] ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:causeOfDeath ]\n\tValue Node: [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ]\n\tResult Path: sh:class\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 4,
        "validation_results": [
            {
                "source_shape": "[ sh:node shsh:ShapeShape ; sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ]",
                "message": "Value does not conform to Shape shsh:ShapeShape. See details for more information."
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:class ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:class ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:class ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "fewshot_1ex3fcv_1745913822",
        "prompt": "fewshot",
        "model": "qwq-32b",
        "file": "fewshot_qwq-32b_arbeitslosengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745913822/qwq-32b/output/parsed_output/fewshot_qwq-32b_arbeitslosengeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745913822",
        "prompt": "fewshot",
        "model": "qwq-32b",
        "file": "fewshot_qwq-32b_guv-verletztengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745913822/qwq-32b/output/parsed_output/fewshot_qwq-32b_guv-verletztengeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745913822",
        "prompt": "fewshot",
        "model": "qwq-32b",
        "file": "fewshot_qwq-32b_guv-witwenrente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745913822/qwq-32b/output/parsed_output/fewshot_qwq-32b_guv-witwenrente.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745913822",
        "prompt": "fewshot",
        "model": "qwq-32b",
        "file": "fewshot_qwq-32b_aktivierung-und-eingliederung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745913822/qwq-32b/output/parsed_output/fewshot_qwq-32b_aktivierung-und-eingliederung.ttl",
        "valid_shacl": 0,
        "syntax_error": 0,
        "unexpected_error": 1,
        "validation_report": "QualifiedValueShapeConstraintComponent must have at least one sh:qualifiedValueShape predicate.\nFor reference, see https://www.w3.org/TR/shacl/#QualifiedValueShapeConstraintComponent",
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745913822",
        "prompt": "fewshot",
        "model": "qwq-32b",
        "file": "fewshot_qwq-32b_guv-uebergangsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745913822/qwq-32b/output/parsed_output/fewshot_qwq-32b_guv-uebergangsgeld.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (1):\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:class ]\n\tFocus Node: [ sh:class [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ] ; sh:message Literal(\"Does not meet requirement 'User has a work/commute accident or occupational disease'.\", lang=en) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasEvent ]\n\tValue Node: [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ]\n\tResult Path: sh:class\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 1,
        "validation_results": [
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:class ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "fewshot_1ex3fcv_1745913822",
        "prompt": "fewshot",
        "model": "qwq-32b",
        "file": "fewshot_qwq-32b_grundausbildung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745913822/qwq-32b/output/parsed_output/fewshot_qwq-32b_grundausbildung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745913822",
        "prompt": "fewshot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "fewshot_llama-3.1-sauerkrautlm-70b-instruct_kindergeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745913822/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/fewshot_llama-3.1-sauerkrautlm-70b-instruct_kindergeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745913822",
        "prompt": "fewshot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "fewshot_llama-3.1-sauerkrautlm-70b-instruct_berufsausbildungsbeihilfe.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745913822/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/fewshot_llama-3.1-sauerkrautlm-70b-instruct_berufsausbildungsbeihilfe.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745913822",
        "prompt": "fewshot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "fewshot_llama-3.1-sauerkrautlm-70b-instruct_grundausbildung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745913822/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/fewshot_llama-3.1-sauerkrautlm-70b-instruct_grundausbildung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745913822",
        "prompt": "fewshot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "fewshot_llama-3.1-sauerkrautlm-70b-instruct_ausbildungsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745913822/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/fewshot_llama-3.1-sauerkrautlm-70b-instruct_ausbildungsgeld.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (2):\nConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]\n\tFocus Node: [ sh:hasValue ff:B100019_LB_102716305 ; sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:message Literal(\"Does not meet requirement 'User does not receive statutory accident insurance transitional allowance.'\", lang=en) ; sh:path [ sh:inverse ff:receivesBenefit ] ]\n\tValue Node: [ sh:inverse ff:receivesBenefit ]\n\tResult Path: sh:path\n\tMessage: Node [ sh:inverse ff:receivesBenefit ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:hasValue ff:B100019_LB_102716305 ; sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:message Literal(\"Does not meet requirement 'User does not receive statutory accident insurance transitional allowance.'\", lang=en) ; sh:path [ sh:inverse ff:receivesBenefit ] ]\n\tValue Node: [ sh:hasValue ff:B100019_LB_102716305 ; sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:message Literal(\"Does not meet requirement 'User does not receive statutory accident insurance transitional allowance.'\", lang=en) ; sh:path [ sh:inverse ff:receivesBenefit ] ]\n\tMessage: Node [ sh:hasValue ff:B100019_LB_102716305 ; sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:message Literal(\"Does not meet requirement 'User does not receive statutory accident insurance transitional allowance.'\", lang=en) ; sh:path [ sh:inverse ff:receivesBenefit ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\n",
        "nof_validation_results": 2,
        "validation_results": [
            {
                "source_shape": "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]",
                "message": "Node [ sh:inverse ff:receivesBenefit ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:hasValue ff:B100019_LB_102716305 ; sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:message Literal(\"Does not meet requirement 'User does not receive statutory accident insurance transitional allowance.'\", lang=en) ; sh:path [ sh:inverse ff:receivesBenefit ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            }
        ]
    },
    {
        "experiment": "fewshot_1ex3fcv_1745913822",
        "prompt": "fewshot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "fewshot_llama-3.1-sauerkrautlm-70b-instruct_guv-waisenrente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745913822/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/fewshot_llama-3.1-sauerkrautlm-70b-instruct_guv-waisenrente.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (3):\nConstraint Violation in MaxCountConstraintComponent (http://www.w3.org/ns/shacl#MaxCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path sh:maxCount ]\n\tFocus Node: ff:DeceasedPersonNode\n\tResult Path: sh:maxCount\n\tMessage: More than 0 values on ff:DeceasedPersonNode->sh:maxCount\nConstraint Violation in MaxCountConstraintComponent (http://www.w3.org/ns/shacl#MaxCountConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path sh:minCount ]\n\tFocus Node: ff:DeceasedPersonNode\n\tResult Path: sh:minCount\n\tMessage: More than 0 values on ff:DeceasedPersonNode->sh:minCount\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: ff:DeceasedPersonNode\n\tValue Node: ff:DeceasedPersonNode\n\tMessage: Node ff:DeceasedPersonNode must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\n",
        "nof_validation_results": 3,
        "validation_results": [
            {
                "source_shape": "[ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path sh:maxCount ]",
                "message": "More than 0 values on ff:DeceasedPersonNode->sh:maxCount"
            },
            {
                "source_shape": "[ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path sh:minCount ]",
                "message": "More than 0 values on ff:DeceasedPersonNode->sh:minCount"
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node ff:DeceasedPersonNode must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            }
        ]
    },
    {
        "experiment": "fewshot_1ex3fcv_1745913822",
        "prompt": "fewshot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "fewshot_llama-3.1-sauerkrautlm-70b-instruct_bildung-und-teilhabe.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745913822/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/fewshot_llama-3.1-sauerkrautlm-70b-instruct_bildung-und-teilhabe.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745913822",
        "prompt": "fewshot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "fewshot_llama-3.1-sauerkrautlm-70b-instruct_kinderzuschlag.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745913822/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/fewshot_llama-3.1-sauerkrautlm-70b-instruct_kinderzuschlag.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745913822",
        "prompt": "fewshot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "fewshot_llama-3.1-sauerkrautlm-70b-instruct_grundsicherung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745913822/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/fewshot_llama-3.1-sauerkrautlm-70b-instruct_grundsicherung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745913822",
        "prompt": "fewshot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "fewshot_llama-3.1-sauerkrautlm-70b-instruct_guv-rentenabfindung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745913822/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/fewshot_llama-3.1-sauerkrautlm-70b-instruct_guv-rentenabfindung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745913822",
        "prompt": "fewshot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "fewshot_llama-3.1-sauerkrautlm-70b-instruct_guv-verletztengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745913822/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/fewshot_llama-3.1-sauerkrautlm-70b-instruct_guv-verletztengeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745913822",
        "prompt": "fewshot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "fewshot_llama-3.1-sauerkrautlm-70b-instruct_guv-rente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745913822/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/fewshot_llama-3.1-sauerkrautlm-70b-instruct_guv-rente.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745913822",
        "prompt": "fewshot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "fewshot_llama-3.1-sauerkrautlm-70b-instruct_guv-witwenrente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745913822/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/fewshot_llama-3.1-sauerkrautlm-70b-instruct_guv-witwenrente.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745913822",
        "prompt": "fewshot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "fewshot_llama-3.1-sauerkrautlm-70b-instruct_uebergangsgeld-behinderung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745913822/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/fewshot_llama-3.1-sauerkrautlm-70b-instruct_uebergangsgeld-behinderung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745913822",
        "prompt": "fewshot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "fewshot_llama-3.1-sauerkrautlm-70b-instruct_insolvenzgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745913822/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/fewshot_llama-3.1-sauerkrautlm-70b-instruct_insolvenzgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745913822",
        "prompt": "fewshot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "fewshot_llama-3.1-sauerkrautlm-70b-instruct_guv-kinderverletztengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745913822/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/fewshot_llama-3.1-sauerkrautlm-70b-instruct_guv-kinderverletztengeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745913822",
        "prompt": "fewshot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "fewshot_llama-3.1-sauerkrautlm-70b-instruct_aktivierung-und-eingliederung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745913822/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/fewshot_llama-3.1-sauerkrautlm-70b-instruct_aktivierung-und-eingliederung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745913822",
        "prompt": "fewshot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "fewshot_llama-3.1-sauerkrautlm-70b-instruct_guv-uebergangsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745913822/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/fewshot_llama-3.1-sauerkrautlm-70b-instruct_guv-uebergangsgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745913822",
        "prompt": "fewshot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "fewshot_llama-3.1-sauerkrautlm-70b-instruct_einstiegsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745913822/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/fewshot_llama-3.1-sauerkrautlm-70b-instruct_einstiegsgeld.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (2):\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:lessThan ]\n\tFocus Node: [ sh:lessThan [ sh:nodeKind sh:BlankNode ; sh:path ff:hasEmployment ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasDate ] ] ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:message Literal(\"Does not meet requirement 'User applies for the entry allowance before starting the new job'\", lang=en) ; sh:path ff:hasDate ]\n\tValue Node: [ sh:nodeKind sh:BlankNode ; sh:path ff:hasEmployment ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasDate ] ]\n\tResult Path: sh:lessThan\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ListShape ; sh:path sh:or ]\n\tFocus Node: ff:EinstiegsgeldShape\n\tValue Node: [ _:n7242aab016df43bdbfd52373aabe66cfb14 [ sh:property [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:BlankNodeOrIRI ; sh:path ff:hasEmployment ] ] ; sh:message Literal(\"Does not meet additional requirements for self-employment/start-ups\", lang=en) ]\n\tResult Path: sh:or\n\tMessage: Value does not conform to Shape shsh:ListShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in HasValueConstraintComponent (http://www.w3.org/ns/shacl#HasValueConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ _:n7242aab016df43bdbfd52373aabe66cfb14 [ sh:property [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:BlankNodeOrIRI ; sh:path ff:hasEmployment ] ] ; sh:message Literal(\"Does not meet additional requirements for self-employment/start-ups\", lang=en) ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Node [ _:n7242aab016df43bdbfd52373aabe66cfb14 [ sh:property [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:BlankNodeOrIRI ; sh:path ff:hasEmployment ] ] ; sh:message Literal(\"Does not meet additional requirements for self-employment/start-ups\", lang=en) ]->[ sh:zeroOrMorePath rdf:rest ] does not contain a value in the set: ['rdf:nil']\n\t\tConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ rdfs:comment Literal(\"Each list member (including this node) must be have the shape shsh:ListNodeShape.\", lang=en) ; sh:hasValue rdf:nil ; sh:node shsh:ListNodeShape ; sh:path [ sh:zeroOrMorePath rdf:rest ] ]\n\t\t\tFocus Node: [ _:n7242aab016df43bdbfd52373aabe66cfb14 [ sh:property [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:BlankNodeOrIRI ; sh:path ff:hasEmployment ] ] ; sh:message Literal(\"Does not meet additional requirements for self-employment/start-ups\", lang=en) ]\n\t\t\tValue Node: [ _:n7242aab016df43bdbfd52373aabe66cfb14 [ sh:property [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:BlankNodeOrIRI ; sh:path ff:hasEmployment ] ] ; sh:message Literal(\"Does not meet additional requirements for self-employment/start-ups\", lang=en) ]\n\t\t\tResult Path: [ sh:zeroOrMorePath rdf:rest ]\n\t\t\tMessage: Value does not conform to Shape shsh:ListNodeShape. See details for more information.\n\t\t\tDetails:\n\t\t\t\tConstraint Violation in OrConstraintComponent (http://www.w3.org/ns/shacl#OrConstraintComponent):\n\t\t\t\t\tSeverity: sh:Violation\n\t\t\t\t\tSource Shape: shsh:ListNodeShape\n\t\t\t\t\tFocus Node: [ _:n7242aab016df43bdbfd52373aabe66cfb14 [ sh:property [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:BlankNodeOrIRI ; sh:path ff:hasEmployment ] ] ; sh:message Literal(\"Does not meet additional requirements for self-employment/start-ups\", lang=en) ]\n\t\t\t\t\tValue Node: [ _:n7242aab016df43bdbfd52373aabe66cfb14 [ sh:property [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:BlankNodeOrIRI ; sh:path ff:hasEmployment ] ] ; sh:message Literal(\"Does not meet additional requirements for self-employment/start-ups\", lang=en) ]\n\t\t\t\t\tMessage: Node [ _:n7242aab016df43bdbfd52373aabe66cfb14 [ sh:property [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:BlankNodeOrIRI ; sh:path ff:hasEmployment ] ] ; sh:message Literal(\"Does not meet additional requirements for self-employment/start-ups\", lang=en) ] must conform to one or more shapes in [ sh:hasValue rdf:nil ; sh:property [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path rdf:rest ] ] , [ sh:not [ sh:hasValue rdf:nil ] ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:first ], [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path rdf:rest ] ]\n",
        "nof_validation_results": 2,
        "validation_results": [
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:lessThan ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:node shsh:ListShape ; sh:path sh:or ]",
                "message": "Value does not conform to Shape shsh:ListShape. See details for more information."
            }
        ]
    },
    {
        "experiment": "fewshot_1ex3fcv_1745913822",
        "prompt": "fewshot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "fewshot_llama-3.1-sauerkrautlm-70b-instruct_krankengeld-begleitperson.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745913822/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/fewshot_llama-3.1-sauerkrautlm-70b-instruct_krankengeld-begleitperson.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745913822",
        "prompt": "fewshot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "fewshot_llama-3.1-sauerkrautlm-70b-instruct_buergergeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745913822/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/fewshot_llama-3.1-sauerkrautlm-70b-instruct_buergergeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745913822",
        "prompt": "fewshot",
        "model": "mistral-large-instruct",
        "file": "fewshot_mistral-large-instruct_grundausbildung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745913822/mistral-large-instruct/output/parsed_output/fewshot_mistral-large-instruct_grundausbildung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745913822",
        "prompt": "fewshot",
        "model": "mistral-large-instruct",
        "file": "fewshot_mistral-large-instruct_kindergeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745913822/mistral-large-instruct/output/parsed_output/fewshot_mistral-large-instruct_kindergeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745913822",
        "prompt": "fewshot",
        "model": "mistral-large-instruct",
        "file": "fewshot_mistral-large-instruct_guv-rentenabfindung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745913822/mistral-large-instruct/output/parsed_output/fewshot_mistral-large-instruct_guv-rentenabfindung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745913822",
        "prompt": "fewshot",
        "model": "mistral-large-instruct",
        "file": "fewshot_mistral-large-instruct_arbeitslosengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745913822/mistral-large-instruct/output/parsed_output/fewshot_mistral-large-instruct_arbeitslosengeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745913822",
        "prompt": "fewshot",
        "model": "mistral-large-instruct",
        "file": "fewshot_mistral-large-instruct_guv-uebergangsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745913822/mistral-large-instruct/output/parsed_output/fewshot_mistral-large-instruct_guv-uebergangsgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745913822",
        "prompt": "fewshot",
        "model": "mistral-large-instruct",
        "file": "fewshot_mistral-large-instruct_guv-verletztengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745913822/mistral-large-instruct/output/parsed_output/fewshot_mistral-large-instruct_guv-verletztengeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745913822",
        "prompt": "fewshot",
        "model": "mistral-large-instruct",
        "file": "fewshot_mistral-large-instruct_grundsicherung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745913822/mistral-large-instruct/output/parsed_output/fewshot_mistral-large-instruct_grundsicherung.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (4):\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ShapeShape ; sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ]\n\tFocus Node: ( [ sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ] [ sh:and ( [ sh:hasValue ff:ReducedEarningCapacity ; sh:path ff:hasEarningCapacity ; sh:property [ sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isPermanent ] ] [ sh:or ( [ sh:class ff:EntryProcedureAndVocationalTrainingArea ; sh:path ff:participates ] [ sh:class ff:VocationalTraining ; sh:path ff:participates ] ) ] ) ; sh:minExclusive Literal(\"18\", datatype=xsd:integer) ; sh:minInclusive Literal(\"18\", datatype=xsd:integer) ; sh:path ff:hasAge ] )\n\tValue Node: [ sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ]\n\tResult Path: ( [ sh:zeroOrMorePath rdf:rest ] rdf:first )\n\tMessage: Value does not conform to Shape shsh:ShapeShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\t\t\tFocus Node: [ sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ]\n\t\t\tValue Node: Literal(\"true\" = True, datatype=xsd:boolean)\n\t\t\tResult Path: sh:equals\n\t\t\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ]\n\tValue Node: Literal(\"true\" = True, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:message Literal(\"User can cover basic needs of benefit unit.\", lang=en) ; sh:path ff:canCoverBasicNeedsOfBenefitUnit ]\n\tValue Node: Literal(\"false\" = False, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isPermanent ]\n\tValue Node: Literal(\"true\" = True, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 4,
        "validation_results": [
            {
                "source_shape": "[ sh:node shsh:ShapeShape ; sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ]",
                "message": "Value does not conform to Shape shsh:ShapeShape. See details for more information."
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "fewshot_1ex3fcv_1745913822",
        "prompt": "fewshot",
        "model": "mistral-large-instruct",
        "file": "fewshot_mistral-large-instruct_buergergeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745913822/mistral-large-instruct/output/parsed_output/fewshot_mistral-large-instruct_buergergeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745913822",
        "prompt": "fewshot",
        "model": "mistral-large-instruct",
        "file": "fewshot_mistral-large-instruct_guv-witwenrente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745913822/mistral-large-instruct/output/parsed_output/fewshot_mistral-large-instruct_guv-witwenrente.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745913822",
        "prompt": "fewshot",
        "model": "mistral-large-instruct",
        "file": "fewshot_mistral-large-instruct_aktivierung-und-eingliederung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745913822/mistral-large-instruct/output/parsed_output/fewshot_mistral-large-instruct_aktivierung-und-eingliederung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745913822",
        "prompt": "fewshot",
        "model": "mistral-large-instruct",
        "file": "fewshot_mistral-large-instruct_insolvenzgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745913822/mistral-large-instruct/output/parsed_output/fewshot_mistral-large-instruct_insolvenzgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745913822",
        "prompt": "fewshot",
        "model": "mistral-large-instruct",
        "file": "fewshot_mistral-large-instruct_bildung-und-teilhabe.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745913822/mistral-large-instruct/output/parsed_output/fewshot_mistral-large-instruct_bildung-und-teilhabe.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745913822",
        "prompt": "fewshot",
        "model": "mistral-large-instruct",
        "file": "fewshot_mistral-large-instruct_kinderzuschlag.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745913822/mistral-large-instruct/output/parsed_output/fewshot_mistral-large-instruct_kinderzuschlag.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745913822",
        "prompt": "fewshot",
        "model": "mistral-large-instruct",
        "file": "fewshot_mistral-large-instruct_berufsausbildungsbeihilfe.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745913822/mistral-large-instruct/output/parsed_output/fewshot_mistral-large-instruct_berufsausbildungsbeihilfe.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745913822",
        "prompt": "fewshot",
        "model": "mistral-large-instruct",
        "file": "fewshot_mistral-large-instruct_guv-waisenrente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745913822/mistral-large-instruct/output/parsed_output/fewshot_mistral-large-instruct_guv-waisenrente.ttl",
        "valid_shacl": 0,
        "syntax_error": 0,
        "unexpected_error": 1,
        "validation_report": "QualifiedValueShapeConstraintComponent must have at least one sh:qualifiedValueShape predicate.\nFor reference, see https://www.w3.org/TR/shacl/#QualifiedValueShapeConstraintComponent",
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745913822",
        "prompt": "fewshot",
        "model": "mistral-large-instruct",
        "file": "fewshot_mistral-large-instruct_guv-rente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745913822/mistral-large-instruct/output/parsed_output/fewshot_mistral-large-instruct_guv-rente.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "fewshot_1ex3fcv_1745913822",
        "prompt": "fewshot",
        "model": "mistral-large-instruct",
        "file": "fewshot_mistral-large-instruct_uebergangsgeld-behinderung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745913822/mistral-large-instruct/output/parsed_output/fewshot_mistral-large-instruct_uebergangsgeld-behinderung.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (1):\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:lessThanOrEquals ]\n\tFocus Node: [ sh:lessThanOrEquals [ sh:datatype xsd:dateTime ; sh:value Literal(\"P1Y\" = 1 years, 0:00:00, datatype=xsd:duration) ] ; sh:message Literal(\"User must have completed a vocational training within the last year.\", lang=en) ; sh:path ff:hasDate ]\n\tValue Node: [ sh:datatype xsd:dateTime ; sh:value Literal(\"P1Y\" = 1 years, 0:00:00, datatype=xsd:duration) ]\n\tResult Path: sh:lessThanOrEquals\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 1,
        "validation_results": [
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:lessThanOrEquals ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "fewshot_1ex3fcv_1745913822",
        "prompt": "fewshot",
        "model": "mistral-large-instruct",
        "file": "fewshot_mistral-large-instruct_einstiegsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/fewshot_1ex3fcv_1745913822/mistral-large-instruct/output/parsed_output/fewshot_mistral-large-instruct_einstiegsgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746012360",
        "prompt": "cot",
        "model": "qwq-32b",
        "file": "cot_qwq-32b_guv-witwenrente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746012360/qwq-32b/output/parsed_output/cot_qwq-32b_guv-witwenrente.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (2):\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ShapeShape ; sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ]\n\tFocus Node: ( [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:deceasedCivilPartner, ff:deceasedSpouse ; sh:qualifiedMinCount Literal(\"1\", datatype=xsd:integer) ; sh:qualifiedValueShape ff:DeceasedPartnerShape ] )\n\tValue Node: [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:deceasedCivilPartner, ff:deceasedSpouse ; sh:qualifiedMinCount Literal(\"1\", datatype=xsd:integer) ; sh:qualifiedValueShape ff:DeceasedPartnerShape ]\n\tResult Path: ( [ sh:zeroOrMorePath rdf:rest ] rdf:first )\n\tMessage: Value does not conform to Shape shsh:ShapeShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: shsh:ShapeShape\n\t\t\tFocus Node: [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:deceasedCivilPartner, ff:deceasedSpouse ; sh:qualifiedMinCount Literal(\"1\", datatype=xsd:integer) ; sh:qualifiedValueShape ff:DeceasedPartnerShape ]\n\t\t\tValue Node: [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:deceasedCivilPartner, ff:deceasedSpouse ; sh:qualifiedMinCount Literal(\"1\", datatype=xsd:integer) ; sh:qualifiedValueShape ff:DeceasedPartnerShape ]\n\t\t\tMessage: Node [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:deceasedCivilPartner, ff:deceasedSpouse ; sh:qualifiedMinCount Literal(\"1\", datatype=xsd:integer) ; sh:qualifiedValueShape ff:DeceasedPartnerShape ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:deceasedCivilPartner, ff:deceasedSpouse ; sh:qualifiedMinCount Literal(\"1\", datatype=xsd:integer) ; sh:qualifiedValueShape ff:DeceasedPartnerShape ]\n\tValue Node: [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:deceasedCivilPartner, ff:deceasedSpouse ; sh:qualifiedMinCount Literal(\"1\", datatype=xsd:integer) ; sh:qualifiedValueShape ff:DeceasedPartnerShape ]\n\tMessage: Node [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:deceasedCivilPartner, ff:deceasedSpouse ; sh:qualifiedMinCount Literal(\"1\", datatype=xsd:integer) ; sh:qualifiedValueShape ff:DeceasedPartnerShape ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\n",
        "nof_validation_results": 2,
        "validation_results": [
            {
                "source_shape": "[ sh:node shsh:ShapeShape ; sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ]",
                "message": "Value does not conform to Shape shsh:ShapeShape. See details for more information."
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:deceasedCivilPartner, ff:deceasedSpouse ; sh:qualifiedMinCount Literal(\"1\", datatype=xsd:integer) ; sh:qualifiedValueShape ff:DeceasedPartnerShape ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            }
        ]
    },
    {
        "experiment": "cot_1ex3fcv_1746012360",
        "prompt": "cot",
        "model": "qwq-32b",
        "file": "cot_qwq-32b_bildung-und-teilhabe.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746012360/qwq-32b/output/parsed_output/cot_qwq-32b_bildung-und-teilhabe.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746012360",
        "prompt": "cot",
        "model": "qwq-32b",
        "file": "cot_qwq-32b_grundausbildung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746012360/qwq-32b/output/parsed_output/cot_qwq-32b_grundausbildung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746012360",
        "prompt": "cot",
        "model": "qwq-32b",
        "file": "cot_qwq-32b_guv-kinderverletztengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746012360/qwq-32b/output/parsed_output/cot_qwq-32b_guv-kinderverletztengeld.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (2):\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:class ]\n\tFocus Node: [ sh:class [ sh:or ( ff:SchoolAccident ff:KindergartenAccident ) ] ; sh:message Literal(\"You must have had prior entitlement to cash benefits before the accident.\", lang=en) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:wasEntitledToCashBenefitBefore ]\n\tValue Node: [ sh:or ( ff:SchoolAccident ff:KindergartenAccident ) ]\n\tResult Path: sh:class\n\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:class ]\n\tFocus Node: [ sh:class [ sh:or ( ff:SchoolAccident ff:KindergartenAccident ) ] ; sh:message Literal(\"Accident must be school or kindergarten related.\", lang=en) ; sh:path ff:triggeringEvent ]\n\tValue Node: [ sh:or ( ff:SchoolAccident ff:KindergartenAccident ) ]\n\tResult Path: sh:class\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 2,
        "validation_results": [
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:class ]",
                "message": "Value is not of Node Kind sh:IRI"
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:class ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "cot_1ex3fcv_1746012360",
        "prompt": "cot",
        "model": "qwq-32b",
        "file": "cot_qwq-32b_guv-verletztengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746012360/qwq-32b/output/parsed_output/cot_qwq-32b_guv-verletztengeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746012360",
        "prompt": "cot",
        "model": "qwq-32b",
        "file": "cot_qwq-32b_insolvenzgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746012360/qwq-32b/output/parsed_output/cot_qwq-32b_insolvenzgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746012360",
        "prompt": "cot",
        "model": "qwq-32b",
        "file": "cot_qwq-32b_guv-uebergangsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746012360/qwq-32b/output/parsed_output/cot_qwq-32b_guv-uebergangsgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746012360",
        "prompt": "cot",
        "model": "qwq-32b",
        "file": "cot_qwq-32b_kinderzuschlag.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746012360/qwq-32b/output/parsed_output/cot_qwq-32b_kinderzuschlag.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746012360",
        "prompt": "cot",
        "model": "qwq-32b",
        "file": "cot_qwq-32b_guv-waisenrente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746012360/qwq-32b/output/parsed_output/cot_qwq-32b_guv-waisenrente.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (2):\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ShapeShape ; sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ]\n\tFocus Node: ( [ sh:class ( ff:Training ff:School ) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:participates ] [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:cannotSupportThemselvesBecause ; sh:qualifiedValueShape ff:DisabilityWithPermanentReductionShape ] [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isInTransitionalPeriod ] )\n\tValue Node: [ sh:class ( ff:Training ff:School ) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:participates ]\n\tResult Path: ( [ sh:zeroOrMorePath rdf:rest ] rdf:first )\n\tMessage: Value does not conform to Shape shsh:ShapeShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:class ]\n\t\t\tFocus Node: [ sh:class ( ff:Training ff:School ) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:participates ]\n\t\t\tValue Node: ( ff:Training ff:School )\n\t\t\tResult Path: sh:class\n\t\t\tMessage: Value is not of Node Kind sh:IRI\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:class ]\n\tFocus Node: [ sh:class ( ff:Training ff:School ) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:participates ]\n\tValue Node: ( ff:Training ff:School )\n\tResult Path: sh:class\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 2,
        "validation_results": [
            {
                "source_shape": "[ sh:node shsh:ShapeShape ; sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ]",
                "message": "Value does not conform to Shape shsh:ShapeShape. See details for more information."
            },
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:class ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "cot_1ex3fcv_1746012360",
        "prompt": "cot",
        "model": "qwq-32b",
        "file": "cot_qwq-32b_kindergeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746012360/qwq-32b/output/parsed_output/cot_qwq-32b_kindergeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746012360",
        "prompt": "cot",
        "model": "qwq-32b",
        "file": "cot_qwq-32b_aktivierung-und-eingliederung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746012360/qwq-32b/output/parsed_output/cot_qwq-32b_aktivierung-und-eingliederung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746012360",
        "prompt": "cot",
        "model": "qwq-32b",
        "file": "cot_qwq-32b_grundsicherung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746012360/qwq-32b/output/parsed_output/cot_qwq-32b_grundsicherung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746012360",
        "prompt": "cot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "cot_llama-3.1-sauerkrautlm-70b-instruct_kindergeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746012360/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/cot_llama-3.1-sauerkrautlm-70b-instruct_kindergeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746012360",
        "prompt": "cot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "cot_llama-3.1-sauerkrautlm-70b-instruct_grundsicherung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746012360/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/cot_llama-3.1-sauerkrautlm-70b-instruct_grundsicherung.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (2):\nConstraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:node shsh:ShapeShape ; sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ]\n\tFocus Node: ( [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:message Literal(\"User has not reached the age limit under \u00a7 41 SGB XII\", lang=en) ; sh:path ff:aboveSGBXII41AgeLimit ] [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean), ff:ReducedEarningCapacity ; sh:message Literal(\"User is not permanently fully incapacitated for work\", lang=en) ; sh:path ff:hasDisability, ff:hasDisabilityType ] [ sh:hasValue ff:EntryProcedureAndVocationalTrainingArea ; sh:message Literal(\"User does not participate in entry procedure and vocational training area\", lang=en) ; sh:path ff:participates ] )\n\tValue Node: [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean), ff:ReducedEarningCapacity ; sh:message Literal(\"User is not permanently fully incapacitated for work\", lang=en) ; sh:path ff:hasDisability, ff:hasDisabilityType ]\n\tResult Path: ( [ sh:zeroOrMorePath rdf:rest ] rdf:first )\n\tMessage: Value does not conform to Shape shsh:ShapeShape. See details for more information.\n\tDetails:\n\t\tConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\t\t\tSeverity: sh:Violation\n\t\t\tSource Shape: shsh:ShapeShape\n\t\t\tFocus Node: [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean), ff:ReducedEarningCapacity ; sh:message Literal(\"User is not permanently fully incapacitated for work\", lang=en) ; sh:path ff:hasDisability, ff:hasDisabilityType ]\n\t\t\tValue Node: [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean), ff:ReducedEarningCapacity ; sh:message Literal(\"User is not permanently fully incapacitated for work\", lang=en) ; sh:path ff:hasDisability, ff:hasDisabilityType ]\n\t\t\tMessage: Node [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean), ff:ReducedEarningCapacity ; sh:message Literal(\"User is not permanently fully incapacitated for work\", lang=en) ; sh:path ff:hasDisability, ff:hasDisabilityType ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\nConstraint Violation in XoneConstraintComponent (http://www.w3.org/ns/shacl#XoneConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: shsh:ShapeShape\n\tFocus Node: [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean), ff:ReducedEarningCapacity ; sh:message Literal(\"User is not permanently fully incapacitated for work\", lang=en) ; sh:path ff:hasDisability, ff:hasDisabilityType ]\n\tValue Node: [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean), ff:ReducedEarningCapacity ; sh:message Literal(\"User is not permanently fully incapacitated for work\", lang=en) ; sh:path ff:hasDisability, ff:hasDisabilityType ]\n\tMessage: Node [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean), ff:ReducedEarningCapacity ; sh:message Literal(\"User is not permanently fully incapacitated for work\", lang=en) ; sh:path ff:hasDisability, ff:hasDisabilityType ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape\n",
        "nof_validation_results": 2,
        "validation_results": [
            {
                "source_shape": "[ sh:node shsh:ShapeShape ; sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ]",
                "message": "Value does not conform to Shape shsh:ShapeShape. See details for more information."
            },
            {
                "source_shape": "shsh:ShapeShape",
                "message": "Node [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean), ff:ReducedEarningCapacity ; sh:message Literal(\"User is not permanently fully incapacitated for work\", lang=en) ; sh:path ff:hasDisability, ff:hasDisabilityType ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
            }
        ]
    },
    {
        "experiment": "cot_1ex3fcv_1746012360",
        "prompt": "cot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "cot_llama-3.1-sauerkrautlm-70b-instruct_grundausbildung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746012360/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/cot_llama-3.1-sauerkrautlm-70b-instruct_grundausbildung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746012360",
        "prompt": "cot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "cot_llama-3.1-sauerkrautlm-70b-instruct_aktivierung-und-eingliederung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746012360/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/cot_llama-3.1-sauerkrautlm-70b-instruct_aktivierung-und-eingliederung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746012360",
        "prompt": "cot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "cot_llama-3.1-sauerkrautlm-70b-instruct_insolvenzgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746012360/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/cot_llama-3.1-sauerkrautlm-70b-instruct_insolvenzgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746012360",
        "prompt": "cot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "cot_llama-3.1-sauerkrautlm-70b-instruct_guv-witwenrente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746012360/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/cot_llama-3.1-sauerkrautlm-70b-instruct_guv-witwenrente.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746012360",
        "prompt": "cot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "cot_llama-3.1-sauerkrautlm-70b-instruct_uebergangsgeld-behinderung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746012360/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/cot_llama-3.1-sauerkrautlm-70b-instruct_uebergangsgeld-behinderung.ttl",
        "valid_shacl": 0,
        "syntax_error": 0,
        "unexpected_error": 1,
        "validation_report": "QualifiedValueShapeConstraintComponent must have at lease one sh:qualifiedMinCount or sh:qualifiedMaxCount\nFor reference, see https://www.w3.org/TR/shacl/#QualifiedValueShapeConstraintComponent",
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746012360",
        "prompt": "cot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "cot_llama-3.1-sauerkrautlm-70b-instruct_buergergeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746012360/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/cot_llama-3.1-sauerkrautlm-70b-instruct_buergergeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746012360",
        "prompt": "cot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "cot_llama-3.1-sauerkrautlm-70b-instruct_guv-rente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746012360/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/cot_llama-3.1-sauerkrautlm-70b-instruct_guv-rente.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746012360",
        "prompt": "cot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "cot_llama-3.1-sauerkrautlm-70b-instruct_guv-rentenabfindung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746012360/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/cot_llama-3.1-sauerkrautlm-70b-instruct_guv-rentenabfindung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746012360",
        "prompt": "cot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "cot_llama-3.1-sauerkrautlm-70b-instruct_kinderzuschlag.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746012360/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/cot_llama-3.1-sauerkrautlm-70b-instruct_kinderzuschlag.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746012360",
        "prompt": "cot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "cot_llama-3.1-sauerkrautlm-70b-instruct_guv-uebergangsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746012360/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/cot_llama-3.1-sauerkrautlm-70b-instruct_guv-uebergangsgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746012360",
        "prompt": "cot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "cot_llama-3.1-sauerkrautlm-70b-instruct_einstiegsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746012360/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/cot_llama-3.1-sauerkrautlm-70b-instruct_einstiegsgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746012360",
        "prompt": "cot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "cot_llama-3.1-sauerkrautlm-70b-instruct_arbeitslosengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746012360/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/cot_llama-3.1-sauerkrautlm-70b-instruct_arbeitslosengeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746012360",
        "prompt": "cot",
        "model": "llama-3.1-sauerkrautlm-70b-instruct",
        "file": "cot_llama-3.1-sauerkrautlm-70b-instruct_bildung-und-teilhabe.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746012360/llama-3.1-sauerkrautlm-70b-instruct/output/parsed_output/cot_llama-3.1-sauerkrautlm-70b-instruct_bildung-und-teilhabe.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (1):\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:canCoverPersonalBasicNeeds ]\n\tValue Node: Literal(\"false\" = False, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 1,
        "validation_results": [
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "cot_1ex3fcv_1746012360",
        "prompt": "cot",
        "model": "mistral-large-instruct",
        "file": "cot_mistral-large-instruct_buergergeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746012360/mistral-large-instruct/output/parsed_output/cot_mistral-large-instruct_buergergeld.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (1):\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:equals ]\n\tFocus Node: [ sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:message Literal(\"The user must not be able to cover their personal basic needs with their income, assets, and priority benefits.\", lang=en) ; sh:path ff:canCoverPersonalBasicNeeds ]\n\tValue Node: Literal(\"false\" = False, datatype=xsd:boolean)\n\tResult Path: sh:equals\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 1,
        "validation_results": [
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "cot_1ex3fcv_1746012360",
        "prompt": "cot",
        "model": "mistral-large-instruct",
        "file": "cot_mistral-large-instruct_einstiegsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746012360/mistral-large-instruct/output/parsed_output/cot_mistral-large-instruct_einstiegsgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746012360",
        "prompt": "cot",
        "model": "mistral-large-instruct",
        "file": "cot_mistral-large-instruct_guv-rente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746012360/mistral-large-instruct/output/parsed_output/cot_mistral-large-instruct_guv-rente.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746012360",
        "prompt": "cot",
        "model": "mistral-large-instruct",
        "file": "cot_mistral-large-instruct_insolvenzgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746012360/mistral-large-instruct/output/parsed_output/cot_mistral-large-instruct_insolvenzgeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746012360",
        "prompt": "cot",
        "model": "mistral-large-instruct",
        "file": "cot_mistral-large-instruct_krankengeld-begleitperson.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746012360/mistral-large-instruct/output/parsed_output/cot_mistral-large-instruct_krankengeld-begleitperson.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746012360",
        "prompt": "cot",
        "model": "mistral-large-instruct",
        "file": "cot_mistral-large-instruct_berufsausbildungsbeihilfe.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746012360/mistral-large-instruct/output/parsed_output/cot_mistral-large-instruct_berufsausbildungsbeihilfe.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746012360",
        "prompt": "cot",
        "model": "mistral-large-instruct",
        "file": "cot_mistral-large-instruct_ausbildungsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746012360/mistral-large-instruct/output/parsed_output/cot_mistral-large-instruct_ausbildungsgeld.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (1):\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:class ]\n\tFocus Node: [ sh:class [ sh:or ( [ sh:class ff:VocationalTraining ] [ sh:class ff:EntryProcedureAndVocationalTrainingArea ] [ sh:class ff:School ] ) ] ; sh:message Literal(\"Does not meet requirement 'User will participate in one of the specified training measures.'\", lang=en) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:participates ]\n\tValue Node: [ sh:or ( [ sh:class ff:VocationalTraining ] [ sh:class ff:EntryProcedureAndVocationalTrainingArea ] [ sh:class ff:School ] ) ]\n\tResult Path: sh:class\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 1,
        "validation_results": [
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:class ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    },
    {
        "experiment": "cot_1ex3fcv_1746012360",
        "prompt": "cot",
        "model": "mistral-large-instruct",
        "file": "cot_mistral-large-instruct_guv-verletztengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746012360/mistral-large-instruct/output/parsed_output/cot_mistral-large-instruct_guv-verletztengeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746012360",
        "prompt": "cot",
        "model": "mistral-large-instruct",
        "file": "cot_mistral-large-instruct_uebergangsgeld-behinderung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746012360/mistral-large-instruct/output/parsed_output/cot_mistral-large-instruct_uebergangsgeld-behinderung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746012360",
        "prompt": "cot",
        "model": "mistral-large-instruct",
        "file": "cot_mistral-large-instruct_bildung-und-teilhabe.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746012360/mistral-large-instruct/output/parsed_output/cot_mistral-large-instruct_bildung-und-teilhabe.ttl",
        "valid_shacl": 0,
        "syntax_error": 0,
        "unexpected_error": 1,
        "validation_report": "QualifiedValueShapeConstraintComponent must have at lease one sh:qualifiedMinCount or sh:qualifiedMaxCount\nFor reference, see https://www.w3.org/TR/shacl/#QualifiedValueShapeConstraintComponent",
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746012360",
        "prompt": "cot",
        "model": "mistral-large-instruct",
        "file": "cot_mistral-large-instruct_grundausbildung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746012360/mistral-large-instruct/output/parsed_output/cot_mistral-large-instruct_grundausbildung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746012360",
        "prompt": "cot",
        "model": "mistral-large-instruct",
        "file": "cot_mistral-large-instruct_arbeitslosengeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746012360/mistral-large-instruct/output/parsed_output/cot_mistral-large-instruct_arbeitslosengeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746012360",
        "prompt": "cot",
        "model": "mistral-large-instruct",
        "file": "cot_mistral-large-instruct_guv-waisenrente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746012360/mistral-large-instruct/output/parsed_output/cot_mistral-large-instruct_guv-waisenrente.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746012360",
        "prompt": "cot",
        "model": "mistral-large-instruct",
        "file": "cot_mistral-large-instruct_guv-rentenabfindung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746012360/mistral-large-instruct/output/parsed_output/cot_mistral-large-instruct_guv-rentenabfindung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746012360",
        "prompt": "cot",
        "model": "mistral-large-instruct",
        "file": "cot_mistral-large-instruct_kindergeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746012360/mistral-large-instruct/output/parsed_output/cot_mistral-large-instruct_kindergeld.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746012360",
        "prompt": "cot",
        "model": "mistral-large-instruct",
        "file": "cot_mistral-large-instruct_aktivierung-und-eingliederung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746012360/mistral-large-instruct/output/parsed_output/cot_mistral-large-instruct_aktivierung-und-eingliederung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746012360",
        "prompt": "cot",
        "model": "mistral-large-instruct",
        "file": "cot_mistral-large-instruct_grundsicherung.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746012360/mistral-large-instruct/output/parsed_output/cot_mistral-large-instruct_grundsicherung.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746012360",
        "prompt": "cot",
        "model": "mistral-large-instruct",
        "file": "cot_mistral-large-instruct_guv-witwenrente.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746012360/mistral-large-instruct/output/parsed_output/cot_mistral-large-instruct_guv-witwenrente.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746012360",
        "prompt": "cot",
        "model": "mistral-large-instruct",
        "file": "cot_mistral-large-instruct_kinderzuschlag.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746012360/mistral-large-instruct/output/parsed_output/cot_mistral-large-instruct_kinderzuschlag.ttl",
        "valid_shacl": 1,
        "syntax_error": 0,
        "unexpected_error": 0,
        "validation_report": null,
        "nof_validation_results": null,
        "validation_results": null
    },
    {
        "experiment": "cot_1ex3fcv_1746012360",
        "prompt": "cot",
        "model": "mistral-large-instruct",
        "file": "cot_mistral-large-instruct_guv-uebergangsgeld.ttl",
        "path": "/home/seike/Thesis_Local/text-to-SHACL/results/cot_1ex3fcv_1746012360/mistral-large-instruct/output/parsed_output/cot_mistral-large-instruct_guv-uebergangsgeld.ttl",
        "valid_shacl": 0,
        "syntax_error": 1,
        "unexpected_error": 0,
        "validation_report": "SHACL File does not validate against the SHACL Shapes SHACL (MetaSHACL) file.\nValidation Report\nConforms: False\nResults (1):\nConstraint Violation in NodeKindConstraintComponent (http://www.w3.org/ns/shacl#NodeKindConstraintComponent):\n\tSeverity: sh:Violation\n\tSource Shape: [ sh:nodeKind sh:IRI ; sh:path sh:class ]\n\tFocus Node: [ sh:class [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ] ; sh:message Literal(\"Does not meet requirement 'There is a work accident, commuting accident, or recognized occupational disease'.\", lang=en) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasEvent ]\n\tValue Node: [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ]\n\tResult Path: sh:class\n\tMessage: Value is not of Node Kind sh:IRI\n",
        "nof_validation_results": 1,
        "validation_results": [
            {
                "source_shape": "[ sh:nodeKind sh:IRI ; sh:path sh:class ]",
                "message": "Value is not of Node Kind sh:IRI"
            }
        ]
    }
]