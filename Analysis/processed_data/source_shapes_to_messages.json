{
    "[ sh:node shsh:ShapeShape ; sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ]": [
        "Value does not conform to Shape shsh:ShapeShape. See details for more information."
    ],
    "[ sh:node shsh:ListShape ; sh:path sh:and ]": [
        "Value does not conform to Shape shsh:ListShape. See details for more information."
    ],
    "[ sh:nodeKind sh:IRI ; sh:path sh:class ]": [
        "Value is not of Node Kind sh:IRI"
    ],
    "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or ( shsh:PathShape [ sh:nodeKind sh:IRI ] ) ; sh:path sh:path ]": [
        "Less than 1 values on [ sh:class [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ] ; sh:message Literal(\"Must have an insurance event causing work disability.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:property ff:hasEvent ]->sh:path",
        "Less than 1 values on [ sh:class ff:CareNeed ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:needsCare ]->sh:path",
        "Less than 1 values on [ sh:class ff:CareNeed ; sh:predicate ff:needsCare ]->sh:path",
        "Less than 1 values on [ sh:class ff:CommutingAccident, ff:OccupationalDisease, ff:WorkAccident ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasEvent ]->sh:path",
        "Less than 1 values on [ sh:class ff:Disability ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:workforceIntegrationProblemBecause ]->sh:path",
        "Less than 1 values on [ sh:class ff:EmploymentStatus ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasEmploymentStatus ]->sh:path",
        "Less than 1 values on [ sh:class ff:EntryProcedureAndVocationalTrainingArea ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:participates ]->sh:path",
        "Less than 1 values on [ sh:class ff:HearingImpairment, ff:VisualImpairment ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasDisabilityType ]->sh:path",
        "Less than 1 values on [ sh:class ff:Person ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasChild ]->sh:path",
        "Less than 1 values on [ sh:class ff:Person ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:sameHouseholdAs ]->sh:path",
        "Less than 1 values on [ sh:class ff:Person ; sh:message Literal(\"The applicant must be the natural child of the deceased person.\") ; sh:predicate ff:naturalChildTo ; sh:severity sh:Warning ]->sh:path",
        "Less than 1 values on [ sh:class ff:Person ; sh:message Literal(\"The applicant must be the stepchild of the deceased person and lived in the same household.\") ; sh:predicate ff:stepChildTo ; sh:severity sh:Warning ]->sh:path",
        "Less than 1 values on [ sh:class ff:Person ; sh:message Literal(\"The applicant must have lived in the same household as the deceased person.\") ; sh:predicate ff:sameHouseholdAs ; sh:severity sh:Warning ]->sh:path",
        "Less than 1 values on [ sh:class ff:SocialBenefit ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:receivesBenefit ]->sh:path",
        "Less than 1 values on [ sh:class ff:Training ; sh:message Literal(\"The applicant must be in school or vocational training.\") ; sh:predicate ff:participates ; sh:severity sh:Warning ]->sh:path",
        "Less than 1 values on [ sh:class ff:Unemployed ; sh:predicate ff:hasEmploymentStatus ]->sh:path",
        "Less than 1 values on [ sh:class ff:WorkAccident ; sh:message Literal(\"The person must have died due to a work accident or occupational disease.\") ; sh:predicate ff:hasEvent ; sh:severity sh:Warning ]->sh:path",
        "Less than 1 values on [ sh:datatype xsd:boolean ; sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:inEmployment ]->sh:path",
        "Less than 1 values on [ sh:datatype xsd:boolean ; sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:availableForPlacement ]->sh:path",
        "Less than 1 values on [ sh:datatype xsd:boolean ; sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:compulsoryInsuranceFor12In30 ]->sh:path",
        "Less than 1 values on [ sh:datatype xsd:boolean ; sh:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:canCoverPersonalBasicNeeds ]->sh:path",
        "Less than 1 values on [ sh:datatype xsd:boolean ; sh:hasValue ff:FullEarningCapacity ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasEarningCapacity ]->sh:path",
        "Less than 1 values on [ sh:datatype xsd:boolean ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:canCoverPersonalBasicNeeds ; sh:value Literal(\"false\" = False, datatype=xsd:boolean) ]->sh:path",
        "Less than 1 values on [ sh:datatype xsd:boolean ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasDisability ; sh:value Literal(\"true\" = True, datatype=xsd:boolean) ]->sh:path",
        "Less than 1 values on [ sh:datatype xsd:boolean ; sh:message Literal(\"The applicant must be in a transitional period of up to 4 months.\") ; sh:predicate ff:isInTransitionalPeriod ; sh:severity sh:Warning ]->sh:path",
        "Less than 1 values on [ sh:datatype xsd:boolean ; sh:message Literal(\"The applicant must have a disability that prevents them from supporting themselves.\") ; sh:predicate ff:hasDisability ; sh:severity sh:Warning ]->sh:path",
        "Less than 1 values on [ sh:datatype xsd:decimal ; sh:lessThan Literal(\"15\", datatype=xsd:integer) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:workHoursPerWeek ]->sh:path",
        "Less than 1 values on [ sh:datatype xsd:int ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:maxExclusive Literal(\"67\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:minInclusive Literal(\"15\", datatype=xsd:integer) ; sh:predicate ff:hasAge ]->sh:path",
        "Less than 1 values on [ sh:datatype xsd:int ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:minInclusive Literal(\"65\", datatype=xsd:integer) ; sh:predicate ff:hasAge ]->sh:path",
        "Less than 1 values on [ sh:datatype xsd:int ; sh:maxExclusive Literal(\"12\", datatype=xsd:integer) ; sh:minInclusive Literal(\"0\", datatype=xsd:integer) ; sh:predicate ff:hasAge ]->sh:path",
        "Less than 1 values on [ sh:datatype xsd:int ; sh:maxExclusive Literal(\"27\", datatype=xsd:integer) ; sh:message Literal(\"The applicant must be between 18 and 27 years old.\") ; sh:minInclusive Literal(\"18\", datatype=xsd:integer) ; sh:predicate ff:hasAge ; sh:severity sh:Warning ]->sh:path",
        "Less than 1 values on [ sh:defaultValue Literal(\"false\" = False, datatype=xsd:boolean) ; sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:predicate ff:inEmployment ]->sh:path",
        "Less than 1 values on [ sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:predicate ff:availableForPlacement ]->sh:path",
        "Less than 1 values on [ sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:predicate ff:compulsoryInsuranceFor12In30 ]->sh:path",
        "Less than 1 values on [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:message Literal(\"Must be unfit for work due to the insurance event.\") ; sh:property ff:unfitForWork ]->sh:path",
        "Less than 1 values on [ sh:hasValue ff:B100019_LB_102716305 ; sh:predicate ff:receivesBenefit ]->sh:path",
        "Less than 1 values on [ sh:hasValue ff:B100019_LB_576842 ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:message Literal(\"Must receive Verletztengeld from statutory accident insurance.\") ; sh:property ff:receivesBenefit ]->sh:path",
        "Less than 1 values on [ sh:hasValue ff:FederalEmploymentAgency ; sh:predicate ff:hasRehabilitationProvider ]->sh:path",
        "Less than 1 values on [ sh:in ( ff:AsylumSeekerBenefits ff:SocialAssistance ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasNoPriorityClaimsOver ]->sh:path",
        "Less than 1 values on [ sh:in ( ff:B100019_LB_576848 ) ; sh:property ff:isEligibleFor ]->sh:path",
        "Less than 1 values on [ sh:in ( ff:EntryProcedureAndVocationalTrainingArea ff:VocationalTraining ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:participates ]->sh:path",
        "Less than 1 values on [ sh:in ( ff:Germany ) ; sh:property ff:countryOfEmployment ]->sh:path",
        "Less than 1 values on [ sh:in ( ff:InsolvencyProceeding ff:DiscontinuationOfBusiness ff:InsolvencyApplication ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:property ff:hasEvent ]->sh:path",
        "Less than 1 values on [ sh:in ( ff:Unemployed ff:RegisteredUnemployed ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasEmploymentStatus ]->sh:path",
        "Less than 1 values on [ sh:in ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ; sh:predicate ff:hasEvent ]->sh:path",
        "Less than 1 values on [ sh:in ff:OccupationalRehabilitation ; sh:predicate ff:participates ]->sh:path",
        "Less than 1 values on [ sh:max Literal(\"14\", datatype=xsd:integer) ; sh:predicate ff:workHoursPerWeek ]->sh:path",
        "Less than 1 values on [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:object ff:B100019_LB_576842 ; sh:predicate ff:hasNoPriorityClaimsOver ]->sh:path",
        "Less than 1 values on [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:object ff:Germany ; sh:predicate ff:countryOfResidence ]->sh:path",
        "Less than 1 values on [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or [ sh:in ( ff:Germany ) ; sh:property ff:socialSecurityCountry ] ; sh:property [ sh:in ( ff:Germany ) ; sh:property ff:countryOfEmployment ], ff:hasEmployment ]->sh:path",
        "Less than 1 values on [ sh:minCount Literal(\"0\", datatype=xsd:integer) ; sh:predicate ff:receivesBenefit ]->sh:path",
        "Less than 1 values on [ sh:not [ sh:hasValue ff:B100019_LB_103817036 ; sh:path ff:isEligibleFor ] ]->sh:path",
        "Less than 1 values on [ sh:object ff:B100019_LB_576842 ; sh:predicate ff:isEligibleFor ]->sh:path",
        "Less than 1 values on [ sh:or ( [ sh:class [ sh:or ( ff:School ff:VocationalTraining ) ] ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:participates ] [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasDisabilityType ; sh:property [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:reducesWorkProspectsPermanently ] ] [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:isInTransitionalPeriod ] ) ]->sh:path",
        "Less than 1 values on [ sh:or ( [ sh:class ff:OccupationalRehabilitation ; sh:path ff:resultsInTreatment ] [ sh:class ff:WorkAccident ] [ sh:class ff:CommutingAccident ] [ sh:class ff:KindergartenAccident ] [ sh:class ff:SchoolAccident ] [ sh:class ff:OccupationalDisease ] ) ]->sh:path",
        "Less than 1 values on [ sh:or ( [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:deceasedSpouse ] [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:deceasedCivilPartner ] ) ]->sh:path",
        "Less than 1 values on [ sh:or ( [ sh:path ff:deceasedSpouse ; sh:qualifiedMinCount Literal(\"1\", datatype=xsd:integer) ; sh:qualifiedValueShape [ rdf:type sh:NodeShape ; sh:property [ sh:class [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ] ; sh:path ff:causeOfDeath ] ] ] [ sh:path ff:deceasedCivilPartner ; sh:qualifiedMinCount Literal(\"1\", datatype=xsd:integer) ; sh:qualifiedValueShape [ rdf:type sh:NodeShape ; sh:property [ sh:class [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ] ; sh:path ff:causeOfDeath ] ] ] ) ]->sh:path",
        "Less than 1 values on [ sh:or ( [ sh:path ff:hasDisabilityType ; sh:qualifiedMinCount Literal(\"1\", datatype=xsd:integer) ; sh:qualifiedValueShape [ rdf:type sh:NodeShape ; sh:property [ sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:severeDisability ], [ sh:in ( ff:VisualImpairment ff:HearingImpairment ) ; sh:path rdf:type ] ] ] [ sh:path ff:atRiskOfDisabilityType ; sh:qualifiedMinCount Literal(\"1\", datatype=xsd:integer) ; sh:qualifiedValueShape [ rdf:type sh:NodeShape ; sh:property [ sh:in ( ff:VisualImpairment ff:HearingImpairment ) ; sh:path rdf:type ] ] ] ) ]->sh:path",
        "Less than 1 values on [ sh:or ( [ sh:property [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inversePath ff:hasChild ] ; sh:property [ sh:class [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ] ; sh:path ff:causeOfDeath ] ] ] [ sh:property [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:stepChildTo ; sh:property [ sh:class [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ] ; sh:path ff:causeOfDeath ] ] ] [ sh:property [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:fosterChildTo ; sh:property [ sh:class [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ] ; sh:path ff:causeOfDeath ] ] ] [ sh:property [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasPrimaryCareTaker ; sh:property [ sh:class [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ] ; sh:path ff:causeOfDeath ], [ sh:hasValue ff:User ; sh:path ff:sameHouseholdAs ] ] ] ) ]->sh:path",
        "Less than 1 values on [ shacl:datatype xsd:boolean ; shacl:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; shacl:in <http://example.org/earning-capacity-values>, <http://example.org/unfit-for-work> ; shacl:maxCount Literal(\"1\", datatype=xsd:integer) ; shacl:minCount Literal(\"1\", datatype=xsd:integer) ; shacl:targetProperty <http://example.org/hasEarningCapacity> ]->sh:path",
        "Less than 1 values on [ shacl:datatype xsd:boolean ; shacl:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; shacl:in <http://example.org/available-for-placement>, <http://example.org/employment-status-values> ; shacl:maxCount Literal(\"1\", datatype=xsd:integer) ; shacl:minCount Literal(\"1\", datatype=xsd:integer) ; shacl:targetProperty <http://example.org/hasEmploymentStatus> ]->sh:path",
        "Less than 1 values on [ shacl:datatype xsd:boolean ; shacl:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; shacl:in <http://example.org/bundesagentur-fuer-arbeit>, <http://example.org/rehabilitation-providers> ; shacl:maxCount Literal(\"1\", datatype=xsd:integer) ; shacl:minCount Literal(\"1\", datatype=xsd:integer) ; shacl:targetProperty <http://example.org/hasRehabilitationProvider> ]->sh:path",
        "Less than 1 values on [ shacl:datatype xsd:boolean ; shacl:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; shacl:in <http://example.org/disability-types>, <http://example.org/severe-disability> ; shacl:maxCount Literal(\"1\", datatype=xsd:integer) ; shacl:minCount Literal(\"1\", datatype=xsd:integer) ; shacl:targetProperty <http://example.org/hasDisability> ]->sh:path",
        "Less than 1 values on ff:countryOfEmployment->sh:path",
        "Less than 1 values on ff:hasDisability->sh:path",
        "Less than 1 values on ff:hasEarningCapacity->sh:path",
        "Less than 1 values on ff:hasEmployment->sh:path",
        "Less than 1 values on ff:hasEvent->sh:path",
        "Less than 1 values on ff:hasMaritalStatus->sh:path",
        "Less than 1 values on ff:hasRehabilitationProvider->sh:path",
        "Less than 1 values on ff:isEligibleFor->sh:path",
        "Less than 1 values on ff:receivesBenefit->sh:path",
        "Less than 1 values on ff:socialSecurityCountry->sh:path",
        "Less than 1 values on ff:unfitForWork->sh:path",
        "More than 1 values on [ sh:class ff:Training ; sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:commissionedByEmploymentAgency, ff:participates ]->sh:path",
        "More than 1 values on [ sh:class ff:Training ; sh:maxInclusive Literal(\"12\", datatype=xsd:integer) ; sh:path ff:intendedFundingPeriod, ff:monthsAbroad, ff:participates ]->sh:path",
        "More than 1 values on [ sh:class ff:Training ; sh:maxInclusive Literal(\"50\", datatype=xsd:integer) ; sh:path ff:intendedFundingPeriod, ff:monthsAbroad, ff:participates ]->sh:path",
        "More than 1 values on [ sh:class ff:Training ; sh:or ( [ sh:hasValue ff:VocationalTrainingAct ] [ sh:hasValue ff:CraftsCode ] [ sh:hasValue ff:MaritimeLabourAct ] [ sh:hasValue ff:NursingProfessionsAct ] ) ; sh:path ff:participates, ff:recognizedByLaw ]->sh:path",
        "More than 1 values on [ sh:class ff:Training ; sh:or ( [ sh:maxInclusive Literal(\"50\", datatype=xsd:integer) ; sh:minExclusive Literal(\"0\", datatype=xsd:integer) ] [ sh:maxInclusive Literal(\"100\", datatype=xsd:integer), Literal(\"12\", datatype=xsd:integer) ; sh:minExclusive Literal(\"50\", datatype=xsd:integer) ; sh:path ff:monthsAbroad ] ) ; sh:path ff:participates, ff:percentAbroad ]->sh:path",
        "More than 1 values on [ sh:class ff:Training, ff:VocationalTrainingContract ; sh:path ff:participates, ff:subjectToContract ]->sh:path",
        "More than 1 values on [ sh:hasValue [ ] ; sh:path ff:deceasedCivilPartner, ff:deceasedSpouse ]->sh:path",
        "Node [ sh:inverse ff:caregiverInHousehold ; sh:path ff:fullDayAccompaniment, ff:hasEvent, ff:needsCare ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]",
        "Node [ sh:inverse ff:caregiverInHousehold ; sh:path ff:hasDate, ff:hasEvent, ff:needsCare ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]",
        "Node [ sh:inverse ff:caregiverInHousehold ; sh:path ff:hasEvent, ff:inPatientCoAdmission, ff:needsCare ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]",
        "Node [ sh:inverse ff:caregiverInHousehold ; sh:path ff:hasEvent, ff:needsCare ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]",
        "Node [ sh:inverse ff:caregiverInHousehold ; sh:path ff:hasEvent, ff:needsCare, ff:resultsInTreatment ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]",
        "Node [ sh:inverse ff:caregiverInHousehold ; sh:path ff:needsCare ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]",
        "Node [ sh:inverse ff:caregiverInHousehold ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]",
        "Node [ sh:inverse ff:closeRelative ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]",
        "Node [ sh:inverse ff:deceasedCivilPartner, ff:deceasedSpouse, ff:hasChild ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]",
        "Node [ sh:inverse ff:hasEarningCapacity ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]",
        "Node [ sh:inverse ff:hasNoPriorityClaimsOver ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]",
        "Node [ sh:inverse ff:isEligibleFor ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]",
        "Node [ sh:inverse ff:legalUnionBeforeEvent ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]",
        "Node [ sh:inverse ff:receivesBenefit ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]",
        "Node [ sh:inverse ff:resultsInTreatment ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]",
        "Node [ sh:inversePath ff:deceasedCivilPartner, ff:deceasedSpouse ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]",
        "Node [ sh:or ( [ sh:datatype xsd:boolean ; sh:hasValue ff:SchuleBerufsbildende ; sh:path ff:participates ] [ sh:datatype xsd:boolean ; sh:hasValue ff:Prüfungszeugnis ; sh:path ff:participates ] ) ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]",
        "Node [ sh:or ( [ sh:datatype xsd:boolean ; sh:path ff:compulsoryInsuranceFor12In30 ] [ sh:datatype xsd:boolean ; sh:hasValue ff:B100019_LB_576842 ; sh:path ff:receivesBenefit ] [ sh:datatype xsd:boolean ; sh:hasValue ff:UnemploymentBenefitsSVG ; sh:path ff:hasNoPriorityClaimsOver ] ) ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]",
        "Node [ sh:sequence ( ff:hasEarningCapacity ff:triggeringEvent ) ] must conform to one or more shapes in shsh:PathShape , [ sh:nodeKind sh:IRI ]"
    ],
    "shsh:ShapeShape": [
        "Node [ sh:class [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ] ; sh:message Literal(\"Must have an insurance event causing work disability.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:property ff:hasEvent ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ sh:class [ sh:or ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ] ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:sequence ( ff:hasEarningCapacity ff:triggeringEvent ) ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ sh:class ff:CareNeed ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:needsCare ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ sh:class ff:CommutingAccident, ff:OccupationalDisease, ff:WorkAccident ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasEvent ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ sh:class ff:Disability ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:workforceIntegrationProblemBecause ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ sh:class ff:Disability, ff:VocationalTraining ; sh:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; sh:path ff:isFirstVocationalTraining, ff:workforceIntegrationProblemBecause ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ sh:class ff:EmploymentStatus ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasEmploymentStatus ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ sh:class ff:EntryProcedureAndVocationalTrainingArea ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:participates ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ sh:class ff:HearingImpairment, ff:VisualImpairment ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasDisabilityType ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ sh:class ff:Person ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasChild ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ sh:class ff:Person ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:sameHouseholdAs ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ sh:class ff:SocialBenefit ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:receivesBenefit ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ sh:class ff:Training ; sh:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; sh:path ff:commissionedByEmploymentAgency, ff:participates ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ sh:class ff:Training ; sh:maxInclusive Literal(\"12\", datatype=xsd:integer) ; sh:path ff:intendedFundingPeriod, ff:monthsAbroad, ff:participates ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ sh:class ff:Training ; sh:maxInclusive Literal(\"50\", datatype=xsd:integer) ; sh:path ff:intendedFundingPeriod, ff:monthsAbroad, ff:participates ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ sh:class ff:Training ; sh:or ( [ sh:hasValue ff:VocationalTrainingAct ] [ sh:hasValue ff:CraftsCode ] [ sh:hasValue ff:MaritimeLabourAct ] [ sh:hasValue ff:NursingProfessionsAct ] ) ; sh:path ff:participates, ff:recognizedByLaw ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ sh:class ff:Training ; sh:or ( [ sh:maxInclusive Literal(\"50\", datatype=xsd:integer) ; sh:minExclusive Literal(\"0\", datatype=xsd:integer) ] [ sh:maxInclusive Literal(\"100\", datatype=xsd:integer), Literal(\"12\", datatype=xsd:integer) ; sh:minExclusive Literal(\"50\", datatype=xsd:integer) ; sh:path ff:monthsAbroad ] ) ; sh:path ff:participates, ff:percentAbroad ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ sh:class ff:Training, ff:VocationalTrainingContract ; sh:path ff:participates, ff:subjectToContract ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ sh:condition [ rdf:type sh:Shape ; sh:property [ sh:condition [ rdf:type sh:Shape ; sh:property [ sh:condition [ rdf:type sh:Shape ; sh:or <http://recursion.too.deep>, <http://recursion.too.deep> ; sh:property <http://recursion.too.deep> ] ; sh:path ff:triggeringEvent ] ] ; sh:path ff:causeOfDeath ] ] ; sh:path [ sh:inverse ff:closeRelative ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ sh:condition ff:OccupationalRehabilitation ; sh:path [ sh:inverse ff:resultsInTreatment ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ sh:datatype ff:B100019_LB_102730340 ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:hasNoPriorityClaimsOver ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ sh:datatype ff:Person ; sh:message Literal(\"The user must be linked to a caregiver.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:caregiverInHousehold ; sh:path ff:needsCare ] ; sh:severity sh:Violation ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ sh:datatype xsd:boolean ; sh:equals Literal(\"false\" = False, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:inEmployment ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ sh:datatype xsd:boolean ; sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:availableForPlacement ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ sh:datatype xsd:boolean ; sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:compulsoryInsuranceFor12In30 ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ sh:datatype xsd:boolean ; sh:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:canCoverPersonalBasicNeeds ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ sh:datatype xsd:boolean ; sh:hasValue ff:FullEarningCapacity ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasEarningCapacity ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ sh:datatype xsd:boolean ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:canCoverPersonalBasicNeeds ; sh:value Literal(\"false\" = False, datatype=xsd:boolean) ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ sh:datatype xsd:boolean ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasDisability ; sh:value Literal(\"true\" = True, datatype=xsd:boolean) ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ sh:datatype xsd:boolean ; sh:message Literal(\"The medical event must require a full-day accompaniment.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:caregiverInHousehold ; sh:path ff:fullDayAccompaniment, ff:hasEvent, ff:needsCare ] ; sh:severity sh:Violation ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ sh:datatype xsd:boolean ; sh:message Literal(\"The medical event must require hospitalization.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:caregiverInHousehold ; sh:path ff:hasEvent, ff:inPatientCoAdmission, ff:needsCare ] ; sh:severity sh:Violation ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ sh:datatype xsd:dateTime ; sh:message Literal(\"The medical event must have a date.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:caregiverInHousehold ; sh:path ff:hasDate, ff:hasEvent, ff:needsCare ] ; sh:severity sh:Violation ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ sh:datatype xsd:decimal ; sh:lessThan Literal(\"15\", datatype=xsd:integer) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:workHoursPerWeek ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ sh:datatype xsd:int ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:maxExclusive Literal(\"67\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:minInclusive Literal(\"15\", datatype=xsd:integer) ; sh:predicate ff:hasAge ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ sh:datatype xsd:int ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:minInclusive Literal(\"65\", datatype=xsd:integer) ; sh:predicate ff:hasAge ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ sh:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; sh:qualifiedValueShape [ sh:property [ sh:class ff:Disability ; sh:path ff:ruleExemptionBecause ] ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ sh:hasValue [ ] ; sh:path ff:deceasedCivilPartner, ff:deceasedSpouse ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ sh:hasValue ff:B100019_LB_574724 ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:isEligibleFor ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ sh:hasValue ff:B100019_LB_576842 ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:message Literal(\"Must receive Verletztengeld from statutory accident insurance.\") ; sh:property ff:receivesBenefit ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ sh:hasValue ff:B100019_LB_581863 ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:receivesBenefit ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ sh:in ( ff:AsylumSeekerBenefits ff:SocialAssistance ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasNoPriorityClaimsOver ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ sh:in ( ff:EntryProcedureAndVocationalTrainingArea ff:VocationalTraining ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:participates ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ sh:in ( ff:InsolvencyProceeding ff:DiscontinuationOfBusiness ff:InsolvencyApplication ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:property ff:hasEvent ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ sh:in ( ff:Unemployed ff:RegisteredUnemployed ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:predicate ff:hasEmploymentStatus ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:message Literal(\"If you have completed a training program in the last year, the 3-year period is waived.\") ; sh:minCount Literal(\"0\", datatype=xsd:integer) ; sh:path [ sh:or ( [ sh:datatype xsd:boolean ; sh:hasValue ff:SchuleBerufsbildende ; sh:path ff:participates ] [ sh:datatype xsd:boolean ; sh:hasValue ff:Prüfungszeugnis ; sh:path ff:participates ] ) ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:message Literal(\"You must meet one of the three conditions for the 3-year period to be eligible for Übergangsgeld.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:or ( [ sh:datatype xsd:boolean ; sh:path ff:compulsoryInsuranceFor12In30 ] [ sh:datatype xsd:boolean ; sh:hasValue ff:B100019_LB_576842 ; sh:path ff:receivesBenefit ] [ sh:datatype xsd:boolean ; sh:hasValue ff:UnemploymentBenefitsSVG ; sh:path ff:hasNoPriorityClaimsOver ] ) ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:object ff:B100019_LB_576842 ; sh:predicate ff:hasNoPriorityClaimsOver ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:object ff:Germany ; sh:predicate ff:countryOfResidence ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:or [ sh:in ( ff:Germany ) ; sh:property ff:socialSecurityCountry ] ; sh:property [ sh:in ( ff:Germany ) ; sh:property ff:countryOfEmployment ], ff:hasEmployment ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inversePath ff:deceasedCivilPartner, ff:deceasedSpouse ] ; sh:property [ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:node [ sh:or ( [ sh:instance ff:WorkAccident ] [ sh:instance ff:CommutingAccident ] [ sh:instance ff:OccupationalDisease ] ) ] ; sh:path ff:causeOfDeath ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ sh:message Literal(\"The caregiver must be linked to a medical event.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:BlankNodeOrIRI ; sh:path [ sh:inverse ff:caregiverInHousehold ; sh:path ff:hasEvent, ff:needsCare ] ; sh:severity sh:Violation ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ sh:message Literal(\"The medical event must result in a medical treatment.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:BlankNodeOrIRI ; sh:path [ sh:inverse ff:caregiverInHousehold ; sh:path ff:hasEvent, ff:needsCare, ff:resultsInTreatment ] ; sh:severity sh:Violation ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ sh:message Literal(\"You are not a caregiver to the person with disability.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:caregiverInHousehold ] ; sh:property [ sh:message Literal(\"The person with disability does not need care.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:needsCare ; sh:property [ sh:message Literal(\"The care need does not result in medical treatment.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:resultsInTreatment ; sh:property [ sh:message Literal(\"The treatment does not require full day accompaniment.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:fullDayAccompaniment ] ] ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ sh:message Literal(\"You are not a caregiver to the person with disability.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:caregiverInHousehold ] ; sh:property [ sh:message Literal(\"The person with disability does not need care.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:needsCare ; sh:property [ sh:message Literal(\"The care need does not result in medical treatment.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:resultsInTreatment ; sh:property [ sh:message Literal(\"There is no medical treatment event.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasEvent ; sh:property [ sh:message Literal(\"There is no treatment date.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasDate ], [ sh:message Literal(\"You are not married or in a civil union to the person with disability.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:legalUnionBeforeEvent ] ; sh:property [ sh:message Literal(\"The person with disability has no residence permit.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasResidencePermit ; sh:property [ sh:message Literal(\"The residence permit does not entitle to employment.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:entitlesToEmployment ] ] ] ] ] ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ sh:message Literal(\"You are not married or in a civil union to the person with disability.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path [ sh:inverse ff:legalUnionBeforeEvent ] ; sh:property [ sh:message Literal(\"The person with disability has no residence permit.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:hasResidencePermit ; sh:property [ sh:message Literal(\"The residence permit does not entitle to employment.\") ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:entitlesToEmployment ] ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ sh:minCount Literal(\"0\", datatype=xsd:integer) ; sh:predicate ff:receivesBenefit ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ sh:nodeKind sh:BlankNode ; sh:path [ sh:inverse ff:hasEarningCapacity ] ; sh:property [ sh:datatype xsd:boolean ; sh:equals Literal(\"true\" = True, datatype=xsd:boolean) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:isPermanent ], [ sh:datatype xsd:decimal ; sh:equals Literal(\"1.0\", datatype=xsd:decimal) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:reductionInPercent ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ sh:or ( [ sh:in ( ff:WorkAccident ff:CommutingAccident ff:OccupationalDisease ) ; sh:path ff:triggeringEvent ] [ sh:path [ sh:inverse ff:parentalAdress ] ; sh:property [ sh:hasValue ff:User ; sh:path ff:hasPrimaryCareTaker ], [ sh:hasValue ff:User ; sh:path ff:sameHouseholdAs ] ] [ sh:hasValue ff:User ; sh:path ff:hasPrimaryCareTaker ] ) ; sh:path [ sh:inverse ff:deceasedCivilPartner, ff:deceasedSpouse, ff:hasChild ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ sh:or ( [ sh:path ff:WorkAccident ] [ sh:path ff:CommutingAccident ] [ sh:path ff:OccupationalDisease ] ) ; sh:path [ sh:inverse ff:resultsInTreatment ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ sh:or ( [ sh:path ff:hasChild ] [ sh:path ff:stepChildTo ] [ sh:path ff:fosterChildTo ] [ sh:path ff:naturalChildTo ] [ sh:path [ sh:inverse ff:immediateCircleMember ] ] ) ; sh:path [ sh:inverse ff:closeRelative ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ sh:path [ sh:inverse ff:parentalAdress ] ; sh:property [ sh:hasValue ff:User ; sh:path ff:hasPrimaryCareTaker ], [ sh:hasValue ff:User ; sh:path ff:sameHouseholdAs ] ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ shacl:datatype xsd:boolean ; shacl:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; shacl:in <http://example.org/earning-capacity-values>, <http://example.org/unfit-for-work> ; shacl:maxCount Literal(\"1\", datatype=xsd:integer) ; shacl:minCount Literal(\"1\", datatype=xsd:integer) ; shacl:targetProperty <http://example.org/hasEarningCapacity> ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ shacl:datatype xsd:boolean ; shacl:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; shacl:in <http://example.org/available-for-placement>, <http://example.org/employment-status-values> ; shacl:maxCount Literal(\"1\", datatype=xsd:integer) ; shacl:minCount Literal(\"1\", datatype=xsd:integer) ; shacl:targetProperty <http://example.org/hasEmploymentStatus> ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ shacl:datatype xsd:boolean ; shacl:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; shacl:in <http://example.org/bundesagentur-fuer-arbeit>, <http://example.org/rehabilitation-providers> ; shacl:maxCount Literal(\"1\", datatype=xsd:integer) ; shacl:minCount Literal(\"1\", datatype=xsd:integer) ; shacl:targetProperty <http://example.org/hasRehabilitationProvider> ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node [ shacl:datatype xsd:boolean ; shacl:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; shacl:in <http://example.org/disability-types>, <http://example.org/severe-disability> ; shacl:maxCount Literal(\"1\", datatype=xsd:integer) ; shacl:minCount Literal(\"1\", datatype=xsd:integer) ; shacl:targetProperty <http://example.org/hasDisability> ] must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node ff:ReducedEarningCapacity must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node ff:RehabilitationProvider must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node ff:SevereImpairment must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node ff:WillToTrain must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape",
        "Node ff:hasMaritalStatusShape must conform to exactly one shape in shsh:NodeShapeShape , shsh:PropertyShapeShape"
    ],
    "[ sh:nodeKind sh:IRI ; sh:path sh:equals ]": [
        "Value is not of Node Kind sh:IRI"
    ],
    "[ sh:nodeKind sh:IRI ; sh:path sh:lessThan ]": [
        "Value is not of Node Kind sh:IRI"
    ],
    "[ sh:node shsh:ListShape ; sh:path sh:or ]": [
        "Value does not conform to Shape shsh:ListShape. See details for more information."
    ],
    "[ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path sh:path ]": [
        "More than 0 values on [ sh:max Literal(\"0\", datatype=xsd:integer) ; sh:path ff:isPensionable ]->sh:path",
        "More than 0 values on [ sh:max Literal(\"12\", datatype=xsd:integer) ; sh:path ff:hasAge ]->sh:path",
        "More than 0 values on [ sh:minCount Literal(\"0\", datatype=xsd:integer) ; sh:path ff:canCoverBasicNeedsOfBenefitUnit ]->sh:path",
        "More than 0 values on [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:node [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:isNationalOf ] ; sh:path ff:resultsInTreatment ]->sh:path",
        "More than 0 values on [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:isNationalOf ]->sh:path",
        "More than 0 values on [ sh:minInclusive Literal(\"0\", datatype=xsd:integer) ; sh:path ff:personalGrossIncome ]->sh:path",
        "More than 0 values on [ sh:minInclusive Literal(\"15\", datatype=xsd:integer) ; sh:path ff:workHoursPerWeek ]->sh:path"
    ],
    "[ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path sh:minCount ]": [
        "More than 0 values on [ sh:minCount Literal(\"0\", datatype=xsd:integer) ; sh:path ff:canCoverBasicNeedsOfBenefitUnit ]->sh:minCount",
        "More than 0 values on [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:node [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:isNationalOf ] ; sh:path ff:resultsInTreatment ]->sh:minCount",
        "More than 0 values on [ sh:minCount Literal(\"1\", datatype=xsd:integer) ; sh:path ff:isNationalOf ]->sh:minCount"
    ],
    "[ sh:nodeKind sh:IRI ; sh:path sh:lessThanOrEquals ]": [
        "Value is not of Node Kind sh:IRI"
    ],
    "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Literal ; sh:path sh:maxInclusive ]": [
        "More than 1 values on [ sh:maxInclusive Literal(\"100\", datatype=xsd:integer), Literal(\"12\", datatype=xsd:integer) ; sh:minExclusive Literal(\"50\", datatype=xsd:integer) ; sh:path ff:monthsAbroad ]->sh:maxInclusive"
    ],
    "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:nodeKind sh:Literal ; sh:path sh:minInclusive ]": [
        "More than 1 values on [ sh:minInclusive Literal(\"600.00\", datatype=xsd:decimal), Literal(\"900.00\", datatype=xsd:decimal) ]->sh:minInclusive"
    ],
    "[ sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ; sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:path sh:nodeKind ]": [
        "Value sh:BlankNodeOr not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']",
        "Value sh:LITERAL not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']",
        "Value sh:NODE not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']",
        "Value sh:Node not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']",
        "Value sh:NodeShape not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']",
        "Value sh:NodeTest not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']",
        "Value sh:Resource not in list ['sh:BlankNode', 'sh:IRI', 'sh:IRIOrLiteral', 'sh:Literal', 'sh:BlankNodeOrIRI', 'sh:BlankNodeOrLiteral']"
    ],
    "[ sh:maxCount Literal(\"1\", datatype=xsd:integer) ; sh:node shsh:ListShape ; sh:path sh:in ]": [
        "More than 1 values on [ shacl:datatype xsd:boolean ; shacl:hasValue Literal(\"false\" = False, datatype=xsd:boolean) ; shacl:in <http://example.org/earning-capacity-values>, <http://example.org/unfit-for-work> ; shacl:maxCount Literal(\"1\", datatype=xsd:integer) ; shacl:minCount Literal(\"1\", datatype=xsd:integer) ; shacl:targetProperty <http://example.org/hasEarningCapacity> ]->sh:in",
        "More than 1 values on [ shacl:datatype xsd:boolean ; shacl:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; shacl:in <http://example.org/available-for-placement>, <http://example.org/employment-status-values> ; shacl:maxCount Literal(\"1\", datatype=xsd:integer) ; shacl:minCount Literal(\"1\", datatype=xsd:integer) ; shacl:targetProperty <http://example.org/hasEmploymentStatus> ]->sh:in",
        "More than 1 values on [ shacl:datatype xsd:boolean ; shacl:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; shacl:in <http://example.org/bundesagentur-fuer-arbeit>, <http://example.org/rehabilitation-providers> ; shacl:maxCount Literal(\"1\", datatype=xsd:integer) ; shacl:minCount Literal(\"1\", datatype=xsd:integer) ; shacl:targetProperty <http://example.org/hasRehabilitationProvider> ]->sh:in",
        "More than 1 values on [ shacl:datatype xsd:boolean ; shacl:hasValue Literal(\"true\" = True, datatype=xsd:boolean) ; shacl:in <http://example.org/disability-types>, <http://example.org/severe-disability> ; shacl:maxCount Literal(\"1\", datatype=xsd:integer) ; shacl:minCount Literal(\"1\", datatype=xsd:integer) ; shacl:targetProperty <http://example.org/hasDisability> ]->sh:in",
        "Value does not conform to Shape shsh:ListShape. See details for more information."
    ],
    "[ sh:nodeKind sh:IRI ; sh:path sh:disjoint ]": [
        "Value is not of Node Kind sh:IRI"
    ],
    "[ sh:maxCount Literal(\"0\", datatype=xsd:integer) ; sh:path sh:lessThan ]": [
        "More than 0 values on ff:hasMaritalStatusShape->sh:lessThan"
    ]
}